(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    711980,      13639]
NotebookOptionsPosition[    700132,      13452]
NotebookOutlinePosition[    700946,      13479]
CellTagsIndexPosition[    700903,      13476]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\<\
A Computational Method to Predict X-ray Diffraction (XRD) Patterns\
\>", "Title",
 CellChangeTimes->{{3.770055572438499*^9, 3.7700555729498453`*^9}, {
  3.770055604008165*^9, 3.7700556066618843`*^9}, {3.771927131035063*^9, 
  3.7719271543360324`*^9}},ExpressionUUID->"49ab34ee-bfd5-49f5-beef-\
400d3cc456dd"],

Cell["Hamza Alsamraee", "Text",
 CellChangeTimes->{{3.549624168509506*^9, 3.549624171985794*^9}, {
  3.549624508772977*^9, 3.549624510775043*^9}, {3.5498187159613867`*^9, 
  3.5498187170087957`*^9}, {3.549819049020514*^9, 3.5498190533440437`*^9}, {
  3.77005561844785*^9, 3.7700556489651537`*^9}, {3.7719271576177616`*^9, 
  3.771927160556609*^9}},ExpressionUUID->"94536f76-3fd2-4bf6-b228-\
fa93ec9acae9"],

Cell["Mentor: Eryn Gillam", "Text",
 CellChangeTimes->{{3.549624515773694*^9, 3.5496245246892014`*^9}, {
  3.5498187208956137`*^9, 3.5498187221413403`*^9}, {3.5498190558319674`*^9, 
  3.54981906151682*^9}, {3.770055624686027*^9, 3.770055659820487*^9}, {
  3.771927164269448*^9, 3.7719271662707715`*^9}, {3.771927295225708*^9, 
  3.7719272965923347`*^9}},ExpressionUUID->"b70c649b-a958-4202-9f22-\
238ea1f9c7d4"],

Cell[CellGroupData[{

Cell["Description", "Section",
 CellChangeTimes->{{3.77193296140364*^9, 3.771932963937377*^9}, {
  3.771933068992747*^9, 
  3.7719330702631283`*^9}},ExpressionUUID->"b08a98e2-b40f-4f5d-9ad5-\
e711958fef0b"],

Cell["\<\
XRD has been instrumental to the advancement of many fields in both science \
and technology. Each distinct lattice structure has its own XRD fingerprint, \
which scientists use to determine the chemical makeup of the lattice and in \
turn its physical properties. In this project, a large mathematical framework \
was utilized to effectively predict XRD patterns produced by various cubic \
lattice structures.  First, the Bragg peak positions were computed from Bragg\
\[CloseCurlyQuote]s law with high accuracy. Structure factor was also \
computed for both unary and binary systems and used to compute intensity \
alongside plane multiplicity. High accuracy was found for unary systems, but \
binary systems showed less accurate predictions.\
\>", "Text",
 CellChangeTimes->{
  3.7719330732721677`*^9, {3.77193310783705*^9, 
   3.7719332637973185`*^9}},ExpressionUUID->"14cb3bdf-8b0b-4cc9-a982-\
e48fe11e164d"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Getting the Bragg Peak Positions", "Section",
 CellChangeTimes->{{3.7716196816451154`*^9, 3.7716196952744713`*^9}, {
  3.7719255296143513`*^9, 3.7719255302861385`*^9}, {3.7719329287738647`*^9, 
  3.771932954645672*^9}},ExpressionUUID->"7d4341a5-0ac5-4f4a-b9c5-\
e7ffa378cbaa"],

Cell[CellGroupData[{

Cell["Some Data", "Subsubsection",
 CellChangeTimes->{{3.7719265228872395`*^9, 
  3.7719265249597244`*^9}},ExpressionUUID->"b717b4d9-4f09-4acb-b6be-\
75d804a4e0dd"],

Cell["Importing the lattice constant and structure data", "CodeText",
 CellChangeTimes->{{3.7719255342226067`*^9, 
  3.7719255540583563`*^9}},ExpressionUUID->"4f8a5b6e-097f-4983-9ac2-\
ee442e67cce4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"rawdata", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\<C:\\\\Users\\\\hamza\\\\Desktop\\\\project\\\\lattice data.xlsx\>\"",
      ",", " ", "\"\<Data\>\""}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7717578959850082`*^9, 3.771757923633243*^9}},
 CellLabel->
  "In[520]:=",ExpressionUUID->"911ea834-3f6e-4c09-bb65-00028af673b8"],

Cell["Establishing column names and deleting extraneous columns", "CodeText",
 CellChangeTimes->{{3.771925557797301*^9, 3.771925601340914*^9}, {
  3.771925920665171*^9, 
  3.771925944448389*^9}},ExpressionUUID->"d6285229-36bf-45a3-8bd0-\
7fdc7a5b06ff"],

Cell[BoxData[
 RowBox[{
  RowBox[{"latticeAssoc", "=", 
   RowBox[{
    RowBox[{"Function", "[", 
     RowBox[{"u", ",", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<Compound\>\"", "\[Rule]", " ", 
         RowBox[{
         "u", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], ",", 
        RowBox[{"\"\<LatticeConstant\>\"", "\[Rule]", 
         RowBox[{"ToExpression", "[", 
          RowBox[{"u", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}],
           "]"}]}], ",", 
        RowBox[{"\"\<Structure\>\"", "\[Rule]", " ", 
         RowBox[{
         "u", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}]}], 
       "|>"}]}], "]"}], "/@", 
    RowBox[{
     RowBox[{"First", "[", "rawdata", "]"}], "\[LeftDoubleBracket]", 
     RowBox[{"All", ",", 
      RowBox[{"1", ";;", "3"}]}], "\[RightDoubleBracket]"}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7717579269009447`*^9, 3.7717581263980265`*^9}, {
  3.7717583616537576`*^9, 3.771758363745319*^9}},
 CellLabel->
  "In[521]:=",ExpressionUUID->"09e29dab-39c4-4fa4-968f-bd06b3aaa148"],

Cell["Making a dataset", "CodeText",
 CellChangeTimes->{{3.771925947558691*^9, 
  3.7719259537281075`*^9}},ExpressionUUID->"a9aba1e8-3e82-4f7f-b932-\
b99a1d49623c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"latticeDataset", "=", 
  RowBox[{"Dataset", "[", "latticeAssoc", "]"}]}]], "Input",
 CellChangeTimes->{{3.7717581305179667`*^9, 3.771758165788785*^9}},
 CellLabel->
  "In[522]:=",ExpressionUUID->"317b98f0-733c-4d5e-8bf3-c45e925ddd92"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 20, "Length" -> 43, "InitialType" -> TypeSystem`Vector[
          TypeSystem`Struct[{"Compound", "LatticeConstant", "Structure"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[
             TypeSystem`Enumeration["face-centered cubic"]]}], 43], "Shape" -> 
        TypeSystem`PackageScope`HeaderShape[
          
          Association[{All, "Compound"} -> 1, {All, "LatticeConstant"} -> 
           1, {All, "Structure"} -> 1], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`RowShape[
             Association[
             "Compound" -> 
              TypeSystem`PackageScope`AtomShape[38.400000000000006`], 
              "LatticeConstant" -> TypeSystem`PackageScope`AtomShape[60], 
              "Structure" -> TypeSystem`PackageScope`AtomShape[171.]]]], 
           20, {}]], "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[458679650], "Type" -> 
        TypeSystem`Vector[
          TypeSystem`Struct[{"Compound", "LatticeConstant", "Structure"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[
             TypeSystem`Enumeration["face-centered cubic"]]}], 43], "HandleQ" -> 
        True, "RowTarget" -> 20, "Data" -> 
        TypeSystem`PackageScope`CacheHandle[458679650]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 5, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Compound\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Compound\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 947190735][{
                    All, "Compound"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[947190735][
                  GeneralUtilities`Slice[All, "Compound"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"LatticeConstant\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"LatticeConstant\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 947190735][{
                    All, "LatticeConstant"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[947190735][
                  GeneralUtilities`Slice[All, "LatticeConstant"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Structure\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Structure\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 947190735][{
                    All, "Structure"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[947190735][
                  GeneralUtilities`Slice[All, "Structure"]], "Mouse"], 
                Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["AlAs", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[947190735][
                  GeneralUtilities`Slice[1, 
                   Key["Compound"]]], "Mouse"], 
                ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5.6605"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[947190735][
                  GeneralUtilities`Slice[1, 
                   Key["LatticeConstant"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["face-centered cubic", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[947190735][
                  GeneralUtilities`Slice[1, 
                   Key["Structure"]]], "Mouse"], 
                ImageSize -> {{171., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["AlP", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[947190735][
                  GeneralUtilities`Slice[2, 
                   Key["Compound"]]], "Mouse"], 
                ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5.451"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[947190735][
                  GeneralUtilities`Slice[2, 
                   Key["LatticeConstant"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["face-centered cubic", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[947190735][
                  GeneralUtilities`Slice[2, 
                   Key["Structure"]]], "Mouse"], 
                ImageSize -> {{171., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["AlSb", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[947190735][
                  GeneralUtilities`Slice[3, 
                   Key["Compound"]]], "Mouse"], 
                ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["6.1355"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[947190735][
                  GeneralUtilities`Slice[3, 
                   Key["LatticeConstant"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["face-centered cubic", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[947190735][
                  GeneralUtilities`Slice[3, 
                   Key["Structure"]]], "Mouse"], 
                ImageSize -> {{171., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["GaP", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[947190735][
                  GeneralUtilities`Slice[4, 
                   Key["Compound"]]], "Mouse"], 
                ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5.4505"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[947190735][
                  GeneralUtilities`Slice[4, 
                   Key["LatticeConstant"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["face-centered cubic", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[947190735][
                  GeneralUtilities`Slice[4, 
                   Key["Structure"]]], "Mouse"], 
                ImageSize -> {{171., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["GaAs", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[947190735][
                  GeneralUtilities`Slice[5, 
                   Key["Compound"]]], "Mouse"], 
                ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5.653"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[947190735][
                  GeneralUtilities`Slice[5, 
                   Key["LatticeConstant"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["face-centered cubic", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[947190735][
                  GeneralUtilities`Slice[5, 
                   Key["Structure"]]], "Mouse"], 
                ImageSize -> {{171., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["GaSb", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[947190735][
                  GeneralUtilities`Slice[6, 
                   Key["Compound"]]], "Mouse"], 
                ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["6.0959"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[947190735][
                  GeneralUtilities`Slice[6, 
                   Key["LatticeConstant"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["face-centered cubic", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[947190735][
                  GeneralUtilities`Slice[6, 
                   Key["Structure"]]], "Mouse"], 
                ImageSize -> {{171., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["InP", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[947190735][
                  GeneralUtilities`Slice[7, 
                   Key["Compound"]]], "Mouse"], 
                ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5.869"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[947190735][
                  GeneralUtilities`Slice[7, 
                   Key["LatticeConstant"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["face-centered cubic", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[947190735][
                  GeneralUtilities`Slice[7, 
                   Key["Structure"]]], "Mouse"], 
                ImageSize -> {{171., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["InAs", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[947190735][
                  GeneralUtilities`Slice[8, 
                   Key["Compound"]]], "Mouse"], 
                ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["6.0583"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[947190735][
                  GeneralUtilities`Slice[8, 
                   Key["LatticeConstant"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["face-centered cubic", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[947190735][
                  GeneralUtilities`Slice[8, 
                   Key["Structure"]]], "Mouse"], 
                ImageSize -> {{171., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["InSb", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[947190735][
                  GeneralUtilities`Slice[9, 
                   Key["Compound"]]], "Mouse"], 
                ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["6.479"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[947190735][
                  GeneralUtilities`Slice[9, 
                   Key["LatticeConstant"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["face-centered cubic", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[947190735][
                  GeneralUtilities`Slice[9, 
                   Key["Structure"]]], "Mouse"], 
                ImageSize -> {{171., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["MgO", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[947190735][
                  GeneralUtilities`Slice[10, 
                   Key["Compound"]]], "Mouse"], 
                ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.212"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[947190735][
                  GeneralUtilities`Slice[10, 
                   Key["LatticeConstant"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["face-centered cubic", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[947190735][
                  GeneralUtilities`Slice[10, 
                   Key["Structure"]]], "Mouse"], 
                ImageSize -> {{171., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["CdS", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[947190735][
                  GeneralUtilities`Slice[11, 
                   Key["Compound"]]], "Mouse"], 
                ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5.832"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[947190735][
                  GeneralUtilities`Slice[11, 
                   Key["LatticeConstant"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["face-centered cubic", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[947190735][
                  GeneralUtilities`Slice[11, 
                   Key["Structure"]]], "Mouse"], 
                ImageSize -> {{171., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["CdSe", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[947190735][
                  GeneralUtilities`Slice[12, 
                   Key["Compound"]]], "Mouse"], 
                ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["6.05"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[947190735][
                  GeneralUtilities`Slice[12, 
                   Key["LatticeConstant"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["face-centered cubic", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[947190735][
                  GeneralUtilities`Slice[12, 
                   Key["Structure"]]], "Mouse"], 
                ImageSize -> {{171., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["CdTe", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[947190735][
                  GeneralUtilities`Slice[13, 
                   Key["Compound"]]], "Mouse"], 
                ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["6.482"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[947190735][
                  GeneralUtilities`Slice[13, 
                   Key["LatticeConstant"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["face-centered cubic", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[947190735][
                  GeneralUtilities`Slice[13, 
                   Key["Structure"]]], "Mouse"], 
                ImageSize -> {{171., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["ZnO", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[947190735][
                  GeneralUtilities`Slice[14, 
                   Key["Compound"]]], "Mouse"], 
                ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.58"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[947190735][
                  GeneralUtilities`Slice[14, 
                   Key["LatticeConstant"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["face-centered cubic", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[947190735][
                  GeneralUtilities`Slice[14, 
                   Key["Structure"]]], "Mouse"], 
                ImageSize -> {{171., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["ZnS", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[947190735][
                  GeneralUtilities`Slice[15, 
                   Key["Compound"]]], "Mouse"], 
                ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5.42"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[947190735][
                  GeneralUtilities`Slice[15, 
                   Key["LatticeConstant"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["face-centered cubic", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[947190735][
                  GeneralUtilities`Slice[15, 
                   Key["Structure"]]], "Mouse"], 
                ImageSize -> {{171., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["PbS", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[947190735][
                  GeneralUtilities`Slice[16, 
                   Key["Compound"]]], "Mouse"], 
                ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5.9362"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[947190735][
                  GeneralUtilities`Slice[16, 
                   Key["LatticeConstant"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["face-centered cubic", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[947190735][
                  GeneralUtilities`Slice[16, 
                   Key["Structure"]]], "Mouse"], 
                ImageSize -> {{171., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["PbTe", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[947190735][
                  GeneralUtilities`Slice[17, 
                   Key["Compound"]]], "Mouse"], 
                ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["6.462"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[947190735][
                  GeneralUtilities`Slice[17, 
                   Key["LatticeConstant"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["face-centered cubic", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[947190735][
                  GeneralUtilities`Slice[17, 
                   Key["Structure"]]], "Mouse"], 
                ImageSize -> {{171., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["BN", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[947190735][
                  GeneralUtilities`Slice[18, 
                   Key["Compound"]]], "Mouse"], 
                ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3.615"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[947190735][
                  GeneralUtilities`Slice[18, 
                   Key["LatticeConstant"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["face-centered cubic", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[947190735][
                  GeneralUtilities`Slice[18, 
                   Key["Structure"]]], "Mouse"], 
                ImageSize -> {{171., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["BP", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[947190735][
                  GeneralUtilities`Slice[19, 
                   Key["Compound"]]], "Mouse"], 
                ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.538"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[947190735][
                  GeneralUtilities`Slice[19, 
                   Key["LatticeConstant"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["face-centered cubic", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[947190735][
                  GeneralUtilities`Slice[19, 
                   Key["Structure"]]], "Mouse"], 
                ImageSize -> {{171., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["LiF", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[947190735][
                  GeneralUtilities`Slice[20, 
                   Key["Compound"]]], "Mouse"], 
                ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.03"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[947190735][
                  GeneralUtilities`Slice[20, 
                   Key["LatticeConstant"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["face-centered cubic", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[947190735][
                  GeneralUtilities`Slice[20, 
                   Key["Structure"]]], "Mouse"], 
                ImageSize -> {{171., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Deploy[
                 Mouseover[
                  Row[{
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    43 (-20), {1, 43 - -20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ - 20, {
                    1, 43 - -20 + 1}])}], 
                    Pane[
                    Row[{"showing ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    43, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 150, ContentPadding -> False, 
                    Alignment -> {Center, Center}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 20, {
                    1, 43 - 20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    43 20, {1, 43 - 20 + 1}])}]}, "   "], 
                  Row[{
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    43 (-20), {1, 43 - -20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ - 20, {
                    1, 43 - -20 + 1}])}], 
                    Pane[
                    Row[{"showing ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    43, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 150, ContentPadding -> False, 
                    Alignment -> {Center, Center}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 20, {
                    1, 43 - 20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    43 20, {1, 43 - 20 + 1}])}]}, "   "]]], Background -> 
                GrayLevel[0.98], Alignment -> {Left, Top}, 
                BaseStyle -> {ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 947190735}, 
                    1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 947190735}, 
                    10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 947190735}, 
                    30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 947190735}, 
                    100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show all", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 947190735}, 
                    100000000, {}]], MenuEvaluator -> Automatic]}}], 
               SpanFromLeft, SpanFromLeft}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 947190735][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 947190735]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[947190735][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[947190735][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {387., {279., 285.}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{{3.7717581371996994`*^9, 3.7717581664475126`*^9}, 
   3.771758367321863*^9, 3.7718232874272947`*^9},
 CellLabel->
  "Out[522]=",ExpressionUUID->"0baee190-cb5d-40d7-a314-509afa09f17b"]
}, Open  ]],

Cell["\<\
\[OpenCurlyDoubleQuote]toCompound\[CloseCurlyDoubleQuote] converts a \
cation/anion pair to a compound, so it is compatible with the above dataset. \
It takes off the last two characters (indicating charge) and joins \
cation/anion to make the name of a compound\
\>", "CodeText",
 CellChangeTimes->{{3.771925973267023*^9, 3.771925993744487*^9}, {
   3.7719260509355707`*^9, 3.7719260670704746`*^9}, {3.77192611846542*^9, 
   3.7719261375902767`*^9}, {3.7719262718222823`*^9, 3.771926329859587*^9}, {
   3.771926391980352*^9, 3.7719263974678974`*^9}, 
   3.771931747769639*^9},ExpressionUUID->"3d4f1c18-2920-44ba-81f2-\
56ec41322d67"],

Cell[BoxData[
 RowBox[{
  RowBox[{"toCompound", "[", "list_", "]"}], " ", ":=", " ", 
  RowBox[{"StringJoin", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"StringDrop", "[", 
      RowBox[{"#", ",", 
       RowBox[{"-", "2"}]}], "]"}], " ", "&"}], " ", "/@", " ", "list"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.771757524197586*^9, 3.7717575855427556`*^9}, {
  3.7717576227396436`*^9, 3.7717576453137093`*^9}},
 CellLabel->
  "In[527]:=",ExpressionUUID->"ed00e4b6-e50b-4155-9d84-7772ba46f551"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Bragg\[CloseCurlyQuote]s Law", "Subsubsection",
 CellChangeTimes->{{3.771926515316107*^9, 3.771926537527135*^9}, 
   3.7719352692442255`*^9},ExpressionUUID->"194c0e18-ce9a-4d55-8883-\
f84e8b67a185"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
WkFImFuvbxT1cQAyZf8/Z9tzsw==
    "], {{0, 60}, {408, 0}}, {0, 255},
    ColorFunction->GrayLevel],
   BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{299., Automatic},
  ImageSizeRaw->{408, 60},
  PlotRange->{{0, 408}, {0, 60}}]], "Input",ExpressionUUID->"e60ac750-e27d-\
48a6-8ca6-d0af35980929"],

Cell["\<\
Given a d spacing value and a wavelength, this function gives back the Bragg \
peak positions\
\>", "Text",
 CellChangeTimes->{{3.7719267726567583`*^9, 
  3.7719267975600185`*^9}},ExpressionUUID->"d76f6417-00a2-4666-95aa-\
c65a70aba063"],

Cell[BoxData[
 RowBox[{
  RowBox[{"theta", "[", 
   RowBox[{"d_", ",", "w_"}], "]"}], " ", ":=", " ", 
  RowBox[{"2", " ", 
   RowBox[{"ArcSin", "[", 
    RowBox[{"(", 
     RowBox[{"w", "/", 
      RowBox[{"(", " ", 
       RowBox[{"2", "  ", "d"}], ")"}]}], ")"}], "  ", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7714162122131987`*^9, 3.771416217517415*^9}, {
   3.7714171180995045`*^9, 3.7714171245262923`*^9}, {3.7714176545843997`*^9, 
   3.7714177618142776`*^9}, {3.771417808724285*^9, 3.7714178151027036`*^9}, {
   3.7714178656198406`*^9, 3.7714179069634275`*^9}, {3.7714188600584497`*^9, 
   3.771418861184491*^9}, {3.771419118734877*^9, 3.77141916818651*^9}, {
   3.771424521705516*^9, 3.771424559888478*^9}, {3.771424662979726*^9, 
   3.7714246636284485`*^9}, {3.7714275482217975`*^9, 
   3.7714275600478754`*^9}, {3.771427630807605*^9, 3.7714276355463066`*^9}, {
   3.7714277297225256`*^9, 3.7714277341230717`*^9}, {3.771427787668003*^9, 
   3.771427795746505*^9}, {3.7714278742394533`*^9, 3.771427883344904*^9}, {
   3.771428166998955*^9, 3.7714281772070637`*^9}, 3.771428285372571*^9, {
   3.771428399868701*^9, 3.7714284286883354`*^9}, {3.771428586691335*^9, 
   3.7714286523456526`*^9}, 3.771590881141098*^9, 3.771629019017164*^9, {
   3.771926540846015*^9, 3.7719265453449683`*^9}, {3.7719266644636936`*^9, 
   3.771926665465359*^9}},ExpressionUUID->"bf2351a9-6e08-434c-af2c-\
7062cd7aafa3"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Allowed Reflections", "Subsubsection",
 CellChangeTimes->{{3.771926803124782*^9, 
  3.771926806539865*^9}},ExpressionUUID->"07d62227-fd9d-4c1a-9376-\
8177c3a61759"],

Cell["\<\
For different structures, certain planes have no contribution to peak \
intensity. For a body centered cubic unit cell, the total of h+k+l (Miller \
indices) has to be even to have a nonzero structure factor. For a face \
centered cubic unit cell, the parity of the Miller indices has to all be the \
same. To test for the same parity, an EvenQ function was mapped to the list \
of Miller indices; if they are all the same parity, there will be only one \
list element after deleting duplicates.\
\>", "Text",
 CellChangeTimes->{
  3.7719276275840855`*^9, {3.7719334090566664`*^9, 
   3.7719335576503534`*^9}},ExpressionUUID->"7f9e57fe-4a97-46a1-afe3-\
0bf2b1f9a9db"],

Cell[BoxData[
 RowBox[{
  RowBox[{"reflections", "[", 
   RowBox[{"list_", ",", "n_"}], "]"}], ":=", " ", 
  RowBox[{"Drop", "[", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Length", " ", "@", " ", "list"}], "\[Equal]", "1"}], ",", 
      RowBox[{"(", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"ElementData", "[", 
            RowBox[{
             RowBox[{"First", " ", "@", " ", "list"}], ",", 
             "\"\<CrystalStructure\>\""}], "]"}], "[", "\"\<Name\>\"", "]"}], 
          "==", "\"\<body-centered cubic\>\""}], " ", ",", " ", 
         RowBox[{"Select", "[", 
          RowBox[{
           RowBox[{"Flatten", "[", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"h", ",", "k", ",", "l"}], "}"}], " ", ",", 
               RowBox[{"{", 
                RowBox[{"h", ",", "0", ",", "n"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"k", ",", "0", ",", "n"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"l", ",", "0", ",", "n"}], "}"}]}], "]"}], ",", "2"}],
             "]"}], ",", 
           RowBox[{
            RowBox[{"EvenQ", "[", 
             RowBox[{"Total", "[", "#", "]"}], "]"}], "&"}]}], "]"}], ",", 
         " ", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"ElementData", "[", 
              RowBox[{
               RowBox[{"First", " ", "@", " ", "list"}], ",", 
               "\"\<CrystalStructure\>\""}], "]"}], "[", "\"\<Name\>\"", 
             "]"}], "==", "\"\<face-centered cubic\>\""}], ",", 
           RowBox[{"Select", "[", 
            RowBox[{
             RowBox[{"Flatten", "[", 
              RowBox[{
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"h", ",", "k", ",", "l"}], "}"}], " ", ",", 
                 RowBox[{"{", 
                  RowBox[{"h", ",", "0", ",", "n"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"k", ",", "0", ",", "n"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"l", ",", "0", ",", "n"}], "}"}]}], "]"}], ",", 
               "2"}], "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"Length", " ", "@", " ", 
                RowBox[{"DeleteDuplicates", "[", 
                 RowBox[{"EvenQ", "/@", " ", "#"}], "]"}]}], " ", "\[Equal]", 
               "1"}], "&"}]}], "]"}], ",", 
           RowBox[{"{", "}"}]}], "]"}], ",", 
         RowBox[{"{", "}"}]}], "]"}], ")"}], ",", " ", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", " ", "@", " ", "list"}], "\[Equal]", "2"}], ",", 
        " ", 
        RowBox[{"(", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"First", "@", 
             RowBox[{"Normal", "[", 
              RowBox[{"latticeDataset", "[", 
               RowBox[{
                RowBox[{"Select", "[", 
                 RowBox[{
                  RowBox[{"#Compound", "\[Equal]", 
                   RowBox[{"toCompound", "[", "list", "]"}]}], "&"}], "]"}], 
                ",", "\"\<Structure\>\""}], " ", "]"}], "]"}]}], "==", 
            "\"\<body-centered cubic\>\""}], " ", ",", " ", 
           RowBox[{"Select", "[", 
            RowBox[{
             RowBox[{"Flatten", "[", 
              RowBox[{
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"h", ",", "k", ",", "l"}], "}"}], " ", ",", 
                 RowBox[{"{", 
                  RowBox[{"h", ",", "0", ",", "n"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"k", ",", "0", ",", "n"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"l", ",", "0", ",", "n"}], "}"}]}], "]"}], ",", 
               "2"}], "]"}], ",", 
             RowBox[{
              RowBox[{"EvenQ", "[", 
               RowBox[{"Total", "[", "#", "]"}], "]"}], "&"}]}], "]"}], ",", 
           " ", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"First", "@", 
               RowBox[{"Normal", "[", 
                RowBox[{"latticeDataset", "[", 
                 RowBox[{
                  RowBox[{"Select", "[", 
                   RowBox[{
                    RowBox[{"#Compound", "\[Equal]", 
                    RowBox[{"toCompound", "[", "list", "]"}]}], "&"}], "]"}], 
                  ",", "\"\<Structure\>\""}], " ", "]"}], "]"}]}], "==", 
              "\"\<face-centered cubic\>\""}], ",", 
             RowBox[{"Select", "[", 
              RowBox[{
               RowBox[{"Flatten", "[", 
                RowBox[{
                 RowBox[{"Table", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"h", ",", "k", ",", "l"}], "}"}], " ", ",", 
                   RowBox[{"{", 
                    RowBox[{"h", ",", "0", ",", "n"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"k", ",", "0", ",", "n"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"l", ",", "0", ",", "n"}], "}"}]}], "]"}], ",", 
                 "2"}], "]"}], ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"Length", " ", "@", " ", 
                  RowBox[{"DeleteDuplicates", "[", 
                   RowBox[{"EvenQ", "/@", " ", "#"}], "]"}]}], " ", 
                 "\[Equal]", "1"}], "&"}]}], "]"}], ",", 
             RowBox[{"{", "}"}]}], "]"}], ",", 
           RowBox[{"{", "}"}]}], "]"}], ")"}], ",", 
        RowBox[{"{", "}"}]}], "]"}], ",", 
      RowBox[{"{", "}"}]}], "]"}], ",", "1"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7716949534114156`*^9, 3.771695031769801*^9}, {
   3.7717597398041654`*^9, 3.7717597575915155`*^9}, {3.77175980061008*^9, 
   3.771759827629896*^9}, {3.771759865291045*^9, 3.7717599079033976`*^9}, 
   3.7717599481687016`*^9, {3.771760027022003*^9, 3.77176010015147*^9}, {
   3.771760181795833*^9, 3.7717602075445986`*^9}, {3.771760247327346*^9, 
   3.7717602563854675`*^9}, {3.7717602872499404`*^9, 
   3.7717603158239594`*^9}, {3.7717603747579813`*^9, 
   3.7717603909540997`*^9}, {3.7719318637089577`*^9, 3.7719318641701846`*^9}},
 CellLabel->
  "In[744]:=",ExpressionUUID->"219af2f9-2273-433c-989d-da146b802861"],

Cell["Here is an example:", "Text",
 CellChangeTimes->{{3.7719268241366663`*^9, 3.771926855122629*^9}, {
   3.771926910557083*^9, 3.7719270475393267`*^9}, {3.771927323871666*^9, 
   3.771927363739683*^9}, {3.771927616310073*^9, 3.7719276420174294`*^9}, 
   3.7719335768413877`*^9, {3.7719336433823423`*^9, 
   3.771933644178456*^9}},ExpressionUUID->"995df42f-e897-4646-98ca-\
752015a44f44"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"reflections", "[", 
  RowBox[{
   RowBox[{"{", "\"\<Na\>\"", "}"}], ",", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.7717604051909494`*^9, 3.771760449521121*^9}, {
   3.771760725374242*^9, 3.771760737987812*^9}, 3.7717638944699545`*^9, {
   3.7719318666718397`*^9, 3.771931867210269*^9}},
 CellLabel->
  "In[745]:=",ExpressionUUID->"2afe4b09-0303-4561-bdc7-ca53cc044616"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "2", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "2", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "0", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2", ",", "2"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7717604250740952`*^9, 3.77176045137203*^9}, {
   3.771760727758608*^9, 3.7717607404112577`*^9}, 3.7717638956661706`*^9, 
   3.77182328959807*^9, 3.771927658910364*^9, 3.7719318677878036`*^9},
 CellLabel->
  "Out[745]=",ExpressionUUID->"e276dff9-adf0-4ce9-983e-0b057afcf66f"]
}, Open  ]],

Cell["\<\
Now, we proceed to group Miller indices by d spacing \
(\[OpenCurlyDoubleQuote]a\[CloseCurlyDoubleQuote], the lattice constant, is \
left out since it is consistent across all planes).\
\>", "Text",
 CellChangeTimes->{{3.771927667292652*^9, 3.7719277097585783`*^9}, 
   3.7719335826388426`*^9, {3.771933624924253*^9, 
   3.7719336351033225`*^9}},ExpressionUUID->"7feb00cb-7583-4000-9442-\
704a9ee4cb71"],

Cell[BoxData[
 RowBox[{
  RowBox[{"grouped", "[", 
   RowBox[{"list_", ",", "n_"}], "]"}], ":=", 
  RowBox[{"GroupBy", "[", " ", 
   RowBox[{
    RowBox[{"reflections", "[", 
     RowBox[{"list", ",", "n"}], "]"}], ",", 
    RowBox[{
     RowBox[{"1", "/", 
      RowBox[{"Sqrt", "[", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "^", "2"}], "+", 
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "^", "2"}], "+", 
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "3", "]"}], "]"}], "^", "2"}]}], ")"}], "]"}]}], 
     "&"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7715903797108297`*^9, 3.7715905123491683`*^9}, {
   3.7715907086261253`*^9, 3.771590849325184*^9}, {3.7715908976526084`*^9, 
   3.771590915122093*^9}, {3.7715910058318267`*^9, 3.7715910442066784`*^9}, {
   3.7717524345129004`*^9, 3.7717524446558323`*^9}, {3.77175250302732*^9, 
   3.7717525033241425`*^9}, {3.771760795985013*^9, 3.7717607994171734`*^9}, 
   3.771791936857018*^9, {3.771931870829897*^9, 3.77193187145857*^9}},
 CellLabel->
  "In[746]:=",ExpressionUUID->"4127e5d6-fefb-4e03-a122-337c76521e81"],

Cell["Here is an example:", "Text",
 CellChangeTimes->{{3.7719277130282726`*^9, 3.771927720372805*^9}, 
   3.7719336385103827`*^9},ExpressionUUID->"4a5686b0-fe35-4fc7-b9ea-\
a1e2079b8b89"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"grouped", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<Li1+\>\"", ",", "\"\<Cl1-\>\""}], "}"}], ",", "2"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.771504010119361*^9, 3.7715040113968086`*^9}, {
   3.771590829020994*^9, 3.7715908394531183`*^9}, {3.7715910487723446`*^9, 
   3.771591053290662*^9}, {3.7715917677105193`*^9, 3.7715917695023775`*^9}, 
   3.7716831096863394`*^9, {3.771752451287468*^9, 3.7717524698347955`*^9}, {
   3.7717608080551577`*^9, 3.771760826259533*^9}, {3.7717919955967865`*^9, 
   3.7717920002401752`*^9}, {3.771823216876667*^9, 3.7718232246703925`*^9}},
 CellLabel->
  "In[727]:=",ExpressionUUID->"0439b2be-318d-4fd3-8377-606093c4d276"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{
    FractionBox["1", "2"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "2", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "0", ",", "0"}], "}"}]}], "}"}]}], ",", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"2", " ", 
      SqrtBox["2"]}]], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "2", ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "0", ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "2", ",", "0"}], "}"}]}], "}"}]}], ",", 
   RowBox[{
    FractionBox["1", 
     SqrtBox["3"]], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "1"}], "}"}], "}"}]}], ",", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"2", " ", 
      SqrtBox["3"]}]], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"2", ",", "2", ",", "2"}], "}"}], "}"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.771591053799786*^9, 3.7715917702213106`*^9, 3.771616765621388*^9, 
   3.7716831100914145`*^9, 3.77175247058187*^9, 3.771752507236513*^9, 
   3.771753163771962*^9, 3.771753388801078*^9, 3.771755660650905*^9, {
   3.7717608035140705`*^9, 3.7717608293748064`*^9}, 3.7718232899449897`*^9, 
   3.7719279042007284`*^9},
 CellLabel->
  "Out[727]=",ExpressionUUID->"afb0029b-bf99-4fad-b81a-62aa5944917d"]
}, Open  ]],

Cell["\<\
The keys of this function are transformed from the normalized d-spacing to \
theta values. For unary systems, I used the Wolfram database to import the \
lattice constant to obtain accurate d-spacing. For binary systems, a handmade \
dataset was used to extract lattice constants.\
\>", "Text",
 CellChangeTimes->{{3.771927722654911*^9, 3.7719277249449725`*^9}, {
  3.7719277896460285`*^9, 3.771927897107869*^9}, {3.7719336517486258`*^9, 
  3.7719337438309746`*^9}},ExpressionUUID->"ff156f3a-3b4c-4780-abc9-\
eac1637e6b1f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"keytransform", "[", 
   RowBox[{"w_", ",", "list_", ",", "n_"}], "]"}], ":=", 
  RowBox[{"If", "[", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"Length", "@", " ", "list"}], " ", "\[Equal]", "1"}], ",", 
    RowBox[{
     RowBox[{"theta", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"QuantityMagnitude", " ", "[", "\[IndentingNewLine]", 
         RowBox[{"UnitConvert", "[", 
          RowBox[{
           RowBox[{"First", " ", "@", " ", 
            RowBox[{"ElementData", "[", 
             RowBox[{
              RowBox[{"ElementData", "[", 
               RowBox[{
                RowBox[{"First", "@", "list"}], ",", "\"\<StandardName\>\""}],
                "]"}], ",", "\"\<LatticeConstants\>\""}], "]"}]}], ",", 
           "\"\<Angstroms\>\""}], "]"}], "]"}], "*", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"grouped", "[", 
           RowBox[{"list", ",", "n"}], "]"}], " ", "//", "Keys"}], ")"}]}], 
       ",", "w"}], "]"}], "//", "N"}], ",", " ", 
    RowBox[{"If", "[", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"Length", " ", "@", " ", "list"}], " ", "\[Equal]", "2"}], ",",
       " ", 
      RowBox[{
       RowBox[{"theta", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"First", "[", 
           RowBox[{"Normal", "[", 
            RowBox[{"latticeDataset", "[", 
             RowBox[{
              RowBox[{"Select", "[", 
               RowBox[{
                RowBox[{"#Compound", "\[Equal]", 
                 RowBox[{"toCompound", "[", "list", "]"}]}], "&"}], "]"}], 
              ",", "\"\<LatticeConstant\>\""}], " ", "]"}], "]"}], "]"}], "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"grouped", "[", 
             RowBox[{"list", ",", "n"}], "]"}], " ", "//", "Keys"}], ")"}]}], 
         ",", "w"}], "]"}], "//", "N"}], ",", 
      RowBox[{"{", "}"}]}], "]"}], ",", 
    RowBox[{"{", "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.771591520212185*^9, 3.7715916075598097`*^9}, {
   3.771591686350954*^9, 3.7715917068630247`*^9}, {3.771591854821495*^9, 
   3.771591873413877*^9}, {3.771752570070703*^9, 3.7717525741810565`*^9}, {
   3.771752645227953*^9, 3.7717526613019347`*^9}, {3.7717527742653875`*^9, 
   3.7717527869350877`*^9}, 3.7717532478682947`*^9, {3.771760777666301*^9, 
   3.771760786493041*^9}, {3.7717608443727283`*^9, 3.7717608542239237`*^9}, {
   3.7717619968905582`*^9, 3.7717620214438486`*^9}, {3.771762277840576*^9, 
   3.7717622854116616`*^9}, {3.771762948559081*^9, 3.771762983807822*^9}, {
   3.771791920428336*^9, 3.771791927486106*^9}},
 CellLabel->
  "In[683]:=",ExpressionUUID->"12e91e60-818a-4b12-b7df-63ef899fead8"],

Cell["\<\
A list of associations is made so theta values and Miller indices can be \
called easily.\
\>", "Text",
 CellChangeTimes->{{3.771927923632403*^9, 3.771927948993992*^9}, {
  3.77193374868789*^9, 
  3.771933750355324*^9}},ExpressionUUID->"a5053a14-cc4f-433c-b001-\
25b72b02b0ea"],

Cell[BoxData[
 RowBox[{
  RowBox[{"association", "[", 
   RowBox[{"list_", ",", "n_", ",", "w_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Sort", "[", 
   RowBox[{"MapThread", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"#1", "\[Rule]", "#2"}], "&"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"keytransform", "[", 
        RowBox[{"w", ",", "list", ",", "n"}], "]"}], ",", 
       RowBox[{
        RowBox[{"grouped", "[", 
         RowBox[{"list", ",", "n"}], "]"}], "//", "Values"}]}], "}"}]}], 
    "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7715911225761776`*^9, 3.7715911274307103`*^9}, {
   3.771591456253928*^9, 3.771591456697753*^9}, {3.771591495085307*^9, 
   3.771591518450452*^9}, {3.771591672011341*^9, 3.771591673548369*^9}, {
   3.7715917102726235`*^9, 3.7715917878060846`*^9}, {3.771591885525174*^9, 
   3.77159194457747*^9}, {3.7716843957002373`*^9, 3.7716844001420455`*^9}, {
   3.771752559133521*^9, 3.7717525660229435`*^9}, {3.7717526126793957`*^9, 
   3.7717526160513616`*^9}, {3.7717526973697033`*^9, 3.771752706929123*^9}, {
   3.771752801049424*^9, 3.7717528515447006`*^9}, 3.771752882987991*^9, {
   3.771752933593522*^9, 3.7717529479908094`*^9}, {3.771753281305249*^9, 
   3.771753282914499*^9}, {3.771753748935833*^9, 3.771753793002975*^9}, {
   3.7717629935246944`*^9, 3.7717630049360046`*^9}},
 CellLabel->
  "In[685]:=",ExpressionUUID->"e612b39f-8d25-459a-aabd-6d4c911c5c05"],

Cell["Here is an example:", "Text",
 CellChangeTimes->{{3.771927964905162*^9, 3.771927971342371*^9}, {
  3.7719337573208456`*^9, 
  3.77193375811597*^9}},ExpressionUUID->"381925e3-ad10-4830-a161-\
f94bd4ea6715"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"association", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<Na1+\>\"", ",", "\"\<Cl1-\>\""}], "}"}], ",", "3", ",", 
   "1.54"}], "]"}]], "Input",
 CellChangeTimes->{{3.7715917979569836`*^9, 3.7715918087488017`*^9}, {
  3.771684388789858*^9, 3.771684407396338*^9}, {3.771752582416917*^9, 
  3.77175258264353*^9}, {3.771752738142131*^9, 3.771752743722971*^9}, {
  3.771753752428074*^9, 3.7717537979170876`*^9}, {3.771763013660211*^9, 
  3.7717630320882273`*^9}, {3.771763123080227*^9, 3.7717631231553926`*^9}, {
  3.771782642867997*^9, 3.771782651760643*^9}, {3.771823242466733*^9, 
  3.771823249410162*^9}, {3.7718458747640085`*^9, 3.7718458776125727`*^9}},
 CellLabel->
  "In[728]:=",ExpressionUUID->"c9d2bbe7-5b31-4700-819e-99e0f82a3428"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"0.4774581342183228`", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "1"}], "}"}], "}"}]}], ",", 
   RowBox[{"0.5531234431446105`", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "2", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "0", ",", "0"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"0.7929095028389985`", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "2", ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "0", ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "2", ",", "0"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"0.9398100607912042`", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "3", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3", ",", "1", ",", "1"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"0.9852397195984733`", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"2", ",", "2", ",", "2"}], "}"}], "}"}]}], ",", 
   RowBox[{"1.2747749373083623`", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "3", ",", "3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3", ",", "1", ",", "3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3", ",", "3", ",", "1"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"1.5773038421677656`", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"3", ",", "3", ",", "3"}], "}"}], "}"}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.771591809211207*^9, {3.771591877723297*^9, 3.7715919480791745`*^9}, 
   3.77161676577196*^9, 3.771629034582073*^9, {3.7716843923433065`*^9, 
   3.7716844077903852`*^9}, 3.7717525837825823`*^9, 3.771753262150273*^9, 
   3.7717533062465763`*^9, 3.7717534429215117`*^9, 3.7717537528602552`*^9, 
   3.7717538019517717`*^9, 3.7717556608424177`*^9, {3.771763008268902*^9, 
   3.7717630347663355`*^9}, 3.7717631244508734`*^9, {3.7717826455380573`*^9, 
   3.7717826527372017`*^9}, 3.7718232902166786`*^9, 3.77184587808078*^9, 
   3.77186435398984*^9, 3.771927961500104*^9},
 CellLabel->
  "Out[728]=",ExpressionUUID->"1f9c0847-e517-4c57-ad94-59ad55419af8"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Atomic Form Factors", "Section",
 CellChangeTimes->{{3.771619638102322*^9, 
  3.7716196468626175`*^9}},ExpressionUUID->"7f0ecf9d-26e5-412e-9829-\
8a04a30f6884"],

Cell["\<\
Importing another database for values to be used for calculating the atomic \
form factor.\
\>", "CodeText",
 CellChangeTimes->{{3.7719281228972597`*^9, 
  3.7719281462904716`*^9}},ExpressionUUID->"273fb397-f835-4cb6-87e2-\
baa0ca7c91a3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Import", "[", 
  RowBox[{
  "\"\<C:\\\\Users\\\\hamza\\\\Desktop\\\\project\\\\Untitled \
spreadsheet.xlsx\>\"", ",", "\"\<Elements\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.7712547151536684`*^9, 3.771254748912737*^9}},
 CellLabel->
  "In[548]:=",ExpressionUUID->"24ab5fbb-d832-4626-8d62-f56a95ee583d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Data\"\>", ",", "\<\"Dataset\"\>", ",", "\<\"Dimensions\"\>", 
   ",", "\<\"FormattedData\"\>", ",", "\<\"Formulas\"\>", 
   ",", "\<\"Images\"\>", ",", "\<\"SheetCount\"\>", ",", "\<\"Sheets\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.771254750390681*^9, 3.7714525399387465`*^9, 
  3.7715478688164043`*^9, 3.7716167696507807`*^9, 3.771755661275532*^9, 
  3.7718232906628637`*^9},
 CellLabel->
  "Out[548]=",ExpressionUUID->"46ba41e1-81b1-4b96-bb66-19a8b3d01eb0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"atomic", " ", "=", 
  RowBox[{"Import", "[", 
   RowBox[{
   "\"\<C:\\\\Users\\\\hamza\\\\Desktop\\\\project\\\\Untitled \
spreadsheet.xlsx\>\"", ",", "\"\<Dataset\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.771254757254635*^9, 3.771254758202667*^9}, {
  3.7712548182941437`*^9, 3.771254819799492*^9}},
 CellLabel->
  "In[549]:=",ExpressionUUID->"802d1a27-9ab5-4c9b-9c7e-fa364e0b58d8"],

Cell[BoxData[
 RowBox[{"{", 
  TemplateBox[{TagBox[
     DynamicModuleBox[{
      TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
       Data`UnorderedAssociation[
        "RowCount" -> 20, "Length" -> 213, "InitialType" -> TypeSystem`Vector[
           TypeSystem`Tuple[{
             TypeSystem`Atom[String], TypeSystem`AnyType, TypeSystem`AnyType, 
             TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
             TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
             TypeSystem`AnyType}], 213], "Shape" -> 
         TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`RowShape[{
              TypeSystem`PackageScope`AtomShape[38.400000000000006`], 
              TypeSystem`PackageScope`UnknownShape, 
              TypeSystem`PackageScope`UnknownShape, 
              TypeSystem`PackageScope`UnknownShape, 
              TypeSystem`PackageScope`UnknownShape, 
              TypeSystem`PackageScope`UnknownShape, 
              TypeSystem`PackageScope`UnknownShape, 
              TypeSystem`PackageScope`UnknownShape, 
              TypeSystem`PackageScope`UnknownShape, 
              TypeSystem`PackageScope`UnknownShape}]], 20, {}], "InitialData" -> 
         TypeSystem`PackageScope`CacheHandle[1424748797], "Type" -> 
         TypeSystem`Vector[
           TypeSystem`Tuple[{
             TypeSystem`Atom[String], TypeSystem`AnyType, TypeSystem`AnyType, 
             TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
             TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
             TypeSystem`AnyType}], 213], "HandleQ" -> True, "RowTarget" -> 20,
          "Data" -> TypeSystem`PackageScope`CacheHandle[1424748797]], 
       TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
       TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 101, 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
       DynamicModule[{
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
            Style[
             Grid[{{
                Pane[
                 Annotation["Element", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[1, 1]], "Mouse"], 
                 ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation["a1", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[1, 2]], "Mouse"], 
                 ImageSize -> {{19.200000000000003`, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation["b1", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[1, 3]], "Mouse"], 
                 ImageSize -> {{19.200000000000003`, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation["a2", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[1, 4]], "Mouse"], 
                 ImageSize -> {{19.200000000000003`, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation["b2", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[1, 5]], "Mouse"], 
                 ImageSize -> {{19.200000000000003`, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation["a3", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[1, 6]], "Mouse"], 
                 ImageSize -> {{19.200000000000003`, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation["b3", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[1, 7]], "Mouse"], 
                 ImageSize -> {{19.200000000000003`, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation["a4", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[1, 8]], "Mouse"], 
                 ImageSize -> {{19.200000000000003`, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation["b4", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[1, 9]], "Mouse"], 
                 ImageSize -> {{19.200000000000003`, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation["c", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[1, 10]], "Mouse"], 
                 ImageSize -> {{9.600000000000001, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}]}, {
                Pane[
                 Annotation["H", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[2, 1]], "Mouse"], 
                 ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["0.489918"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[2, 2]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["20.6593"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[2, 3]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["0.262003"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[2, 4]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["7.74039"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[2, 5]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["0.196767"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[2, 6]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["49.5519"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[2, 7]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["0.049879"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[2, 8]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["2.20159"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[2, 9]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["0.001305"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[2, 10]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}]}, {
                Pane[
                 Annotation["H1-", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[3, 1]], "Mouse"], 
                 ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["0.897661"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[3, 2]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["53.1368"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[3, 3]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["0.565616"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[3, 4]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["15.187"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[3, 5]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["0.415815"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[3, 6]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["186.576"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[3, 7]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["0.116973"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[3, 8]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["3.56709"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[3, 9]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["0.002389"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[3, 10]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}]}, {
                Pane[
                 Annotation["He", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[4, 1]], "Mouse"], 
                 ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["0.8734"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[4, 2]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["9.1037"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[4, 3]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["0.6309"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[4, 4]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["3.3568"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[4, 5]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["0.3112"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[4, 6]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["22.9276"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[4, 7]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["0.178"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[4, 8]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["0.9821"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[4, 9]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["0.0064"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[4, 10]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}]}, {
                Pane[
                 Annotation["Li", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[5, 1]], "Mouse"], 
                 ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["1.1282"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[5, 2]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["3.9546"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[5, 3]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["0.7508"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[5, 4]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["1.0524"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[5, 5]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["0.6175"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[5, 6]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["85.3905"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[5, 7]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["0.4653"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[5, 8]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["168.261"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[5, 9]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["0.0377"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[5, 10]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}]}, {
                Pane[
                 Annotation["Li1+", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[6, 1]], "Mouse"], 
                 ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["0.6968"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[6, 2]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["4.6237"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[6, 3]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["0.7888"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[6, 4]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["1.9557"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[6, 5]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["0.3414"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[6, 6]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["0.6316"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[6, 7]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["0.1563"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[6, 8]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["10.0953"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[6, 9]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["0.0167"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[6, 10]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}]}, {
                Pane[
                 Annotation["Be", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[7, 1]], "Mouse"], 
                 ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["1.5919"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[7, 2]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["43.6427"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[7, 3]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["1.1278"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[7, 4]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["1.8623"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[7, 5]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["0.5391"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[7, 6]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["103.483"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[7, 7]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["0.7029"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[7, 8]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["0.542"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[7, 9]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["0.0385"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[7, 10]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}]}, {
                Pane[
                 Annotation["Be2+", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[8, 1]], "Mouse"], 
                 ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["6.2603"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[8, 2]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["0.0027"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[8, 3]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["0.8849"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[8, 4]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["0.8313"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[8, 5]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["0.7993"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[8, 6]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["2.2758"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[8, 7]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["0.1647"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[8, 8]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["5.1146"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[8, 9]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["-6.1092"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[8, 10]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}]}, {
                Pane[
                 Annotation["B", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[9, 1]], "Mouse"], 
                 ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["2.0545"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[9, 2]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["23.2185"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[9, 3]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["1.3326"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[9, 4]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["1.021"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[9, 5]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["1.0979"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[9, 6]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["60.3498"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[9, 7]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["0.7068"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[9, 8]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["0.1403"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[9, 9]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["-0.1932"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[9, 10]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}]}, {
                Pane[
                 Annotation["C", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[10, 1]], "Mouse"], 
                 ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["2.31"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[10, 2]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["20.8439"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[10, 3]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["1.02"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[10, 4]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["10.2075"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[10, 5]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["1.5886"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[10, 6]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["0.5687"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[10, 7]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["0.865"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[10, 8]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["51.6512"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[10, 9]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["0.2156"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[10, 10]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}]}, {
                Pane[
                 Annotation["Cval", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[11, 1]], "Mouse"], 
                 ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["2.26069"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[11, 2]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["22.6907"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[11, 3]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["1.56165"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[11, 4]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["0.656665"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[11, 5]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["1.05075"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[11, 6]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["9.75618"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[11, 7]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["0.839259"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[11, 8]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["55.5949"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[11, 9]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["0.286977"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[11, 10]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}]}, {
                Pane[
                 Annotation["N", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[12, 1]], "Mouse"], 
                 ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["12.2126"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[12, 2]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["0.0057"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[12, 3]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["3.1322"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[12, 4]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["9.8933"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[12, 5]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["2.0125"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[12, 6]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["28.9975"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[12, 7]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["1.1663"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[12, 8]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["0.5826"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[12, 9]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["-11.529"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[12, 10]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}]}, {
                Pane[
                 Annotation["O", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[13, 1]], "Mouse"], 
                 ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["3.0485"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[13, 2]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["13.2771"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[13, 3]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["2.2868"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[13, 4]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["5.7011"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[13, 5]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["1.5463"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[13, 6]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["0.3239"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[13, 7]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["0.867"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[13, 8]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["32.9089"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[13, 9]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["0.2508"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[13, 10]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}]}, {
                Pane[
                 Annotation["O1-", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[14, 1]], "Mouse"], 
                 ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["4.1916"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[14, 2]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["12.8573"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[14, 3]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["1.63969"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[14, 4]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["4.17236"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[14, 5]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["1.52673"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[14, 6]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["47.0179"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[14, 7]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["-20.307"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[14, 8]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["-0.01404"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[14, 9]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["21.9412"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[14, 10]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}]}, {
                Pane[
                 Annotation["F", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[15, 1]], "Mouse"], 
                 ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["3.5392"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[15, 2]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["10.2825"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[15, 3]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["2.6412"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[15, 4]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["4.2944"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[15, 5]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["1.517"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[15, 6]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["0.2615"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[15, 7]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["1.0243"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[15, 8]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["26.1476"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[15, 9]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["0.2776"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[15, 10]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}]}, {
                Pane[
                 Annotation["F1-", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[16, 1]], "Mouse"], 
                 ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["3.6322"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[16, 2]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["5.27756"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[16, 3]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["3.51057"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[16, 4]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["14.7353"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[16, 5]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["1.26064"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[16, 6]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["0.442258"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[16, 7]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["0.940706"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[16, 8]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["47.3437"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[16, 9]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["0.653396"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[16, 10]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}]}, {
                Pane[
                 Annotation["Ne", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[17, 1]], "Mouse"], 
                 ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["3.9553"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[17, 2]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["8.4042"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[17, 3]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["3.1125"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[17, 4]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["3.4262"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[17, 5]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["1.4546"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[17, 6]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["0.2306"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[17, 7]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["1.1251"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[17, 8]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["21.7184"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[17, 9]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["0.3515"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[17, 10]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}]}, {
                Pane[
                 Annotation["Na", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[18, 1]], "Mouse"], 
                 ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["4.7626"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[18, 2]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["3.285"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[18, 3]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["3.1736"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[18, 4]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["8.8422"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[18, 5]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["1.2674"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[18, 6]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["0.3136"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[18, 7]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["1.1128"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[18, 8]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["129.424"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[18, 9]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["0.676"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[18, 10]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}]}, {
                Pane[
                 Annotation["Na1+", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[19, 1]], "Mouse"], 
                 ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["3.2565"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[19, 2]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["2.6671"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[19, 3]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["3.9362"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[19, 4]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["6.1153"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[19, 5]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["1.3998"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[19, 6]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["0.2001"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[19, 7]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["1.0032"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[19, 8]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["14.039"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[19, 9]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["0.404"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[19, 10]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}]}, {
                Pane[
                 Annotation["Mg", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[20, 1]], "Mouse"], 
                 ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["5.4204"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[20, 2]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["2.8275"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[20, 3]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["2.1735"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[20, 4]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["79.2611"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[20, 5]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["1.2269"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[20, 6]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["0.3808"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[20, 7]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["2.3073"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[20, 8]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["7.1937"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[20, 9]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["0.8584"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1595635404][
                   GeneralUtilities`Slice[20, 10]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}]}, {
                Item[
                 Deploy[
                  Mouseover[
                   Row[{
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    213 (-20), {1, 213 - -20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ - 20, {
                    1, 213 - -20 + 1}])}], 
                    Pane[
                    Row[{"showing ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    213, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 150, ContentPadding -> False, 
                    Alignment -> {Center, Center}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 20, {
                    1, 213 - 20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    213 20, {1, 213 - 20 + 1}])}]}, "   "], 
                   Row[{
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    213 (-20), {1, 213 - -20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ - 20, {
                    1, 213 - -20 + 1}])}], 
                    Pane[
                    Row[{"showing ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    213, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 150, ContentPadding -> False, 
                    Alignment -> {Center, Center}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 20, {
                    1, 213 - 20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    213 20, {1, 213 - 20 + 1}])}]}, "   "]]], Background -> 
                 GrayLevel[0.98], Alignment -> {Left, Top}, 
                 BaseStyle -> {ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1595635404},
                     1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1595635404},
                     10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1595635404},
                     30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1595635404},
                     100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show all", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1595635404},
                     100000000, {}]], MenuEvaluator -> Automatic]}}], 
                SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
                SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
                SpanFromLeft}}, BaseStyle -> {ContextMenu -> {
                  MenuItem["Copy position to clipboard", 
                   KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                   MenuEvaluator -> Automatic], 
                  MenuItem["Copy data to clipboard", 
                   KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                   MenuEvaluator -> Automatic], Delimiter, 
                  MenuItem["Paste position in new cell", 
                   KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                   MenuEvaluator -> Automatic], 
                  MenuItem["Paste data in new cell", 
                   KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                   MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
                FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
              Dividers -> All, FrameStyle -> GrayLevel[0.85], 
              BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
             LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
             False, ShowAutoStyles -> False]], 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
          TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
         Dynamic[
          TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
             Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
             
             Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
               TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
               TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
              TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
               If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                 TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                 TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1595635404][
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                Not[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
           TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
             TypeSystem`SparseGrid[
              TypeSystem`H["(data no longer present)"]], 
             If[GeneralUtilities`$DebugMode, 
              Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
                TypeSystem`NestedGrid`PackagePrivate`formatState[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
              TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
          TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
         DynamicModuleValues :> {}], 
       TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
       TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`alignBar[
         TypeSystem`NestedGrid`PackagePrivate`$state$$][
          TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
           TypeSystem`PackageScope`Pathbar[
           TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`updateState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1595635404]]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
       TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
         Dynamic[
          Replace[
           MouseAnnotation[Null], {
           TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1595635404][
             Null] -> "", 
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1595635404][
              Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
               Blank[]]] :> (
             TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
              TypeSystem`NestedGrid`PackagePrivate`path; 
             TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
              TypeSystem`NestedGrid`PackagePrivate`path, 
               TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
            Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
         FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
         Top, ImageSize -> {Automatic, 14}]}, 
      DynamicBox[
       ToBoxes[
        Column[
         If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
           TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
           TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
           TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
            TypeSystem`NestedGrid`PackagePrivate`alignBar[
            TypeSystem`NestedGrid`PackagePrivate`$state$$][
            TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
          TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
           TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
           TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
           TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
            TypeSystem`NestedGrid`PackagePrivate`alignBar[
            TypeSystem`NestedGrid`PackagePrivate`$state$$][
            TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
         If[
          TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
           0, {{}, {0, 0.05, 0}}]], StandardForm], 
       ImageSizeCache -> {702., {268., 274.}}, 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`$state$$, 
         TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
      BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
      TypeSystem`NestedGrid`PackagePrivate`deleteState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$], 
      DynamicModuleValues :> {}, Initialization :> 
      Block[{$ContextPath = $ContextPath}, 
        Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("Dataset[<>]"& )], "}"}]], "Output",
 CellChangeTimes->{3.771254759019451*^9, 3.77125483390956*^9, 
  3.771452540293689*^9, 3.7715478691128054`*^9, 3.7716167715048065`*^9, 
  3.7717556617297783`*^9, 3.77182329100381*^9},
 CellLabel->
  "Out[549]=",ExpressionUUID->"efdfeb08-84c6-434d-91ad-61309f725745"]
}, Open  ]],

Cell["Getting the Columns", "CodeText",
 CellChangeTimes->{{3.7716198888627*^9, 
  3.7716199042616496`*^9}},ExpressionUUID->"7422e88c-0282-4416-8fda-\
a81daedd83f7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dataset", "=", 
   RowBox[{"atomic", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.771255277463455*^9, 3.771255283780279*^9}},
 CellLabel->
  "In[551]:=",ExpressionUUID->"adc11658-09d1-4a44-ad41-827700c389ad"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"columns", "=", 
  RowBox[{
   RowBox[{"Normal", "[", "dataset", "]"}], "//", "First"}]}]], "Input",
 CellChangeTimes->{{3.7712554220243015`*^9, 3.771255431015977*^9}},
 CellLabel->
  "In[552]:=",ExpressionUUID->"b482ffde-2999-4311-8490-c8ebe5a76192"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Element\"\>", ",", "\<\"a1\"\>", ",", "\<\"b1\"\>", 
   ",", "\<\"a2\"\>", ",", "\<\"b2\"\>", ",", "\<\"a3\"\>", ",", "\<\"b3\"\>",
    ",", "\<\"a4\"\>", ",", "\<\"b4\"\>", ",", "\<\"c\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.77125543280068*^9, 3.7714525416523438`*^9, 
  3.7715478708407593`*^9, 3.7716167726551785`*^9, 3.7717556625539675`*^9, 
  3.771823292074656*^9},
 CellLabel->
  "Out[552]=",ExpressionUUID->"59bcff04-262d-42b6-a6d3-6c679eda3b71"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"Rest", "[", 
    RowBox[{"Normal", "[", "dataset", "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7712552851115036`*^9, 3.7712553598659143`*^9}, {
  3.771255437556876*^9, 3.7712554538048625`*^9}},
 CellLabel->
  "In[553]:=",ExpressionUUID->"b4118835-f365-4c7d-99aa-f76000695e5b"],

Cell["Making a wolfram dataset", "CodeText",
 CellChangeTimes->{{3.7716199292150145`*^9, 
  3.771619942582611*^9}},ExpressionUUID->"7271def5-0f82-4c05-9c44-\
547b85bd903c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"assocData", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Association", "@@", 
      RowBox[{"MapThread", "[", 
       RowBox[{"Rule", ",", 
        RowBox[{"{", 
         RowBox[{"columns", ",", "#"}], "}"}]}], "]"}]}], "&"}], "/@", 
    "data"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7712554883615456`*^9, 3.7712556152964883`*^9}},
 CellLabel->
  "In[554]:=",ExpressionUUID->"9fd5fcb6-0d46-4100-b022-82f90a3f0c1a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"newDataset", "=", 
   RowBox[{"Dataset", "[", "assocData", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.771255617602958*^9, 3.771255631292887*^9}},
 CellLabel->
  "In[555]:=",ExpressionUUID->"7c1a1124-f595-4f8a-a837-b214d1a3f8c0"],

Cell[CellGroupData[{

Cell[BoxData["newDataset"], "Input",
 CellChangeTimes->{{3.7715830070203676`*^9, 3.771583008673453*^9}},
 CellLabel->
  "In[556]:=",ExpressionUUID->"b27e6995-a3d9-4bb8-9f32-336886eb9170"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 20, "Length" -> 212, "InitialType" -> TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "Element", "a1", "b1", "a2", "b2", "a3", "b3", "a4", "b4", "c"}, {
            TypeSystem`Atom[String], TypeSystem`AnyType, TypeSystem`AnyType, 
            TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
            TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
            TypeSystem`AnyType}], 212], "Shape" -> 
        TypeSystem`PackageScope`HeaderShape[
          
          Association[{All, "Element"} -> 1, {All, "a1"} -> 1, {All, "b1"} -> 
           1, {All, "a2"} -> 1, {All, "b2"} -> 1, {All, "a3"} -> 
           1, {All, "b3"} -> 1, {All, "a4"} -> 1, {All, "b4"} -> 
           1, {All, "c"} -> 1], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`RowShape[
             Association[
             "Element" -> 
              TypeSystem`PackageScope`AtomShape[38.400000000000006`], "a1" -> 
              TypeSystem`PackageScope`UnknownShape, "b1" -> 
              TypeSystem`PackageScope`UnknownShape, "a2" -> 
              TypeSystem`PackageScope`UnknownShape, "b2" -> 
              TypeSystem`PackageScope`UnknownShape, "a3" -> 
              TypeSystem`PackageScope`UnknownShape, "b3" -> 
              TypeSystem`PackageScope`UnknownShape, "a4" -> 
              TypeSystem`PackageScope`UnknownShape, "b4" -> 
              TypeSystem`PackageScope`UnknownShape, "c" -> 
              TypeSystem`PackageScope`UnknownShape]]], 20, {}]], 
        "InitialData" -> TypeSystem`PackageScope`CacheHandle[1104110988], 
        "Type" -> TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "Element", "a1", "b1", "a2", "b2", "a3", "b3", "a4", "b4", "c"}, {
            TypeSystem`Atom[String], TypeSystem`AnyType, TypeSystem`AnyType, 
            TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
            TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
            TypeSystem`AnyType}], 212], "HandleQ" -> True, "RowTarget" -> 20, 
        "Data" -> TypeSystem`PackageScope`CacheHandle[1104110988]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Element\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Element\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 132673559][{
                    All, "Element"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[All, "Element"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"a1\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"a1\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 132673559][{
                    All, "a1"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[All, "a1"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"b1\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"b1\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 132673559][{
                    All, "b1"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[All, "b1"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"a2\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"a2\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 132673559][{
                    All, "a2"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[All, "a2"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"b2\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"b2\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 132673559][{
                    All, "b2"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[All, "b2"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"a3\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"a3\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 132673559][{
                    All, "a3"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[All, "a3"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"b3\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"b3\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 132673559][{
                    All, "b3"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[All, "b3"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"a4\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"a4\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 132673559][{
                    All, "a4"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[All, "a4"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"b4\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"b4\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 132673559][{
                    All, "b4"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[All, "b4"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"c\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"c\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 132673559][{
                    All, "c"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[All, "c"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["H", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[1, 
                   Key["Element"]]], "Mouse"], 
                ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.489918"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[1, 
                   Key["a1"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["20.6593"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[1, 
                   Key["b1"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.262003"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[1, 
                   Key["a2"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["7.74039"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[1, 
                   Key["b2"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.196767"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[1, 
                   Key["a3"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["49.5519"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[1, 
                   Key["b3"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.049879"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[1, 
                   Key["a4"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2.20159"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[1, 
                   Key["b4"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.001305"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[1, 
                   Key["c"]]], "Mouse"], ImageSize -> {{60, Full}, Automatic},
                 Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["H1-", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[2, 
                   Key["Element"]]], "Mouse"], 
                ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.897661"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[2, 
                   Key["a1"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["53.1368"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[2, 
                   Key["b1"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.565616"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[2, 
                   Key["a2"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["15.187"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[2, 
                   Key["b2"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.415815"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[2, 
                   Key["a3"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["186.576"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[2, 
                   Key["b3"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.116973"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[2, 
                   Key["a4"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3.56709"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[2, 
                   Key["b4"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.002389"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[2, 
                   Key["c"]]], "Mouse"], ImageSize -> {{60, Full}, Automatic},
                 Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["He", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[3, 
                   Key["Element"]]], "Mouse"], 
                ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.8734"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[3, 
                   Key["a1"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["9.1037"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[3, 
                   Key["b1"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.6309"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[3, 
                   Key["a2"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3.3568"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[3, 
                   Key["b2"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.3112"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[3, 
                   Key["a3"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["22.9276"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[3, 
                   Key["b3"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.178"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[3, 
                   Key["a4"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.9821"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[3, 
                   Key["b4"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.0064"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[3, 
                   Key["c"]]], "Mouse"], ImageSize -> {{60, Full}, Automatic},
                 Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["Li", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[4, 
                   Key["Element"]]], "Mouse"], 
                ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1.1282"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[4, 
                   Key["a1"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3.9546"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[4, 
                   Key["b1"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.7508"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[4, 
                   Key["a2"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1.0524"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[4, 
                   Key["b2"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.6175"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[4, 
                   Key["a3"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["85.3905"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[4, 
                   Key["b3"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.4653"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[4, 
                   Key["a4"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["168.261"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[4, 
                   Key["b4"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.0377"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[4, 
                   Key["c"]]], "Mouse"], ImageSize -> {{60, Full}, Automatic},
                 Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["Li1+", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[5, 
                   Key["Element"]]], "Mouse"], 
                ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.6968"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[5, 
                   Key["a1"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.6237"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[5, 
                   Key["b1"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.7888"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[5, 
                   Key["a2"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1.9557"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[5, 
                   Key["b2"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.3414"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[5, 
                   Key["a3"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.6316"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[5, 
                   Key["b3"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.1563"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[5, 
                   Key["a4"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["10.0953"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[5, 
                   Key["b4"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.0167"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[5, 
                   Key["c"]]], "Mouse"], ImageSize -> {{60, Full}, Automatic},
                 Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["Be", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[6, 
                   Key["Element"]]], "Mouse"], 
                ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1.5919"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[6, 
                   Key["a1"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["43.6427"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[6, 
                   Key["b1"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1.1278"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[6, 
                   Key["a2"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1.8623"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[6, 
                   Key["b2"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.5391"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[6, 
                   Key["a3"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["103.483"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[6, 
                   Key["b3"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.7029"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[6, 
                   Key["a4"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.542"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[6, 
                   Key["b4"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.0385"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[6, 
                   Key["c"]]], "Mouse"], ImageSize -> {{60, Full}, Automatic},
                 Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["Be2+", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[7, 
                   Key["Element"]]], "Mouse"], 
                ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["6.2603"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[7, 
                   Key["a1"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.0027"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[7, 
                   Key["b1"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.8849"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[7, 
                   Key["a2"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.8313"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[7, 
                   Key["b2"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.7993"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[7, 
                   Key["a3"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2.2758"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[7, 
                   Key["b3"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.1647"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[7, 
                   Key["a4"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5.1146"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[7, 
                   Key["b4"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["-6.1092"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[7, 
                   Key["c"]]], "Mouse"], ImageSize -> {{60, Full}, Automatic},
                 Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["B", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[8, 
                   Key["Element"]]], "Mouse"], 
                ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2.0545"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[8, 
                   Key["a1"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["23.2185"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[8, 
                   Key["b1"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1.3326"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[8, 
                   Key["a2"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1.021"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[8, 
                   Key["b2"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1.0979"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[8, 
                   Key["a3"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["60.3498"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[8, 
                   Key["b3"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.7068"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[8, 
                   Key["a4"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.1403"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[8, 
                   Key["b4"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["-0.1932"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[8, 
                   Key["c"]]], "Mouse"], ImageSize -> {{60, Full}, Automatic},
                 Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["C", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[9, 
                   Key["Element"]]], "Mouse"], 
                ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2.31"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[9, 
                   Key["a1"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["20.8439"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[9, 
                   Key["b1"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1.02"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[9, 
                   Key["a2"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["10.2075"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[9, 
                   Key["b2"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1.5886"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[9, 
                   Key["a3"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.5687"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[9, 
                   Key["b3"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.865"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[9, 
                   Key["a4"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["51.6512"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[9, 
                   Key["b4"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.2156"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[9, 
                   Key["c"]]], "Mouse"], ImageSize -> {{60, Full}, Automatic},
                 Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["Cval", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[10, 
                   Key["Element"]]], "Mouse"], 
                ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2.26069"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[10, 
                   Key["a1"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["22.6907"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[10, 
                   Key["b1"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1.56165"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[10, 
                   Key["a2"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.656665"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[10, 
                   Key["b2"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1.05075"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[10, 
                   Key["a3"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["9.75618"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[10, 
                   Key["b3"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.839259"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[10, 
                   Key["a4"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["55.5949"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[10, 
                   Key["b4"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.286977"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[10, 
                   Key["c"]]], "Mouse"], ImageSize -> {{60, Full}, Automatic},
                 Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["N", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[11, 
                   Key["Element"]]], "Mouse"], 
                ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["12.2126"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[11, 
                   Key["a1"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.0057"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[11, 
                   Key["b1"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3.1322"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[11, 
                   Key["a2"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["9.8933"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[11, 
                   Key["b2"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2.0125"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[11, 
                   Key["a3"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["28.9975"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[11, 
                   Key["b3"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1.1663"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[11, 
                   Key["a4"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.5826"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[11, 
                   Key["b4"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["-11.529"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[11, 
                   Key["c"]]], "Mouse"], ImageSize -> {{60, Full}, Automatic},
                 Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["O", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[12, 
                   Key["Element"]]], "Mouse"], 
                ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3.0485"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[12, 
                   Key["a1"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["13.2771"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[12, 
                   Key["b1"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2.2868"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[12, 
                   Key["a2"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5.7011"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[12, 
                   Key["b2"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1.5463"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[12, 
                   Key["a3"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.3239"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[12, 
                   Key["b3"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.867"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[12, 
                   Key["a4"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["32.9089"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[12, 
                   Key["b4"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.2508"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[12, 
                   Key["c"]]], "Mouse"], ImageSize -> {{60, Full}, Automatic},
                 Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["O1-", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[13, 
                   Key["Element"]]], "Mouse"], 
                ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.1916"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[13, 
                   Key["a1"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["12.8573"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[13, 
                   Key["b1"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1.63969"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[13, 
                   Key["a2"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.17236"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[13, 
                   Key["b2"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1.52673"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[13, 
                   Key["a3"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["47.0179"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[13, 
                   Key["b3"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["-20.307"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[13, 
                   Key["a4"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["-0.01404"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[13, 
                   Key["b4"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["21.9412"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[13, 
                   Key["c"]]], "Mouse"], ImageSize -> {{60, Full}, Automatic},
                 Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["F", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[14, 
                   Key["Element"]]], "Mouse"], 
                ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3.5392"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[14, 
                   Key["a1"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["10.2825"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[14, 
                   Key["b1"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2.6412"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[14, 
                   Key["a2"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.2944"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[14, 
                   Key["b2"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1.517"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[14, 
                   Key["a3"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.2615"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[14, 
                   Key["b3"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1.0243"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[14, 
                   Key["a4"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["26.1476"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[14, 
                   Key["b4"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.2776"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[14, 
                   Key["c"]]], "Mouse"], ImageSize -> {{60, Full}, Automatic},
                 Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["F1-", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[15, 
                   Key["Element"]]], "Mouse"], 
                ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3.6322"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[15, 
                   Key["a1"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5.27756"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[15, 
                   Key["b1"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3.51057"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[15, 
                   Key["a2"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["14.7353"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[15, 
                   Key["b2"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1.26064"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[15, 
                   Key["a3"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.442258"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[15, 
                   Key["b3"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.940706"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[15, 
                   Key["a4"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["47.3437"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[15, 
                   Key["b4"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.653396"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[15, 
                   Key["c"]]], "Mouse"], ImageSize -> {{60, Full}, Automatic},
                 Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["Ne", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[16, 
                   Key["Element"]]], "Mouse"], 
                ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3.9553"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[16, 
                   Key["a1"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["8.4042"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[16, 
                   Key["b1"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3.1125"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[16, 
                   Key["a2"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3.4262"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[16, 
                   Key["b2"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1.4546"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[16, 
                   Key["a3"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.2306"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[16, 
                   Key["b3"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1.1251"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[16, 
                   Key["a4"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["21.7184"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[16, 
                   Key["b4"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.3515"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[16, 
                   Key["c"]]], "Mouse"], ImageSize -> {{60, Full}, Automatic},
                 Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["Na", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[17, 
                   Key["Element"]]], "Mouse"], 
                ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.7626"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[17, 
                   Key["a1"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3.285"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[17, 
                   Key["b1"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3.1736"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[17, 
                   Key["a2"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["8.8422"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[17, 
                   Key["b2"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1.2674"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[17, 
                   Key["a3"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.3136"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[17, 
                   Key["b3"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1.1128"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[17, 
                   Key["a4"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["129.424"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[17, 
                   Key["b4"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.676"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[17, 
                   Key["c"]]], "Mouse"], ImageSize -> {{60, Full}, Automatic},
                 Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["Na1+", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[18, 
                   Key["Element"]]], "Mouse"], 
                ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3.2565"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[18, 
                   Key["a1"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2.6671"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[18, 
                   Key["b1"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3.9362"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[18, 
                   Key["a2"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["6.1153"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[18, 
                   Key["b2"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1.3998"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[18, 
                   Key["a3"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.2001"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[18, 
                   Key["b3"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1.0032"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[18, 
                   Key["a4"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["14.039"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[18, 
                   Key["b4"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.404"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[18, 
                   Key["c"]]], "Mouse"], ImageSize -> {{60, Full}, Automatic},
                 Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["Mg", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[19, 
                   Key["Element"]]], "Mouse"], 
                ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5.4204"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[19, 
                   Key["a1"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2.8275"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[19, 
                   Key["b1"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2.1735"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[19, 
                   Key["a2"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["79.2611"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[19, 
                   Key["b2"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1.2269"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[19, 
                   Key["a3"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.3808"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[19, 
                   Key["b3"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2.3073"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[19, 
                   Key["a4"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["7.1937"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[19, 
                   Key["b4"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.8584"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[19, 
                   Key["c"]]], "Mouse"], ImageSize -> {{60, Full}, Automatic},
                 Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["Mg2+", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[20, 
                   Key["Element"]]], "Mouse"], 
                ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3.4988"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[20, 
                   Key["a1"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2.1676"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[20, 
                   Key["b1"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3.8378"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[20, 
                   Key["a2"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.7542"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[20, 
                   Key["b2"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1.3284"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[20, 
                   Key["a3"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.185"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[20, 
                   Key["b3"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.8497"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[20, 
                   Key["a4"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["10.1411"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[20, 
                   Key["b4"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.4853"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
                  GeneralUtilities`Slice[20, 
                   Key["c"]]], "Mouse"], ImageSize -> {{60, Full}, Automatic},
                 Alignment -> {Left, Baseline}]}, {
               Item[
                Deploy[
                 Mouseover[
                  Row[{
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    212 (-20), {1, 212 - -20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ - 20, {
                    1, 212 - -20 + 1}])}], 
                    Pane[
                    Row[{"showing ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    212, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 150, ContentPadding -> False, 
                    Alignment -> {Center, Center}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 20, {
                    1, 212 - 20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    212 20, {1, 212 - 20 + 1}])}]}, "   "], 
                  Row[{
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    212 (-20), {1, 212 - -20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ - 20, {
                    1, 212 - -20 + 1}])}], 
                    Pane[
                    Row[{"showing ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    212, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 150, ContentPadding -> False, 
                    Alignment -> {Center, Center}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 20, {
                    1, 212 - 20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    212 20, {1, 212 - 20 + 1}])}]}, "   "]]], Background -> 
                GrayLevel[0.98], Alignment -> {Left, Top}, 
                BaseStyle -> {ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 132673559}, 
                    1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 132673559}, 
                    10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 132673559}, 
                    30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 132673559}, 
                    100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show all", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 132673559}, 
                    100000000, {}]], MenuEvaluator -> Automatic]}}], 
               SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
               SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
               SpanFromLeft}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 132673559][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 132673559]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[132673559][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {887., {358.5, 366.5}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{3.77158300949446*^9, 3.771616773045293*^9, 
  3.771755662968036*^9, 3.7718232925879836`*^9},
 CellLabel->
  "Out[556]=",ExpressionUUID->"a9abd206-fea0-439b-a91b-becb41fcb504"]
}, Open  ]],

Cell[TextData[{
 "F is the function that approximates the form factors as a sum of gaussians. \
See",
 ButtonBox[" https://en.wikipedia.org/wiki/Atomic_form_factor",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://en.wikipedia.org/wiki/Atomic_form_factor"], None},
  ButtonNote->"https://en.wikipedia.org/wiki/Atomic_form_factor"]
}], "Text",
 CellChangeTimes->{{3.7716199880364494`*^9, 3.7716199961650662`*^9}, {
  3.771928301339646*^9, 3.771928308245967*^9}, {3.7719283818878856`*^9, 
  3.7719284098692985`*^9}, {3.77192845661969*^9, 3.7719284851444607`*^9}, {
  3.771931898171384*^9, 
  3.7719319026964183`*^9}},ExpressionUUID->"a9520996-58df-4182-b2ee-\
5655613b9088"],

Cell[BoxData[
 RowBox[{
  RowBox[{"F", "[", 
   RowBox[{"{", 
    RowBox[{"a_", ",", "b_", ",", "c_", ",", " ", "w_", ",", " ", "theta_"}], 
    "}"}], "]"}], " ", ":=", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"a", " ", "*", 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"-", "b"}], " ", 
       RowBox[{
        RowBox[{"(", " ", 
         RowBox[{
          RowBox[{"Sin", " ", "[", 
           RowBox[{"theta", "/", "2"}], "]"}], " ", "/", "w"}], ")"}], "^", 
        "2"}]}], "]"}]}], "+", "c"}], " ", ")"}]}]], "Input",ExpressionUUID->\
"8ebb48e4-a448-46a6-8d74-b196fe63fe41"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
MWgPKBUVs2DSQ75SfrkuM6IdqlZ7UcaL+HrKrVr/uLbQav+Le/WgQ93vL1tX
iT4mo+p1fip0xvMRhr1Hu+s7tLwf98qcJaJ5cePRH1e2toRX9/9v176r3nca
xigayIh/KFFdJ6L2XP0/XZtof9O2jo/86kpH4+cuTU3Y3/2yUn51Smfu0vRl
Mqf2XI/+8HNSq4e+t/Zq1z6WzsXSbF4X+2tGsCZ3o9X9ehc/nqlRu7c4bYwc
E/4OfI/BrJykZk4NHarph6jr/dX30GrcJ37nbEOuJQ/a++r7f8tlbm3vRq8v
H5N0j0vSjGrk6vil/uaj///tZ15Zuln8Vxfb1P7+jyvZT1+i36Pv/+PL2eqP
r7RtZrTTr2J7/mPUnqu7yLDgX2XWASoexNAsWj7K81JgSx9ZEkzMzrbUnhrx
2z499OrvdcW3aZ+5Z2OJhvH18Dgu2u/n/em72addA/z493fv88bWIcrHzoId
LJ6kVk30nmh53pbsat72l8utjn4lnUXhulZ87/fXIV68s/QNa6MJG9/iuSiT
9Vn03otPz+7Z/u1LPP/dX6nazai1Fmjx2FzTUdTefZ6663d3/32ETU4Lnypn
1Z71s1FxWAXe2dH4kN0K3ZXJjNpz/WZYJQtrnls93e1hKzORu8KnX7l/qfH6
R/y85WOzp3Roc4dGcDdz3eezh3mr+813X4P+MwFXvt+1isf+lCzmJ6jAV6Za
3lj7tL/5Ua08Q43Ft/957GVi1HxYz+RSe/4q367sv9oyu3/f1WozSaTRKEN/
hbEGvqbyyb70T2N0T732zaj3VHuqYLSwg2rrBcYpjeYVE34iG2pPrO1nxsm+
9wfE8MQ5Nc2P+ofukCuL951N/r6dJ34LO12Achvm8iMlfGZ0hMWIAuODVd2G
lje5Pu5antQpp89Y0uI984kFvdep2dYHPRXF8T61QpvINXtxf932PvFp9/6W
nWIc2fnbq+evR40hVqztVaNrkJHaK7xtLtZ0eEaX7n5fp8Zw/3Sy2X6UKi3Q
32gXbcfOXZod5dfrShOeNwtqT6ztf+YtaF2/CujVcU5N86POkezMQ7uduUr3
iYtQHQFtYxhv9pfwuVk5Sa3gXQIiqugy3QcePNkn24vEbLkwV4qeMfs03FPU
Km5WC+lTmdaer1N3cjXw1r2b1B4PpbjGbjujM2AKzEuxsZ4vox+st95MylfZ
gFF7ESl9/8tI7Znoq/nVnrB4ztgVuvjc+5p583o50qlp9xe7e7KYcRfiwEaW
iQB1Ku5fNFuCG21/uZH0LTm/jcQzvC38slib6caWpzXSqR4Hcd8X77KoyeKq
a5svVWiJTauqh3P2Fq12o50/UfWeRXtBCkb9ccFTO0T/ZCqptP0SSxORkeI3
MU8Eld/gyiy32hNr+3mtJ0fPzSNcDO+UaHE7bR5qz9bCyK+8/EH6QrSqSDP1
yk7V2JjwRy1GgBW5Zlctb6FljBTEiftS1Op9pV+LWXVh3ByNFTMzhNcSW2N3
tf1zNUpM79OMeUdHz8pELFAKRr1xadzc5Q+JWFJp9604jjIH6k1xHpaR2rMx
y2VVe8L+NqtwRlFV29Xe8HJ3LxTj9k5tLjTnomZQM0rQGlH8ZaT1w+I+1fgY
iW2u7SS1zS1PapNT7ZiiZ69+72YroGy7M5/slePm+WN06soGjaXWbhFjyixG
fqdA+84XPzmsArKMI2rUQO1FRb0prq1bjLHNqfbUSnVm7H2Iqdpo0VUj9O65
WjyxXdfQO8s2lzdItYk7FG20EZ7z1GzOI52alei9wjwJouWtWJdUvU/0RanR
cMNYKF4utpi1PF39iBcSGSv75iY778g6Hs2L8xxqT/nwVjRc7hM30u/Dfl7U
m+LaOmpPfbNchc/qlLEXJbBeN3bP1GLm2NHattXw4ZsCyyvGxiI9jnZ4iM+S
FJXxKajlRdm7vqOMcp7cYGcTVpwVTaoi50dKq1duQesipfY2/qXqz9FG1+0e
zpJRLXLNwy+fdYYVmVL1Jmb0etgXwWUFi9mScqk9FWGz8O2jWM3Ns1GkU9OG
q+wYSVRrXYnekecIBH/P/UVRisQitZyktiV6zX9W2osCY8y6LHO7NIea0Te1
eFHOdb/vjJLsbW6Bq6Jdak+PW5F0wJOoPdEiVz8re+zq7LC/vc5eMYkNF1oK
V3vaTmVi9sim9mQvXRwLRc70EO/LxCmLO0o5rByD1V7YyS8hn539W9TeQeo4
SU21vNU2IWKkAtuP7x07RmKlWzZFXMm18upnpXdaeLJv59YEl3WH2huNcJHG
11HO51rVXkCLVLp+qx0wonJQb4pTJLYpW0lbPPcmj9ob3Yk1u9erG+kDRzbx
8sB9FqNr8M66kJXJ/qg9Vddic4XYYRSRrynkJLWwNbF4GebfFFkyD5ZxUw9V
Y8bqaKD8KL2a7BTmjme4U+3p/bNRlNkzqL3HE3IXPy3fLI6cx9rrpu9H7UVF
Kfny1J6eSZ5Z7cnnmOA+HFNP4jrD+jzUx6ViwFY/vTtqr/vrzDmn6qL0k9RG
0YdrK6ndUXuib4Rbo/WOmE1+zq0ZZfznpfXw0+u/PfG3+9SeHu2j+HJHkQbJ
4tRc2bNl2QyK2guI8znSXheuuvn7D1y3IGJerOwdMKP+nySmvsuKG8J9TAz7
q19HRppR/GKCMUvNeAdWwINPIfgvZUtd1QhHovZQe7FZPEnN/PpdWc3WPWEB
MVKjvzwQ0zoaAbblOH4J/gv5HG/rqV1zxj61N5qxo9iTzlF7i7mIYjGrjELi
SEc+osWR/lgM9uxVN9Xp4HULIubFUHuL1y8kK656ikm8j7H25e9Ve6HrevFy
R6sY7ueRusKdxX5k3KMQ3PL2R+3dzotdPXls8m+1l7M9CXUdqd02PYWH57hz
xN2t9uS3R1mJnaT20lxWM3/SSUgWRm2HX840dKC9LlxTvo155XiXOpWYFytc
7Wn/RXSvUBlZcUd3IclelZARY9t1Av9Oz2Yhufd3qAnUXmxmT1Iz78kdzX/r
8W3DyxN3jS16y9fZfP5snJPVd6s9ZSM+UmF/xXPU3ocbUVLaDVp1P38W2vBy
NcZH3490BV4ogXyDbQ+1N5Q+uSfXtX7zWXHPOP1HvDx0l/fG7alxfnVVfyxq
D09uCiZPUitgz3Ngy8uVa++03QZKV8Y4/TBE7WltFmGHz+iKFe7SCMuKr95k
6Z3qTSF79kuh8D25J8TtBZfp9F0aYfPRrm+Q1sNDa4J9am9k31/PvnIoak/0
CvbkRuQheqmAHbnBLW931N7Bcp6YN06NN7vm40hqL4Ilrv49uSEr3zO8RKvl
lW9Qe1GpSu095Z7c0Plo13dIP9yhHrgvA8vIo77aTsXLXZ5C/wK1F5GHk9QK
mFtHLS9h1N7Bcgb6m6PdkX228yie3Ci2vfrVXsDKN0WOm+Dyyjfmd3CVhXpT
3L0l3154FPmu7zhwOsDoSrv2cY1yYKyMQuqO7NszeH9RgKexJMLy9FsgsOUF
ZTZLWM5kI3m/T0Oqrh0rot1qT1mHo9RH20SLaJOBNRzu2Xomg+Reog3llW+K
UyS2UW+Ku7ecpfEQ/54mau+gZ1RcadCNAStHveYM+vS+U6juLyLuIQjO5LOP
Q5l80qKeSyExwoEtL1PU3sMokMxL0+mBi9N88vvCswPa2ZNbv9ob7llYZuVM
tpOyT/eyjXpTXFtH7T1Y35NEQokeeFD/CBtEyKltckxez3gmLEi7yjh4HCON
eKVk8kmJ0gcmrPCbSh3W8qLZwIPLmeQU2Zm78fpwZwLV5c7syrqOUVZiIw94
cTPghhoOL9cyKyfP2rqpvEXHllkmXXabk8ofGFVzSpnOVntyvEqzRyOif0o8
sYCerKJr1rMIDC/3Re0Nc1Gss9eLyOSTEjW/GyzfbLnDWt5sniLXAr6n9V/3
m6vj5+D+J+mFSxO9exvZvCJSftWguWOn2guM3t10Ta32qrMlqbF7LbOybOuz
LShWe529ftFZQixTvNrTqxETbSOr2ksSZxZy8s7qtQa7WcDTUnaElb+LELU3
tKpoo38JmXzSoWybRe18UTPgii5Ro+lIGXZa7GF87fPTtnFwN6122W9RUTb+
BKNP369Ej1K7boL2V+9UewGZfzdfU3tGqlZ72z/ZzFj2YrbX2XLIVYsJb10t
jHbJmY34mS3/SdEqQWXK6clNs6Y/mL1udLX7iwBvnhrnV55yhKi992N/D2PE
ev1a1igT1PJmV0W3mfTh8y/dfeltfv0st3u9NhrLw7TXn9XcHDe9Phpf1Pgb
YLHdqfakDoi0rh2pPRMzSFyGlyufk/t8JueRuO11thxyJ1cxER8lULzaO2kn
2o4y5dmlkaR3SPtGhKvdrTwhs4Mck1csV0ej9tQMbz4fXAmo8bsw/RzU8qQF
WrWcro8+tPfuvnw9/PXuUUzZIUPiJH7Wv/V2RtZKnbfrth1qb5R7IJL9ejSD
1Kj2NmaKF1p6xk4bu73OlEO2KBMZdGtB96DcpdlRfoN2+NPVnlTsgWqve/7r
2esGy0yElZwfVQLukGqnyyd1S3/E3pPo7rMmJ2lEQI3eJnpoUOk3tzwVXz5q
OV2LGkUVdApQeLW9Jt7tvVIjwWZ/+a2GK59p1z9zGmBHrmV1VzeOWWH7ZTbX
Xqs9E7FAcfHtanE0U/dh8inGb68zJZHW9IIifO2jel2Bc5vFHVUZztLYuWPW
zQ7tX4bkKo5gOxyeWdBfDS8Xn7KyI+091+mubhlrDqNmkSLnUvFyUasu2SS6
fjbynHSt7NfoMy0H+pgqw1bl1faYxZbeew9mxonRfvNN/qHwPTsjL1Q0C7HF
rA5x2TLeqmc40/5StNfJ75EWHPKdRkS19aKip/vyG8yWlEHtDXch4Bne86Su
fi7onMUN3zu0uZCMe4OXakGdjlbqe88dvr8oUp1YQo0vhXpldrU8pRq6uzC2
9o18u0LNHPImhtrh+969oNH6Z7hwtfBZJNwrq1ZxEfulxdOY4iJqOBuXImaQ
meecqr1OfJPsSQVqEruoO1ugJWN07o2JuMMMak+sezf/zS3i9rIemabaSIyT
KQdfa0jGvWHMms8NoPfs7I3aG+5mYTFm1ig168psLTa3PD0DdqPUyGrU9T7R
/oWX4lAfU1aa9Wy6t08vaBxfs0WFtS13h/i81liro9CxXM4rd0C+LXRFslLH
+wpgZrwVan32SaRqr4ulKdLfaBflCS1wXTM6JdtETP35ak+NtpvsWa5HtaP8
Bq2n1n2R6uRHn6AWtxbv9zDj7vQCDNeJU9tnRWddsdE3d9bER6bN/P42P72L
niLUXq8n1JzY/Uy1Y3+vDvuulJJa20U8s/ei/+2rGFeW1Z5Wb+sqU36+2+e5
+Gk5/8ffAyrfVOk59Ov16Z22w7OY13oJ2+vDdymf/Zn3qXZCsklZRJ+Snbs0
fZlyqL2XkJ2ufWTERmuLuMeR7DN+Vgyy04tRYGKN2t91uXrZG7V3L12x1igb
qD1+Jqzuu2uypeV9/DWTlbtrT98PV7yoz+zKOb5Q3g32vWXrfpeVRf5gsa+O
PvvXWkYXvSe305xL2XyHNwksEirqsFLPobeKPDwV0VZ+Fjy9Sdvrw7fJN0WP
HLZQaqnA3ecq77aRnppD7an+txxL/tbfs+3ZEoaXsU6WGKxwQRYf/3fXB0vJ
bbZ5U/a9vVF79zZF1N4BSs66MlGbtZb3Pqq11y59v1zLZufVUqTyvsg12tT9
71d8D1rPadM/eg3tuU71iO4OTOcNv7hv/nJM/dUoA0t33yYz9YbkO9x5r+Qc
Uqnn0Gu6kSVOROkErY1jt9fR1WV7MhGLXwel31dVfiNW+Dxq768NJ0C4kvUZ
MbevmJRdPVaOqyFWJvCKYtZ98+W7zQeXdk6Tu3YOl614jZIPNUcXl3VlskZT
Le/W2i5qp6KKker/au30l6HNRYwbc719GB1/nLr77Ur84v57871kwlK2eMmp
fHuvi38x91cP+fZ6/fAtzmV7cWUearCa/3n3fVLRQGm+Iz9e7/mTdlx78LEx
YeNwmvYqrl+4Dcoq6k2Bs5t6YyTCNpfa89F43b1Qo+bv3lvS8hM2+0prWcSS
7s7V5EYt6SH8S1/neGZAX18jluISUft6CowPmanVdMsbZ9F7GbI1Tn9i4srD
/Yq84nZ66TLzq0mLXz61J7wO7Z3Tpf6Tcm4aeaELji9dqeeLqKmMqA3WU+na
a399+UTwsERC70fKXZqj5beyyySf2uu+XVpVrh3Duz/hvVNcL2Icmx8vdmkq
N1d8uVHqts/kexitVHvYG7V3H2kYZXZSQ9aV2bq1Le+na3nXtuXNxLz97j7V
ts5NOmVPvvGAMr86zfftS/3jyvSxEKH1cobemTtLo1uX3kt68wQn9ziNcrZW
HSfWeUKGlrDz7qZtr3/pjHtGZvXy0TujcpfmYPnNzM951V5Xgt9+TmpnnNv4
vnN1LPwcMbNcJfGXKp1xNNdetWv8tChbj5HYCtuIUawaO2hAnbPXenQeU4Ee
rnNJ3173nr6cqDTtDGhEWxyqR7IsRhnKbyY+KL/ai1qbwTYYddXrbWgRRwy1
St+l1nyLKrA3WKCerCvnIWJNq7YrqTpbUnt6Fikwev1c0rdXSyd89XNKds0Z
oSZyVVPgujLOyQmJSlWF2hOWmsj18T064nVFXNVOS7W3ZBppS6Wh4qufRrsc
IyR3Ui2YUnv67LQKrDhpOaO9qjcZ14y+nVbgpSj7vHKrERdVqb1h3Rs9fsIr
g3hnXg4vd5XW+5ereHbno6Kr0cubmN5J3+2nrdinaErtmYz+tso57VWtGjP2
A79bqAa1V/hKXO+myl0aX6pbf6hCMaQ7H0esqSN5TdUafdfaxduKWd/vIH1m
tBrx1mR9UkE7yxQ4Im+utSG1N7IkPZGFdQ/ntFdlh8o2logRrQa1J97kLsuu
8pvMlLR+irhFulOS2h28am2bdm3jVxtRxokIUXs3H0UVOv1s6sy6khphVxL9
rhtBCtw1F1BvW2pPWj2qvu9HOau9qtEkk7VVtdHCZvOJ2hS/e05lZTJUA6dC
r2V5xlXL9r1L9O00Wezv3xqlPx+N2vMjDHapYGrOupIS4ReTGZpbn0XVrdCY
2jPpI7LIWe3VgjZRawBD6mJnbeRepCKjFdQb5pgDTJ8eNLSQZN97t85GiMQV
L/dF7fUZa1LVtV7UuazFj4tn4u3Rwp7czXSV25eNqT2dg4Wd5LOc117Fyyx9
YdQmih/VbPjGD5RfZ3En1mo3o11pXtulzzTsn+HhEf9o1J637FUcG5+G5kWs
Fa7MlSH4Vidmk86mUPloZkzt6fGP/UWznNde8+4peDghpny1V/oeDd1Hi/Kc
2mK0jvFxymfEsfnvPtgCj0bt9XUt0sadl5LGke7sVUMrW696hj7XtuPi55bV
esuxO3ufG83thtqHNc5rr3lP2u7GNOnfL75HipdF+g1GGsX4PGMZZeX11i2/
jkvc13q1cLA/yTNMd98BLFPBlJV1pRszTMV89LEMfZvt7uYTZKVWUfgGdsGq
N9ltjZY5q71OR5KfVMf3rlYGYgej1Sjj3YxUA6VRcpemZMTYex1m7N4/l7xt
+KivA2tq1ZqDZw//1+bVijXUiqsAm0jX0kw95ealX6dc7que+rXeOJtC/pW6
sk+bWg1Y47z2Kk/lObWGN5X3qyq1J1dXRXpB2Tcfi37v7UXOg72WPqWVe7/O
Hg/si+uV72JkaBXrW9iVel1beaxUfErb59VpU4N+DNd+v7vsR99ljsQba/nm
7v+n41v11hs/brz5dL/P1AeVhZq5ZIVz2qt6JieugLqVyJeNfcHR6iQtY0Wu
JtUb1mOH6LX/z03vOQXVa72zWkb//QFWObf2umz42AYNUs9JiOdyzJ6aoby3
0Rs/XSZ0npM5MpVNRQXlKQNolD3qNHt8963dirAqtTfMlUXWZHTeTQFeJNu4
lfd9xX3//6nWml5fbv7O0al5c6yqkN4+VWQfyInKulKENaT3BWT3Gj4rptWe
3vHHvnwDqBn+pDVa/503m0c1ak/VpMjVLv0zPp2Fvl0FXNzIfPod7WN5Nvpy
XAv+6rw/nf/Hlfzd6ba37v8fvceo/e3K3N7bp9idEUh5WVd6603RozakAtuB
RcQYc9J6spuDej9hRWpPWq5NRS1vroG082J7r4Le+nJa7FJvn3qCPZCxUVH2
Bay0OCcFllFxIcQFmUD5b06wyXd+Hr92rUjtiR0OucuyswbE1VZI/1RP0Q+9
feop9kDGRcX8FrCvQOwm4VnDJKpNM5+YQOmt5Os0Nx+0a38/ntWi9pTduoC9
dJN1kGuxQusAj3Sj7vWUlVzbggrYXWAN5RcoYB+z8AJgs4EZ1P7yQi0g9SGs
UslH6s7SIEaIatRelt0uUWtAnEW1uHH3kr5Vdl7cArSKNYrLuiK9QUWOdXAG
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

    "], {{0, 242}, {1271, 0}}, {0, 255},
    ColorFunction->GrayLevel],
   BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{714., Automatic},
  ImageSizeRaw->{1271, 242},
  PlotRange->{{0, 1271}, {0, 242}}]], "Input",ExpressionUUID->"2fd07078-6674-\
46dc-baf9-0993661c55f8"],

Cell["\<\
Making a function to extract data. Takes the a_i and b_i values as well as c \
and plugs it into F to get the atomic form factors.\
\>", "CodeText",
 CellChangeTimes->{{3.771931909968755*^9, 
  3.7719319421373515`*^9}},ExpressionUUID->"90eb2b4e-2107-4b48-bed5-\
12e3f4cee7dd"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"atomdata", "[", 
   RowBox[{"e_", ",", "theta_", ",", "w_"}], "]"}], ":=", 
  RowBox[{"Total", "[", 
   RowBox[{"F", " ", "/@", " ", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"First", "[", 
          RowBox[{"Normal", "[", 
           RowBox[{"newDataset", "[", 
            RowBox[{"Select", "[", 
             RowBox[{
              RowBox[{"#Element", "\[Equal]", 
               RowBox[{"e", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], " ", "&"}], "]"}], "]"}], 
           "]"}], "]"}], "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", 
        RowBox[{
         RowBox[{"First", "[", 
          RowBox[{"Normal", "[", 
           RowBox[{"newDataset", "[", 
            RowBox[{"Select", "[", 
             RowBox[{
              RowBox[{"#Element", "\[Equal]", " ", 
               RowBox[{"e", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], "&"}], "]"}], "]"}], "]"}], 
          "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"i", "+", "1"}], "]"}], "]"}], ",", " ", 
        RowBox[{
         RowBox[{"First", "[", 
          RowBox[{"Normal", "[", 
           RowBox[{"newDataset", "[", 
            RowBox[{"Select", "[", 
             RowBox[{
              RowBox[{"#Element", "\[Equal]", 
               RowBox[{"e", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], "&"}], "]"}], "]"}], "]"}], 
          "]"}], "[", 
         RowBox[{"[", "10", "]"}], "]"}], ",", "w", ",", "theta"}], "}"}], 
      ",", " ", 
      RowBox[{"{", 
       RowBox[{"i", ",", "2", ",", "8", ",", "2"}], "}"}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sc", "[", 
   RowBox[{"in_", ",", "w_"}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"atomdata", "[", 
     RowBox[{"in", ",", "theta", ",", "w"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"theta", ",", "0", ",", 
      RowBox[{"Pi", "/", "2"}]}], "}"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{"\"\<Angle\>\"", ",", "\"\<Atomic Form Factor\>\""}], "}"}]}]}],
    "]"}]}]}], "Input",
 CellChangeTimes->{{3.7714576185080175`*^9, 3.7714577004135494`*^9}, {
  3.7714577631132402`*^9, 3.771457855267635*^9}, {3.7714579368917437`*^9, 
  3.7714579728082533`*^9}, {3.7714654325580435`*^9, 3.7714654476614585`*^9}, {
  3.77149934725293*^9, 3.7714993499079585`*^9}, {3.771598923656035*^9, 
  3.7715989426472664`*^9}, {3.771620046095851*^9, 3.771620049939071*^9}, {
  3.7716274789134293`*^9, 3.7716274807171965`*^9}, {3.771627510899748*^9, 
  3.7716275133732395`*^9}, {3.7716283829806795`*^9, 3.7716283832092843`*^9}, {
  3.7716934499888363`*^9, 3.771693461680931*^9}, {3.7717717708880625`*^9, 
  3.771771892090478*^9}, {3.7717721174733505`*^9, 3.7717721222079415`*^9}, {
  3.771772353222259*^9, 3.771772360533702*^9}, {3.7717748810542555`*^9, 
  3.771774888687554*^9}, {3.7718622053413386`*^9, 3.771862207577282*^9}, {
  3.7718622996100264`*^9, 3.77186234464135*^9}},
 CellLabel->
  "In[688]:=",ExpressionUUID->"58d0652d-ee34-411b-953e-c41e41fb3dde"],

Cell["\[OpenCurlyDoubleQuote]sc\[CloseCurlyDoubleQuote] plots the atomic form \
factor as a function of the angle", "CodeText",
 CellChangeTimes->{{3.7719285196193132`*^9, 3.771928535837445*^9}, {
  3.7719287944735003`*^9, 
  3.771928804790494*^9}},ExpressionUUID->"1c54d701-eca6-40f0-86c6-\
d9ea2f61343c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sc", "[", 
  RowBox[{
   RowBox[{"{", "\"\<C\>\"", "}"}], ",", "1.54"}], " ", "]"}]], "Input",
 CellChangeTimes->{{3.771862218285759*^9, 3.771862291478402*^9}, 
   3.7718625025955973`*^9},
 CellLabel->
  "In[690]:=",ExpressionUUID->"926baf90-a48d-44cd-905c-a42e62846c35"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwV03k01G0UB/DhJ8bS21hrfrKmkrQrFXVvm7VEi8pSTCVRtghRCSFFjL3E
qAwtRFlGWoZSkkSWFCr7W0mWaGYU7+/94zn3fM6559znuef7aLE8dxwWp9Fo
bOr8X4mnMnXdK53Xa3foSJ5LInHu1ydG6gkAYX1a9iGURQVLDn1gb4euTh27
M5QLx6FZPn8PSAUuJoIo9yq5CkrYB+DbC7A9SfkSs3p6fvlByN1jt9OLMlfX
IZOWfwTYuiEiV8p8w6GlOznuoJn7wNKJ8keT8MpstieMF/82sf1/np6cXnCl
N7Rf3z5gQTlyeYtPdvkJeLT0qdF6ykprOeV1RX7AZVusXEo5a4ObhCDPH14d
G2/VpLzY3GCbVk4geDS9nMegXG49mWTBCYKx7c/VJxNJbD7Ann+NfRbiGmyn
t1AuXLF4dXdVCJQxRQSfsr9hQrt/5TnoE3bdzKUsAY5zs8rDIL/zZq8f5ZqN
la9W8sLh6IPY83aU403me9QUnQe7ws9v11FWtxouGc2LhL2cjoM0yj02tvZR
t6Ogvisj73MCiXd2l0/NzrkAZr9+Zj2mvNrxvJkJ5yIo0jyj/SjvOMb8mMq+
DPtfGjo0s0mUWw1Pk03jAAJeT9yiPFTmLd9ZFQci590mpymXPG4p9quMB2uv
yHYNypuqOJMZ5QlgQajP2B1P4jzTRuuvaxKhcphJ16As82rajRW8RHh2I/Zu
fxyJ9bVuptVFSXB/YKHAl7Jjk0HccF4KvHljk372Moloe6TLSD8VokP1R9dT
1mlNM4i4nQp2l9XH/8SS+K1tspXMSYNEMw7Nj7J/d7XWZs5VePoiRW93DLWf
EYcHyexM8O0q6G+OJjFG+YoxfzoHZKbaKgMovys8r7FyBwcmx5wZJGX7bw69
6m0c4FXLE3svkOhhL+s9MpAF9bwFlhWRJCauc41KY9wE8sWJC+bhJH74sNP9
n9034XHN6/TGMGr/J8EqLO0mzPjKmOtAOSdfRem4djYwi1STXENJfKhRlYkG
XGhYfljgEULiZzHt0v49uTCiuuH3smDqfRnTrzik58LaEVuvG0Ekuq4VBjd8
yQX9F6HOipRHfOo3lh+9BTUToruDgVQ+es7UxQbdhsapG4NsfxL1XrT1rsy8
CzfNPKzZPiQaVVnIbDxRALTkEDOPIyQymrhvDRMKoLXz789yFyofXeJJix4U
wK/n1WZ0yrG0cg3maAHIguGMa4dI7DJauHLIpxAOTaiNlziTGHVf1inD5z7s
DM1l3bUnsSWztljkXQQitsy5TCsqX/m6QUPxRaCuZlr3bBuJIY/Dsa+wCPiK
ZHPfVhIXtBm/bhgugnvhOYwFliQGq+R9yfUuBt1dvqYZpiTOiYmR3eNdAlzG
0zFLJNHrlJXzAy8eRGx9GVCylEQLD+NcehwPpJ5I3S5dQvWz9H463uOB4CT9
Tuli6j7mkqfpgzw44nhJrUifxHXMJ6mO7mVQdzj4TYYulT/eonopl4ew+pFc
lpEmidljcuBg/wiqR7tdk/4h8TjvcKz4HD54aRcyO/qZ1H+20RQz4EPAPQnZ
wD4mDn0wvj+1mQ/LKmiFir1M9J1QbPnjwodtZaOzt3Qx8dT6SrXft/mQ19Ad
mtrOxIjn6nnfl1fAirb5QrEGJnLq379u2lgJ2Vt6DLp5TGz611w6h/UckqeJ
bfobzsToJeO0kn3VcMjdjTs0k4neC6uT+Nm1ID/ADmqNn4Wig+75HR71YKBQ
RdyhzULWY1vrOJd30Hx01dUoz5l4cLiJz49qAr3UUrpWjQpeWlrqyY1oAXRV
SD2pp4Li/FLD8FOtoLogbpPkRWWU17Os+5z6Ef6obD/Z0K6EZpkbbwyx20Fs
MrGgZa0SzvxZa3K29BPsX75vIjpGEa+8fChGHP0Cs+LrbbX7FdBYbcOU5qFO
8DstfdnUWgEXfmH0nPbtAuP5nYGb7stjXq6Ca7FPN3z3NxS/riOPwZ8cGxdG
9AC9MCB6GpuB3sarLTMSe8HCULzJWpqBoszNrO9xfVBpK3vgmeYMrPe64uR/
vR8erTpdJtL9B9eYak92ZP0LLVNFbcrbp+OrLWtyMf0r9Kyq2tV6Xg6zC9PW
dN35BvFnjeSJMllUnqPvtv/Wd3gSfShylqQsvhOjhzIfDQBv26bACWsZLKaf
4Na/+gEcg7GOC3ekUV+Z4caqGoTnRzWHSlWl8WfsuNKKlp+QuEvHNzmajnMi
I5d4ug2BiY69bakcHbvs2j5u7B+CHfahs2vTpNCst1FY7DEMW01S/MTmSWGA
z2FXlR/DMN/he8DrCkm0KrlqoXJyBNaL26WrOkri4B+3YGJ8BMburoumS0pi
1vtzRR4nRmHNnoqw4pJpKHJd5xQ4MQou95u/DrpMQ7W/8fbep36BXq+h8Xet
adhnerGGLjEGL1fFb01pl8Bn82pB/eIYXPZM2XD1mgS60bkSWtLjoFKtmy5x
RAJLOTrrnsWPA5pX8CaXSGCdkXHVDvnfIMy2zDekSaDA7epOp9jfsIFpxPVv
IrDaOnP3dBUB2He5SOnnEshaY5yTkyiAwK1FfvHnCDz6481Ye7IAlsrElH0L
IdAr68BmhTQB0Bp8Fm2mfFY6rDP4mgD84mdn/z5DYPqHV6o7uALQnTHQ4BRM
YEvgnrg/pQK4XnxH3tifQIuHPoE2bQIIrrhxV/k4gTYeEtURHQJgiWze+h4j
cK92ssqjzwJQ3teo0eRO4JHosgfzegSwYbaMRYIbgeF2tMGJAQF8Nj1YoehK
4BNRDIs7KYDbUqX6agcJrMrXKGyjCaF6TpjOWRaBtazCKQYhBLm6GeadzgS2
1TSlB0kJYZfS/FlcJwIFV1TfWzOEsK/Rt3bZfgKnrPLmRigIQZR+TDfJkUBJ
AnzLlYQwsCyjQOBAoJI7S34eUwgJbe5b+PYEqmr8OmCvKoT2y302OpS1G8/n
x6kJIcVqb3SUHYF6kTP/VmkIYXlAweDAPgKXGd2ynNASwtMTn87YUP4PqaMk
jg==
       "]]},
     Annotation[#, "Charting`Private`Tag$308294#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Angle\"", TraditionalForm], 
    FormBox["\"Atomic Form Factor\"", TraditionalForm]},
  AxesOrigin->{0, 2.418612471736622},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->
   NCache[{{0, Rational[1, 2] Pi}, {2.418612471736622, 6.645999999999988}}, {{
     0, 1.5707963267948966`}, {2.418612471736622, 6.645999999999988}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7718622249885826`*^9, 3.771862231847865*^9}, {
   3.771862283005869*^9, 3.771862329125084*^9}, 3.771862365481769*^9, 
   3.771864377446218*^9},
 CellLabel->
  "Out[690]=",ExpressionUUID->"99d1965c-1066-40f1-afbe-c5a1af2b45d0"]
}, Open  ]],

Cell["Here is an example of the atomdata function:", "Text",
 CellChangeTimes->{{3.771928809602255*^9, 3.7719288396832514`*^9}, {
  3.771933894135046*^9, 
  3.7719339021493607`*^9}},ExpressionUUID->"097995a7-08c0-4ee8-b373-\
75ee3049c2b5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"atomdata", "[", 
    RowBox[{"#", ",", ".8", ",", "1.54"}], "]"}], " ", "&"}], " ", "/@", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", "\"\<Li1+\>\"", "}"}], ",", 
    RowBox[{"{", "\"\<C\>\"", "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.771770444007489*^9, 3.771770482449669*^9}, {
   3.771771903863788*^9, 3.771771907466365*^9}, {3.7717720122529106`*^9, 
   3.771772012544687*^9}, {3.771772130955202*^9, 3.77177216073243*^9}, {
   3.771772269676092*^9, 3.7717723144972754`*^9}, {3.7717723665837955`*^9, 
   3.7717723717597666`*^9}, 3.771772740729025*^9, {3.77178806880519*^9, 
   3.7717880714782953`*^9}, {3.7719288187495885`*^9, 3.7719288343039675`*^9}},
 CellLabel->
  "In[730]:=",ExpressionUUID->"3f90bcb2-6c8e-4cca-bda6-a4ceec4d354e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.691177028483278`", ",", "3.56636416289765`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.771770482843753*^9, 3.771771811559228*^9, {3.771771898587755*^9, 
   3.771771910490446*^9}, {3.771772005376624*^9, 3.7717720131382637`*^9}, {
   3.7717721524453526`*^9, 3.7717721697824574`*^9}, 3.7717722754614697`*^9, 
   3.771772315214182*^9, 3.7717723723732224`*^9, 3.7717727413376417`*^9, {
   3.771788064554837*^9, 3.7717880719785786`*^9}, 3.771790333557274*^9, {
   3.7718232944489317`*^9, 3.7718233216743336`*^9}, {3.7719288280142193`*^9, 
   3.7719288350268664`*^9}},
 CellLabel->
  "Out[730]=",ExpressionUUID->"81bb9533-e619-4136-861f-65242d166454"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Structure Factor Calculation", "Section",
 CellChangeTimes->{{3.7716221374890833`*^9, 
  3.7716221506190023`*^9}},ExpressionUUID->"e9d1877f-166a-4eaa-aa05-\
f4a5c4d77cd7"],

Cell["\<\
For binary FCC systems, the parity of the Miller indices has to be accounted \
for. If the Miller indices are even, then a total of the atomic form factors \
is used for the structure factor. If the indices are odd, the difference is \
taken.\
\>", "Text",
 CellChangeTimes->{{3.771929192930216*^9, 
  3.7719292695109134`*^9}},ExpressionUUID->"97062da3-70d4-47ed-a0fa-\
f0536f2975b7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"evenodd", "[", 
   RowBox[{"b_", ",", "elementlist_", ",", "theta_", ",", "w_"}], "]"}], " ", 
  ":=", " ", 
  RowBox[{"If", "[", 
   RowBox[{"b", ",", 
    RowBox[{"Total", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"atomdata", "[", 
        RowBox[{"#", ",", "theta", ",", "w"}], "]"}], " ", "&"}], " ", "/@", 
      " ", "elementlist"}], "]"}], ",", " ", 
    RowBox[{
     RowBox[{"Differences", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"atomdata", "[", 
         RowBox[{"#", ",", "theta", ",", "w"}], "]"}], " ", "&"}], " ", "/@", 
       " ", "elementlist"}], "]"}], "//", "First"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.771599648670763*^9, 3.771599678198332*^9}, {
   3.771599938571204*^9, 3.771599944127314*^9}, {3.7716000528899765`*^9, 
   3.7716000551017923`*^9}, {3.771600237901371*^9, 3.771600278428814*^9}, {
   3.771600376994641*^9, 3.771600380941177*^9}, {3.77160054189732*^9, 
   3.771600603902672*^9}, {3.7716008168541727`*^9, 3.7716008372234697`*^9}, {
   3.771601065749157*^9, 3.77160109689616*^9}, {3.7717716078656187`*^9, 
   3.7717716338192935`*^9}, 3.7717716664870625`*^9, {3.7717728367042627`*^9, 
   3.7717729270755787`*^9}, {3.771773238227399*^9, 3.7717732439456034`*^9}, 
   3.7717732876087894`*^9, {3.7717733336764803`*^9, 3.771773338131316*^9}, {
   3.7717734831218967`*^9, 3.7717735009262433`*^9}},
 CellLabel->
  "In[691]:=",ExpressionUUID->"992c7a6f-ac4a-4e43-a3d9-64768412474d"],

Cell[TextData[{
 "The structure factor is different for each type of structure. It is given \
by this formula:\n",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
ivu2VZ09+A1VNcqrNqpRN61NJOLL4syrXHUN1nuALDuqqfrdKoksCqmbV8g9
WRTIrz35XxsraFJ7Rhabl2awB4KRGbJ82TdI+2B5qrpneVvqUDdWaRtso1le
vVX3OOp0Zto3LdtU1W9WOWRRSt28QO7JooS6GbwOdqAEdUs16W2SBeoGkghG
Zqj8KTLlHePCZ6lE3ST61DhPY7V1mLmazN4zY298GWujLEqpmxfIPVmUUDc7
8brRqe3nYUh442VReb0E9VBrZIaktPdvcbU14dZUom7s+SNDnsVf1odqLXLa
apidp2alYp+2ssiilLrpVw6ce7IooW525n+t/yXUNnu6KtiePURmCKS+02bV
9y5vRSXqxp5/IGBpc8bxVWtT1/8ynznLflVN1Im1kUUZL9mXyD1ZPJxfe/K6
0Snu2gsJVjlZoG4gmWBkhsq9b7RndNVeGltSh7px/NcDtdMebDdGgWWmz+p1
q/yNKocsyqibl8g9WTyubnbnf23e+/gsU+1i89IM9oRnlryByr1atF2AceFe
qlE33Uwyt/B9cp7Dp9ViqjZo49Lfm2uSbVx7s2f/St8DbFqoVizRu/o2qxdY
IrBd5NibStFp9N239E3cJT7phmPrZVFG3Uxyz/n2U+WBzIQXslbo+xzZS/Z8
V2fcQEU1RfJryayHSl90vVkXn2oXD4AVnyNj242+A7LYvDSDfbG/yAxW2tu3
+am+hqosuEhpesutlZ5NLeomMbVJ4/xVLfUb7E31cffPkqxVV1vjdb99i5Xi
+l/2PCJmRfxGVO1507970XVum8bEN81YMq7mWJNubVu6W+fd7AntUlLsTCb3
nG9OJnaZVnve48f3+T5/n5da52rJr1yvm9H8YZPnRfJjZeu4TkE0xTnXBdCx
z8gMJvXtu/EkK6xSNn1ZMJQJ1SqcPamblPluTC21hEmfmDpbWzNq3aNrhWBe
mffkIa8b7Q1/HvSWuaoEfSP7WkpIt9XvbW0sNn77u1//lT+HLl0FzjPrdSPX
bq5X98lM7s3oPms1NPtr/Xv99Le6KZJfZiXpGfXOWW8dqWOkrFy6plpEZREa
l/CmraHl2UUZCn6CkRkqH4UpbdmnzMppRml965LyXW+p1H9vV+om2i9lYowv
Y6LRRScYa4C5tymeQZl6wfIbeRcV9Tu+wvCVW/u1R4/sUMbu1KkAY3Mwmmmj
GWtlUULdeL1u9JyeP/22+d6rmfvsVZJWO+/pmrApkF+W101C+mdbtTq31BN1
b54wTs28+xF7mSxC6ibkQ/oga+cBrMkogpNL5eMw1VP9BNuNmUHQtOpUCfuV
Hyv6ifmyG3UTt9w4kTZz8fT6iJ63akJTO4Z8N/onINenuD/3vauRA3sELQby
jk7upqMLB7vN4KO90f3vrrjAeUzuWds6peu72tEvyjf2fe7vobdM29J/2Zf6
7HNkzXo4zCIkPZm23eMun9u1J2hj07aO2MtkEbauntU78qPu8WXG2+KivvuZ
4TdwHOpm5wRbxgceiZnG4O1gtnxYpUGV+m9H6mYolec8J3r/irNlnWjbnk59
MN0y+4vt+SyVYu5l4E72JV/21dm6zF+r9m2L0Ij5k1z/pNayanZfLb7ZyABZ
lFA3fe6Z65j2l1hXO6qNJ/f5Oj6bs3fQf7n+/MqZ9VBrim/HItZ6VP9YOucp
ZYfpe4xFa8lK0WS2k/RonW/iW+kc+4x8gPXYt/fNuli2hfNkS0uV8er2om4s
z4qZEkiXNWOPx1ZxOiWilNgJ1yv7WffMevYDvi+9/2/m1dnv1UzaTO0ceI6k
nva0Mix7g5U/li0219JU6E1vFuSVLzVmtfevGfXAybZBHbvbW+Vn3+fJe+xJ
c0tGa6Wm/MpJvzxzs9aSbrRGvgVrSW6YuxJ5c1P2cfZ3FUpu1NsPq71ffRkK
MZwZR8a89P2dxrUajaOvcuT8btTN4KntLRul/vZ8Jy1VR41InZ5wL8ZKwbqb
gdJZ/8ts1ztv1czZTZt7Vt2Me9Ksb4Zn0zq79sC+5vXZ6vZ8kadZFo+rmyH3
5OrEgnUfKzYz58Doaif3eXS20d7ZswbWlV+ZXjfnwNPW+WvnRhtZnBv6X+Tq
ZZGjblzbTbb3gGX9qbJ8hzysknJKpb6z62O1+Mz7N+qfrXLc1D7UjeWV4i1/
9FVMvtPbnRJY7kr0OZUj3R6tBEu8sSJk5qf1Ts3aheL9YnIWvydssRhMw3P+
6JnkbO3icXXT556cqfOiSa11Pfc5mFe5Xje15VcpryGtbXJtfg/kRtqRskjv
mRr1RSzKid4j6GXrviMRicywk9kvS2OVGqa141g9K53TeQ/qxvSgzNZZqkV9
8fbIyPjn0bZ2EW23ik+q3YsztHlD/VJ9yz6zF9K8UfOjkAf1PK9/fmd7tfqV
h32/zBUWeWJk8bi6Ma1nlUut0vHOXDRz7Pg+D/Wdv18q0+umtvwq4zUkuZxt
t3ksN8xdDt7bvLOPxgEv9B3YetYoKIkT0XlMpbX42lj9r8N4qR1ERUpRN2Zm
ucdpRwTl2rL7HqGMOsscK2OrnS3ds5t9NwbrSnCvXgNllZOxGlX2GfpL8q3n
Wb0R0bO1WvMSvosys+0tgW73lD0vc/fMyr3ufA+1oe2R+d7vEzzLa84vs7JY
5+px9gv8bVJzY+bI/upLqht3FPBCfbLtnFFQGqsMmFKl9+y6OBZOe5zGp4wf
/K5X8SWpm+Xz4/nImtnaaJsFpbEvBod+chdb1MO960bPZvXBhz099D5O70tm
6p8+hrmYGraZKVdGnoB3VWOdl8++YFLufSPWmuvmWfn1eKxRPQp0gzLe9BiG
dWK7SFc3br4vfGp0GVXljB+whGBkhpez0TklbLVKxpvyFHVzkpblvQC3PAuM
0TaLYn3oo12vm661lqtuhvsbtPosVDcJyuUR38Xnj2FW+qL0fLCzUShm/ADv
anu+lSsyLs56Doq+5c/Kr5hlKprOzgq4ydwW5dXNaEzrYs8o/VTsqtyHEBHv
mxfTsVYJW/mszZOUV+x3Y0cQWHS8xJ8cbetq+lx105essREbfR9QnrqJKher
zb1A55mV6mZcksWjI5z73Lv86eZisdVOphaMzXRnzr3RWy6LB/LLN+thxtGd
Ntqo7Vq+Z6qM102vbrbJFViH4JzWO6vjH8WycO5sXGC96kbXNNelbSL9fI7u
h64L88ZAD9oiFjt6gVdxbH4V2WfwD8j3PXpIGa2LLB7zkvXknto25FeeB9Qt
fFS+101ZZPGIuulXllgAuzzdzH+wz/uEK0xVN0W8bv54xy7A3glGZthZLf9Q
PtgWzp31ytWqbrS2mfe1+InG6u7aqeOoin98WyNnGp7z2G/2PRs56mZoQc5a
lGz7RC6P9kasiSweUzczuWdZYZLvdXS81IYRpnQK2sXi/Fquc/VcQYutqEWu
vby6KeJ1o9+w6kpQeJSgN1x1LcXVcsG2YlU6Nmo27VWqG103zc/s0j534f73
viT3x6LM0qA52kL/y7BdDtppdo+Hxjw94o9speBX8vy2xJslcN4H0xXKPbOS
3M6K6cx0r5s682upztURuxaOkiqVG/pfsdn8Snnd6NLqhVrzrwKRGSQX7BFk
O/Mtq1HdaG0TUCDtInKOrk4fqQxTouXMoj/Uee6Mtt6WbH4khlhvyJ+Z0ejz
s9t4UzRzfplLPqiZzBy/3+o57/yPis1blptXObnnn5VPrndubLmx98x8/+M7
437yyxtr9NRGjg8epUdJzZdsbWzJtXOjfCSGUl43+rlhLr8DEozM8CLeN5Yf
4+56X+tTN7qOCdS4XazIhKuaqJglcwn7PTHnrEe5UTSTvG76FasOEdtUShzE
of3hj6veXl0or7tolH38pj61hewRsnjEphTIPX/kClEoc+om4jNslFQoimrF
+eXzXpf7H0idtoGGIreO4nStkxvGFhtpl8giTd0U8rrRZ3qZnorXIhiZobpR
GqvkwI4jqdWmblJmeI9bgk0rfOx1kz0TvFV/Ws/yvL4yb0NqJICo1421hz2T
UluijvSKHlfsbLVaH765nN9jeTETJ71QS1UWj6ibQO75PYDbrbNnC8YptZ6E
kBqsNr/8o93bReCYTlOE1NybrV/Wyw1zpyMqQhZp6ibL60bl3vwc4a1C3JlH
AqQS9L55gRkcrdXdqbm61E08Mp8qZTovlGBby6xMrOlmJS8GYotdSs9HdOrV
ROr54143Xr8ZqSfcmXwGP1pbBQ0zMfosTR6NNPlt50r0vwpq61jumZVxPI35
XpT+bN49UuZErDm/LO+tD2fbfH50lpeQtuliZM/MT18yN0zux1RIu0gozXK9
bkI2LvXmvegM/a/Aa0dmcK5+d/bJmtTNKKZ6mFD7uS8JPVdlVhK9AE2abF+F
92a2jjFPQ2IJnuB10+9h9yd8Ta/Alze2X5znzJEePrmWy+QI5xceQxaPqJtA
7k1zI9bKNs9NeJbf+VhgVeeXzyc62E/3pnP3ovhVefM5UtPvcxbSNXKjV+lJ
OZSibrK8bnQpefCaDPwEIzNUUXOueO2259HuZjGsR91kaZtgz4/pk/AoDGuO
7bQYz/3dvY7OEfOSSfJSTPK6uYz30JplXNcMH94mx3pyTB8RsKir2mjkS2ru
UaFyXhbL/UiCuWeUj7nCmK/SkIeeXxrmLp0fyVd1fg22Gyf/5rWafzb6q2id
S3yGr7K5ofM/Wk6l7fUn0+umizufn2o4BsFYRIf2J7ffk41S8Kbevl9V7sjc
vFL+fKfqrFrUTaa2CfkKBKM2WXcr6amczs8nKQ3kl+5JSqqDfL0Fszlj7II+
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
     "], {{0, 254}, {1135, 0}}, {0, 255},
     ColorFunction->GrayLevel],
    BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSizeRaw->{1135, 254},
   PlotRange->{{0, 1135}, {0, 254}}]], "Input",ExpressionUUID->
  "90ff167a-a708-4b46-a2e0-44e6b3bb3a80"]
}], "Text",
 CellChangeTimes->{{3.771929301180083*^9, 3.77192931744691*^9}, {
  3.7719296062514725`*^9, 3.7719296280524445`*^9}, {3.7719297936818047`*^9, 
  3.771929818375991*^9}},ExpressionUUID->"0190eb18-ad82-4ba7-a93b-\
a0446334fb0a"],

Cell["\<\
Where f_j denotes the jth atomic form factor and (x,y,z) indicate atom \
position. For BCC and FCC, this formula simplifies greatly. Evenodd was used \
for binary systems to account for the parity of the Miller indices.\
\>", "Text",
 CellChangeTimes->{{3.7719298238455353`*^9, 
  3.771929902370371*^9}},ExpressionUUID->"34e58840-997c-40b0-9462-\
e6de205ec070"],

Cell[BoxData[
 RowBox[{
  RowBox[{"structurefactor", "[", 
   RowBox[{"elementlist_", ",", "  ", "w_", ",", "list_"}], "]"}], " ", ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"If", "[", " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Length", "@", "elementlist"}], "\[Equal]", "1"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"ElementData", "[", 
         RowBox[{
          RowBox[{"First", "@", 
           RowBox[{"First", " ", "@", " ", "elementlist"}]}], ",", 
          "\"\<CrystalStructure\>\""}], "]"}], "[", "\"\<Name\>\"", "]"}], 
       "\[Equal]", "\"\<body-centered cubic\>\""}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"2", " ", "*", 
         RowBox[{"atomdata", "[", 
          RowBox[{
           RowBox[{"Flatten", "@", "elementlist"}], ",", "#", ",", "w"}], 
          "]"}]}], "&"}], " ", "/@", " ", 
       RowBox[{"(", 
        RowBox[{"list", " ", "//", "Keys"}], ")"}]}], ",", " ", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"ElementData", "[", 
           RowBox[{
            RowBox[{"First", "@", 
             RowBox[{"First", " ", "@", " ", "elementlist"}]}], ",", 
            "\"\<CrystalStructure\>\""}], "]"}], "[", "\"\<Name\>\"", "]"}], 
         "==", "\"\<face-centered cubic\>\""}], " ", ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"4", " ", "*", " ", 
           RowBox[{"atomdata", "[", 
            RowBox[{
             RowBox[{"Flatten", "@", "elementlist"}], ",", "#", ",", "w"}], 
            "]"}]}], "&"}], " ", "/@", " ", 
         RowBox[{"(", 
          RowBox[{"list", " ", "//", "Keys"}], ")"}]}], " ", ",", 
        RowBox[{"{", "}"}]}], "]"}], ",", 
      RowBox[{"{", "}"}]}], "]"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Length", "@", " ", "elementlist"}], "\[Equal]", "2"}], ",", 
      RowBox[{"4", "*", "\[IndentingNewLine]", 
       RowBox[{"MapThread", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"evenodd", "[", 
           RowBox[{"#1", ",", "elementlist", ",", "#2", ",", "w"}], "]"}], 
          " ", "&"}], " ", ",", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"EvenQ", "/@", "  ", 
             RowBox[{"First", " ", "/@", " ", 
              RowBox[{"First", "/@", " ", 
               RowBox[{"(", 
                RowBox[{"list", "//", "Values"}], ")"}]}]}]}], ")"}], ",", 
           RowBox[{"list", "//", "Keys"}]}], "}"}]}], "]"}]}], 
      "\[IndentingNewLine]", ",", 
      RowBox[{"{", "}"}]}], "]"}], ",", 
    RowBox[{"{", "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.771774486282279*^9, 3.771774509264397*^9}, {
   3.771774548487851*^9, 3.771774591575436*^9}, {3.771774642448987*^9, 
   3.7717747178309565`*^9}, {3.7717755593368216`*^9, 3.771775565034004*^9}, 
   3.771775600815123*^9, {3.771775768131035*^9, 3.771775772885685*^9}, {
   3.7717758565935163`*^9, 3.7717758691880436`*^9}, {3.7717761446831684`*^9, 
   3.7717761469581833`*^9}, {3.771781125452944*^9, 3.7717811356741295`*^9}, {
   3.771787784682539*^9, 3.7717877853713675`*^9}, {3.7717878669273205`*^9, 
   3.7717878717912207`*^9}, {3.771788992208136*^9, 3.7717890022177553`*^9}, {
   3.7719293207517085`*^9, 
   3.771929355378783*^9}},ExpressionUUID->"86be91f4-5af5-40f1-9692-\
470f13f0ac55"],

Cell[CellGroupData[{

Cell["Multiplicity", "Subsection",
 CellChangeTimes->{{3.7716757982453794`*^9, 
  3.771675800821196*^9}},ExpressionUUID->"380c5410-3a56-43bf-9083-\
88922195efa3"],

Cell["\<\
Take a look at the following graphic of planes given by Miller indices:\
\>", "Text",
 CellChangeTimes->{
  3.771931323775343*^9, {3.7719339365719414`*^9, 
   3.7719339486651063`*^9}},ExpressionUUID->"eac93eea-a561-498f-b678-\
17c1d6353932"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsXQeYFFXWvVXVuSf0BCYyDDMMccgICIgBzK45/WbXdc1hDauurisqRpQk
iCQFBARBQMlRokQBQYJIzpKTEpX/nu6qoWi6p1N11cxQ5/suTHdXh3qn7qn3
7rvvvoKHnr3lEZGIXnDwP7f8/eXLnn/+7/+51cMPbn/mhccffeafD1/zzIv/
fPSfz1/4kMRPvsn/PCYQWajC4Aq2jYIgnGLbyX+v5f/H8f9vsl1GFepUTaiQ
xzxPZ/tLkoSjbEckCdcBjeTXHmPzGP0DTUSNiylB3EVVLH9RnuUopYmHhURx
DYn0Fb92B5vD6B9oIiRuZ9spiuLGpKSkj+12+4a2bdvWuOCCCxqlpKQ87nA4
PrdYLPP49S3sw9vYdvHxP7ENZHuCLdvQX28iWlRjm8d8HkxMTPzQ4bAdn7ko
pcf46Z7ez7/iHntxG+eynMq2HQ6neMRiEY6LonCcdXu/KNISfl8XtisN/v0m
guMGShIOUF3rcUv39HnSh2lHnTsKP3VsLOht+y57rPhyymrhb65dVM/2B1W1
HKcs6Sh5xN1kFWbzez9mq2f0CZigq9m2sO5ugw5DkytVqvQk6/NK/B3MmjVr
1iAjI+Nel8v1Kev2dH7/Jmi23OdezYZ+10ts9Q09OxPBUECyLoPDSy+9tBZ4
VfS5NGv3XsIo6HbVqratCQnSIavV298+xrp9iHV7JX9uP/JdV+ZYyxi0oURh
HxVbj1m6pc/zavKqqv2lj9KO4O9g5thU0Mur22+lLBNvS9hBjW1HqMh6jHKk
Y6zb+1m3F5PvnnyF0Sd4HgD9HkWXn1Jrb2pq6uvcX15Qmj6XZtnZ2TejL8Ya
P4E//1dZt/eQT7cnsL3NdgmbaGQDnKfIJ58uH1LrsmKszydC6XMw69E/adBV
1zl/lHX7MPrbPt0WfmftXsdsD+XvvovNZnAbVFRc4tXlWtYTlo/TFqq11za3
8jdSx7SDpelzaWabkDPKq9v3JuwQmtuPUA3rUapsOUap4iFyCqvId0++isx7
cqxoS7IuezyepwPpKz/fyel0TotWn8PQ7VHc517BGrGDbTf/ng3k0+2ObDeS
6b/xQB7bDG7vw4hVtW7duo4/P3jO4Yxen4PZZwOSBt52l3NOjVq2jUlJ0gGL
VTgmisIJNu530xZBoLH8255kSze4jcorWpGb+z/Q5Q5n63KJvk7NHSd1Sd8d
rT4H1e2FeYOlDmmLxPsStgoX2g9TdetxqmI5TunSEUoQ1sr35P8j06dDAXN7
61iXdyYnJ79Wmo6yhvbjvtW3WutzMKtWrVqbpKSkdird3iP3ubfyb57H1pPt
XjLnqKJBLoXQZcXq1KnT2uUKHd/QyvoPSRoA3a7X0LbWkyLts9mEP7jPDe1G
rOQ31u0Z/Nv/x5ZjcBuWVTRjDdzJunxSfD91aWk6ah2dPV3qnr5da30uTbct
n1aaIz6ctFFobT/Aun2MKkvHqZJ0lBLFLSTQGDLvyQDiCF5dZg18PRy9TEhI
GOV2u/vrpc+l6TbfS/7NujKEdXsxYtts++QYN3T7S/LNTWYY2sJlE7juJ4Sj
y4rl5OTc6Xbb/tBLn4PZd1M8fR581Pk9dDs1Vdprs4lHodu+vBLiezctIN/8
VUOD29goNOH+8k6qwbr8Xum6XKLPw7PmST3TN+qlz0F1e2mVL6HbwjNJa4XL
nXupjvWod26yknSMdXsn6/b3dH7ck5uwrWb/3Mu6/EYkusjaPI3f09lofQ5m
jNaybntzSuR8kn1yjFvJKcHcZB1DGTAGqXRGl4dgHjfcdk1PT38x2WM7bLQ+
BzMlp6Rpc/vqShnSLrtd/IM1+4Qo0gnW7YOs20v53D8jzI9VzLmNYtblrVTE
uvxO6pJIdNE6OHOppW+lNUbrczBzrC/oY+lfaZpXt69y7qO6tmNUyLqdyX3u
ZHEPWYT5fP7vszU2moQY0YhtlazL7aLRP6fTOd/j8USk6WXB/HIBlZwS6PY+
Ojun5BJDGYoPEPuBLh+JVJcVY847pmfY9hqtw9FYu3d8OSV+uYDQ7iOs22vI
d89GDml5jIPWYl3e7O0vv5n6s2N7YY9I9c/6RcZqy4CM5UbrcMS6HTgX8ARl
SCfIIx4kq4D+GO7JiN+W5XsyxnpL0YeMVpcVY/9ekZaW9lQsn1GWLEgu4H5u
r4N0Zm5SySkpb/PP0OWR0GXE73GPirad+Lr5MifXsctordVUt/1yAZUcbq9u
i7SR2+5btn+Qb9xR1lCdnMImqm45KbZLXRGNLpfoc6+MDdavswLOHZZHOycX
sJGcC5jN/e0U8Qg5BNyTB5Hx9+Tq7Jvz5TzWbpdddlnNWPWM9XlDTk7O/xmt
q/G2Jk2aNEYOC59vf9bt+XKc5HcW6FUG8hkunGwDEcew2WwTGzZs2DTW9nC7
3WOKqju2Gq2p8bYpP6T0RJzkwpb2VRmZ0i6HQ/xdlIST3M8+xW1qNZpYwlov
h7CcKrMuP5u8zrGloGesembpUWmr9dvsWUbratx1m/vb1q8ypwgvJK8Rrnbt
oWLrUcqznOL73O86c3jWui8tdYv7YTtq1MCfxmuonuZJSHjLKQiHuEO6Tmcu
IwHW4g5U+su4x2h1/gkJrh/qN3SsN1o/9bZ3Pk4c4XSJyBv502Bu81lH1vL4
/ZT4UvIvjq2Fn2mlW1LX9F22STkTjdZPvc3SvdIcIVNCrYpDOnFYsu5La11W
jPtj+1q2bFnXaL3U0xLt9m8qcf+5syRNTRSEb3XiMhJ4dZkNujyhfv36zbVu
A3eCa0XLi10rjdZLPe3eB9wzuf98/OX/uccg7mEQt5ncX17p1eUXtdXlEn3u
lLbfNrvyKKP1Uk/jscdaIUU6hrw1iv+YWFn3dTDQui+N9fmA0Xqpl1188cW1
HRbL8mJBWL3XYun4pCAsEYlejTOXkQCxs95sB6DL9erVaxGvtnC7nZuuvcm1
wGjN1MsuusS+3O0Wj/YelDTwpdfdY1BXRGduK5Fd+JmqWE6KzyWvw9g8Xlol
fZx22LEsf5DRmqmXCbe494geaT/Gl9BL8s0zxAMh132Z+hyd1alTp7ldFLdd
Iwjz9rM2wy4VBMwXtooTl5FA0eVDVqt1RnFxcat4t4fL5dj10KPuaUbrZtxt
YUqPakWWbZlZ0l7k7ClaLYq0TCduU2VdPhVvXS7R5w5pf2BOzWjdjLc5fq3a
V7jQftSSZPtZua7Zf6Zxm7+hMYdY9zVCjjOOjCZfytTn4Jafn3+NQxD2/ksQ
JijaDKtLhLp8To25jBRvMu8HLBbL0qpVq16lV5u4XPYDr7/l/s5w/YyjjZni
6ZOWbjlQo6Z1s/r5ynmWHdzufeLMq4t1ebq3v/xE4nbHmqpf6KVbSu26imy2
OblDhFrWE7YE+wT1dS2K4lry5d9pCeSAHeLP/pH9dFhCQkJ75Ijx+LaJDvq8
32j9jKelp6Q86mT96y1JQ9TaDCv06bORuIHtOPO+knkf53Q6O6fw761evfrF
8W4Xh8P2R6/+yYON1tB4WY/+SYNdbunoJW1sP/m/5nSJR7jdb40zt9PIJvxJ
RZaDwoWOHeIjSSstX2RMsf1SJe46XdH12TYyewLlW066k9wf+1/X8voHLXPs
KrNhLvkPHtdWqVatWlFSUtJ1rJuvQaslSVrINp8f909MTHwpNzf3Oq3i0Yif
VGR9TnS5eiZyv3meJPX01+ZdFkuXLKJtGvIYDWayneb78a21atWqmpyc3JbH
T0/yGK0Pc/49uOdrYCTu15mZmXdpOa5CbVFlvF/R7MVX3GOdTvH4E/9yTQr0
umQRTnC7J8SRV2zngXz7v9LT0xsXFBTUZF4fl5Iso4R0ab2Qa9lNtaz7hKuc
m6R2qYtsU3JGapFXdz7os+Xd1CVChnSC+6/3BLquMRbVmEusl/iL7QT7YhfW
3nR/C+K7C2L1XdTI4c/8zWgd1dqQF+62WKbmCsLmLdym/toMm8z96VSihRpz
GQlQM/kY22m+pjY3bdo0y593PMf96YscDsdDfB/twJyPZ5vLvLP+OD/h1x7j
a6NltPpstI7Gw669wbmQtflYh64Jw4IdI0pefY4n/sV2ku1P5nZqIJ9u0qRJ
Nve3bpISrL2EdMvPQpa0lwotB4SWju3iU0k/WwZnTLKtyf88Sn0+ZrSOxsPE
hxO3CqnSH7Vr1w44vuS+7WWok6khj9eyHWU7LdvxSpUqNQrEZzi+K8dHpobr
u9wXv431eZPReqql4T7lEMU1F4riT4F0WbG3BWG2Pf4xyGDAuoiNKt5/Zx7+
HQ7vML4f12Xe72He35bHWLNgkYyxKqI+129kX5uULB4Z/K2nX7BjBo/09EOt
0zhyi72F/lBxe4z7ULeEy21qamoLi8PylpRqmcX9xB08jt8nNLDvFu9J/FXq
mj7Ttjiv1LwMrDusaP1njC2Eq1wHxSRpe2m5wNyH/Q/5aqlpAZYH7/j6tMpO
sJ+NDpfLYL6L8bIqPgLfnRnId3mM8FiovVPKk+H+aRWE3XcJwozStBl2pyCs
4PZ+SCMuI8WLbL/7cX+4Ro0ahdHyXrNmzQLExZjPF+Qx1jS22cz7V8oYq3nz
5vUroj5PmJnSKzPTsq9KvmUn1guWduxdDzhnShJtjyO3WGd8TMXrX9yn+5V1
JSNabqtWrVqrJD6Sad0g5Fr2U3XrgZL4yPe5w5U8au/eKR3SfjdaU7Uy2/Iq
A4TGtuPWJOv8UP6PWjTc3n014vE1Ovs+W9KHZj+7JhaNDtN3Edtcwv9v9vfd
8mh8DnfbBeHA+5I0MpQ2w5r67o2FGnEZCXKC8H6UufhUS96VMZYcF/uEP3+c
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
NnP/EHXeXNj6bG1/uJl7zuBwj2/untU32Vk0LZ6xNi2tsLDwcvgv91n7+7+G
vjS3/bVx5naiKIh/OgT7bpfFsdLtcA9B/h/WQ8f73Cu6PmdkZNwvz8m9EsCn
Ma+g5RrjNLZTMObvIr4vFCUlJV3Hbfwa3/eHsWbPYpvE/equ/PpjNWvWbKXV
eUL/rdXqxEWfvTZyWU9Xm5smGZUrrcwZVKlSpa3/a40aNbpA7j8bBYFtC9vp
NOnq6U2lX7rVkgYOyhNemJAiXLnELdTb4BJqbk61XP5TFevTU+s6+w3F2hGt
9Lma9a2jLROWR7SupZ6759ep7sI+RvtnKEtPT38E/sv35oA1CWQfTogzt/iO
v7pLTw1ZLH3S4yXptvEXiDWXpwqJO9yCc5dTtG9LsDjnJrgTumRlZd2mZd2T
iqzPrMnvol+FMXEQbrXuc2G9xJ8w/uxF3D9J97datWpVTU5Obssa/SSPlfqw
Xk+GbjMP/dDXzs3NvS6a3AnUibVWr6d5fOOceIcvV3q0nrnS6jmDQK/zve5J
bvNlGnMZCR5mQ47Xae5D7y2WvuzfyrK/o9paWHZ2LpZG9c8X/jcmQ7h9bpLQ
7Be3UGdjsth8dY71/tnoa1+YsCDitYOyPh+L5n15rnsm52QWnTMWKSvG/vAe
fJTHnzcFO0aHcdOjbCfZ/nQLjt/2WoZ13O9n2y2DOneTnhh2ldB4QbaQuomP
2+MU7LvcFscK7msPTktLeyLavnZF1Wfub33N3O2oW7duy0CvY20aXteQx+Zs
x9hOy/aH2+2+O5BG+xvrThb62/ybH2I+OrBej2X7gXVpREJCQvvMzMy7QsWx
WdfvsNZudDTe+uyNdyBXurjhrOyCgnvjyWGgOYMgXPfh9v5aQy4jAcZMh1S8
/24TKi1EH9pfowNZY2lOrwLhvVFZ0n2zPOJFK9DXThTrr69kuWlhof31cU1c
E/rHS599tUgbzQ3mI0Ya91+Glea/sOLi4lZyDYB4Aflzh1XcHr9WajrdX5+D
2WipXb97hTYzi4TcNUmCazfrNve1HRtcNsdE9us3ua9Warsj/qTsnVJRDON8
5F2xXy8tbU5Lzq2bpxGPWGO6ku0vFZenUdupSZMm2eFodCBjXa7LPN6qjo/w
/5OV+EhhYWFb5Xx4HPi8rVGrw3ros8+QK33v+MTKBT3jEcfEGkHUvWPt7Rvq
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
QdvJDBmMPu2GtOJWzj+ip5pf9WrdLoNePy0iIuI1IXVpcd6LMV64HwSdZ+1m
zrUY2ru7H7i0clzi2BpQfbaE/k5HFc7wtz679490svtHQK9pbNLZYv9Ix27z
9c3bLQ9KTB6K8yVvYwbOjN2fUBbOt8J9/bfDw8NrueIoOTk520Jrep0X7cyy
6aTNmXTkPunn5UtGGRnrWE/3Ha75QWufYfdVLQPt3QGavYLzj/Bz9FHDpei/
bB+eD+3dJwC8BhO2T2O9BmdtkKCN6DGT+XSM1Lo5iL55fA7tvNLf+uzMOP/I
I7TWxlQacxD9I1h/xKDSHTBoDfNZ/0gdjg/cT4LcYr1XX7mF+wfPuWrtBy5T
WC7/DaQ2o5GQ8KvMvL2jZdFnV5r9/dQJNs2u9+BW9I3QqLhzKo32N29yNNzo
s9x1kTjY9ibBXKO6O54s5qR2Ccybs6TS0Uw6ZlcWHb9Nan1GS2Tem2vWWV8T
ey8C8kGzO8A8uxdo9lKw9Vh3jq1t9YoUvMP77YL2fjwAvIYSVp9x74Gz31u1
atW4PMZacF49pY+UGtmfvn6mgHbzy9zcG8Ocv+HMO1Nb0dobkmjUYZhnX8A8
ba1KfQb9lAkJCQ9K1KcxDmsRyM/rYLkCr01nufw74PocHn2DKTrbX3Zd9mA0
KPhcZmZmfSl4xDiEH8/OwP0Jzwq8lrK8346MjKzqiSuDOql3jkS+6Aw6/EAO
nbLBH/qMZqG1iyIi4vJ9vT9hfv2hFPNmXh8+T+zxeG/QHqyhwGsFxfyjgyIe
+Q/TfLaUetibvnJxHe01XW5d9mQ1aOb+KGPYGAm5FTPn+pTYz7VLEHBtFsvl
XwHX56i4m3JrryB9NpguSJWfCVr4IrGf+esP1CX2c0dbCLiWYXm/Deu7Sp64
Yn3R86XwRafTQcfz6JyV/tLn2szBAQaavMLXeAr6P6RY+0q0bnoeDHM/Kgq4
NoYIjPlbmcgRy5nuI6XSvZ7kpcu7maGS+02ktnyafiBLn7hUCl4xnwu4PSeS
T6y/c4zY/RfukMtyeT3g+hyTeHfos95wXqo+in5saOt5IrkUg8eIPW/Oky9M
y/J+22q15gnhy+6Lru2zLzqN9j9TkRYs9Jc+o+UxM8YamaSBvtyfDMNMwZpk
UvAuUT1ZrOmPa69qHq4rjvnjPl13v7FChQqJVWiqZDnR3cmL184wPwyQW389
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
0H0z35k222vSactKTbpAI4/Y101Yg8dx/oVz4f3erptc9GnJ9RnjVVlZWfWc
9WmsScfGseSoSSc3IkiJL8S2x8TBznMxp+jo6Ir+0Ge00NjEBrRagxXC9qYY
neY+32U16eQG33ddnL9OSvr0Hl/6tBh9RjMw1omefNEhtPGOSobJk5zXpDOV
pZp0csJAStZNON90nH/dxP2Avsy//KTPq5s0aZLl2Kd5NekqyNWgZQzYb/Es
EfSFFOdmkpK1E+e7fsbxDHcX/fRzjCnCvdDM4zzKam3PtHhmgVt9hjk21el/
deTxLqxJV5YgpE+vE9OnMe8d7xPHmqOuDO8lE5O1vLb6RD9X+myieUdrm38a
7qjPelXS5TJWk64sIZLY51/DyJ372zi7DDwtFDP/gms7IrewVn1KQn0utTel
jNSkK8vgYk6fEed5fOjDXMX1W36M11vTxlk/YDp0mu0y93lowWiV3nDIxV6i
u6kmXVkGt6bCPm2rueFgmMc3H/s0rFkqSdVH7b7oZi590c7qPkdomh1WEV1Z
q0lXlsGtm9Cf6yyPr9h3Haj6ARivgs9c4ySOVBZq0t1N4GJO/YjzPL7fePm3
VbweS6MT+jNfjpjoVJ9f67xAbTDeweVdWpPubgI/N7c474qU9Oni3FysRe5L
X0VftKuzCx33pqTrv1ipotqyWJPubgEXi+J8187y+HZIOf9yZpirD1o83WFf
WVmpSXc3g5/Hx8+F5frtcW9y6rH+Dg2JWMUMXlSqJim9r80Go8k0zsleovIe
sy8r4OfxFZHSa6p/ON81cNNCTJ/G/U62PFjGOrEyUzCSr801mO2Dg1X5B+6S
mnR3K7j9Tzj/Kq7hwDM8p32xN/ufMI4RHh5eyxXvBoOhH9eny1hNuvIEfh5f
8Z4VUtJvtwvJqWfr892i4dGbmelbh/D1WZVVaS+M5R+ze4keZWMHd2NNuvIC
rk9zeXzO+vQiIX2a3Wd8y2QyPe3oi85lJk2MUD/0M1eTTlO2a9KVF3DrJqzp
YKt7SkgpX8hEIfuf4Lqp8JrfQaNrOv4N7o03QaM/wj4NaMD26bJSk668gls7
cb5rx/oRf3K+a6y3wnGFOZekJEfoOo2K36FefqJf8fw5IuZEYmJiq+rVq1dl
9xLdrTXpyiv4/k2M17r0bzr2aYw9s9dd1+kM7/J90Sm067x4TYc1bE26C5Ro
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
qQj7RrU6RRd2Xy81g11+xscqb9IMaLLM7djGzO4zQ5Iiv3DkW71eD18scsOn
iFUEOXkO7RT3O8I875Pk3rlD/H4KUozkvDNO7WzDzfq6Lt0tJvsGViW/HujA
TZGawa4sM5Qe39HBOF4MPscaFLhv6V3UPT5JwfvV2XpuxCGT+b+Rk4c+XMgF
CuN/BwXO4gGokcFYOk/MWhmMz1+z95zm7evNCcaH4zLoN+/s5UZ3/pTLCUvk
cnytAWRvbOz879DQ0BfE4DPjPPazWuaFb3Gf42w/DuTRok0La1Wa877sxz+2
rDlj4/bzzr4jciqZH2bY1utDrWja0v1aSEXYh71Tch/2+vUB4XPT5H26GV1n
ub2eu0PFtZmZmXUc+Zb9lrGX5Hte+NZWSbzvhPuf//KPhb0YUG+lIM1Izjrj
FObxPq5Cbs+qR3eIxb7Pssjv57pxI6RmsCsTM/fZaK2LFOyjLz0VYpiYZ0L/
XY33u1A7KYJ/XJCenp7oqA0HBQV1RN1x1NnEHlBisE+pVC5hNtTT1yGeEZ7I
Davbh1uG/U0qNqdrzQma18Tksk0fMjImJqarGHzWaDSYu/tIZL/Cn1ibj7w9
9M2P874U9s5pTKx8Pu2iD3qLnfM7alwXHosJGcCtfmSC1+wb3PwK3fz4PKkZ
7PIzZkSeMO7oO97t2Eal6JXOfKtQKHDf2kgEf84kd+f78S/WsHH8c31wDCxy
xarxtenRT6qQW3Mb0C1isO9+qF3HrslZsfjs57pIzgTfYo3gdWK9X0YeQSL/
HOYVLXx2xV7WjjE+uMna8Upfa+3wfF6P9/TkNYmJienhydzqJ6ZwX7+8mpsQ
VZZbExnrvzXp7LsuYWNyh2MmT421YdTQaOnAN77qc95/v/I+Rh6uENNCTWHw
+UQx3xM1Pv5i/060PK4U4dPY17J3yoFnpkjNYJd8Lut+7rNhUuccU2Lkhy7m
fT2pqeJK6GMxf4/6V9hXw3atwr+Idfx8E/WKXNmATPIPGL2gId1Y2vmMvWKr
hCp+FIPN29sbJqo5y9oUKYT5CORwIK5lsjlemLOFfGRXRvh9sFg7Xu4r+xiv
drExZT93zzfHGx4R4hmt/s3NNydx432tmekGn0XLfebn9/1VT7Yxsbbph4g1
5iGoJe/b6274FvOPtzglN597udZCn/j8WZPfuXMvjZCawcXw+ay7fNa2SMvD
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
lNjrvkNeRtlG5I4phm4qX758itSs9cWwHocxehLaIFOD8PDwlwwGwzStVrud
2SY25h6OuHK1atWqu9mGpawna1lzhvrOwvez5NlVjyl2jxTs72q7HtBf+W6B
NPp29grVczXWW3j8zb9maOf0yNeMbndI/VWLs5pWZS8FBQWNj42N7VVczTre
t4HOy7HUhn0kxbPaziua0FVCLVKs7fbHWr8xdbjZDyeLs1+4u9Y0mu6b0Ug3
yxFzd3Y0TF3YVLtqXF3Nd4Nqqk9/WUN9bmI9ze4lzbQr9nY2TLQ99+0q2s0a
BTkTYF96IqzpBp+3esIxxCqogvxsiiMFsenkz/B49WdisxJxYcQcAhmzZgx+
nDH4Y0dtskaNGlWjo6P7gNE6nW4jG2PvZ+zOYePuf2MfuhIwxrIX1h6Dz5ML
v19UyL+4IS1zXHIs/9HFhXkZw1uc9cfaEW5pzym0Xdq3AR1H90rfohnQbKnD
vI2MmHXodxmjx7HfwGZmW9Evo39GLp2tXxMTE7Fv2KkA+xI1AgoeT6Wb3OEX
5tKmZNP9wjwg5tj8xcqGUXS/WkFu9StH8wLF5wwTPbGjg3G8O/GLXZ0Mkxc3
066cUE+zZ1AtzdmvaqrPCrxuHqs6TSlZHWBfeqI+xMrnze4yjHHpeU5N7oTG
kwLG55/NUUEd/MFKy/pjQq6jJqa3dfI8NTZ2/g/jbX937nGR4xETE/NocHDw
INae85l9K/A6IiIC1/WspJ617qUGPk8Qvh9XJnyB8qoLNs/usrUw1jyz005f
85md/j9dK2wjSsUd/Buw8XPj5O90s7rNLJK3saDX9ODkiCG2vsV+3VFRUX1Z
XzyK+XULsx3Mt1MYr19k/w5BnmiAfbkevnwilW4ojl2ot4H1hPx+KrdRz9+f
rDzXTTkUdZgNSvLHqxXpqkDw2ZPc5+86G8cuaG6YPrC2flG/dP2K1km6dbWi
td9WDNcc1Sop6k68GmBfeqJ/ESufNxTHLr5u0AisOQlNIAVBEfSwv+MZqCHP
Pt9f7N+vA8FolUo1kjG3qzfzgez1FZKSktqZTKb/Y++D8dU3Evt2CLHyeRy+
G3JYuI7lVjgcW1rq1rX5QaihQXMfXulXXrI+gmZFHSNq7i/6SOXNAeFzeuQJ
446+44vMC3bNWINYlivfopZdXFxcD3bf+LFCoUBNmWEB9uVm+PKpNLreFbeQ
nybUGcXaE0/WaLuyckHkTJSOXnVmEVp6jbLPB0a/kX53bXkg+Ly+rWHS2Hr6
eW9m6Zd3StGtrROjXV8zRp9bJUq/tGy4fm5quHF0QmTYG5hHgp/r1auXzs/f
b2TXdEWA/eipniFWPue74hZqFbFzNulMlnWA/wSF3o1p+spf9r5HXRmx1le6
bRtH9WN/sKxSpUq1veGzYGw8/QH7vNiXRCmlY5lGEiufR1v6ngTTl9ym3kVq
yXFH+02wrOW2rtG+ye18apYoPKwW9T2NMlx1apGGq4RT3CEaxujHKxfNCxGb
z05yn/UZMSvd9S27d5xLpMlp3w5fPp1G1zljFtYIYv9BsBl1jzyp9VycdYyn
O1E7z5lVDKGnFJT8E6EhP0/J5maK9f9iHcqa5tzEcXW42e9kcAu6JHArqptp
XpBacaGSWb+wvNkwvWy4cajA36ysrJru+BH3QOx6niYlb79Bez1PrHxe64xZ
qEuH+nbI0dCFkNuGIO0TYvGQ/d5fdpBLfU9eNb9HBfYPfy8AfPYp95mNvbsQ
61qcQOxJV5yQfw0+j7DU9s6Mzi3C5m+emFtY62hQs8ti1gKlj1beTBsnfufU
qkb9gBgHCdFc5z5uIsretJ7y2TCz+8yQ5KjP3PEtGztjPSZ+i3oJfIk6NwXP
OYjxYl0H6jMLsWb8jWOBiDPANrbgxkdp6VUzY/PkOtwsT157qbuVv0Nr0LlP
l+UWN41mHIqmS+pEcHPKh3A5SUHc+Lhg9bsRIcaeyK9CjQl2f9pEmMP3xth9
JHIiMOaLksCPngrrVNGGcx3xCus3FEryp0pnYfPPsbGx1fzNSMH4eMoa9vl+
Q72IQPyf7P/b6q3fs7OzM/iaZg9J7FNBU5kVsPu4IUGRps7cf+vdU7uILu6R
L9Q4Qk26QNb8ZGP2ETQx+KKFzf9r5F4uti//396+oxXVoo8VmRfsUHGt/fyf
I0tJSWnJfIt+N1MiX1r2Vuhfnq615RvqG2HdhlATdFVTuiJQXBYMe9aGqMj1
0bW42fbPnezMDVvUiJs6uLqVv01i6KpaZro0K5xbUJndg6cGcyMt/DUae5rN
5urI1y2ujfJz+AO8aaMYXzM/oq5mS4n86KmwBgp8Xm5/HVAnSK0j/3BqUqAN
otvduXZiGhtbo+/4HXWaAvH/sXYaz67DOm/5zDiI+96xEvvTVpZ1+OxzDeKS
Q2cpz71o5S/qG01uf6BwHnBR93WB4nJh39AqZTfRKW9y79RbHpD+YGan6cpW
aXuLxDYqRa8ozq/It+PrqDwtoS8PwpeoSS+wD3U7sW+VUN8Iec7+ZvHRjtyI
1rF0V7KRno/W0auxeno52UAvZJno0UdSuKUt47jl9SPpgsph3DzG3ukpwcqh
ZUyalyLDQlpg/kOMXCyshXN3Dt/e+HVFn0roR0+FddeFNc5gfH2jZWoDKVDr
mWnUn/ubjbj/Ztf933wt00O8bUbdjED1C9jDhX2Gmd74nfXpU9h1PCSxL+2F
WCl8O4w2SrTkPNvVN7rFbeq9wO9sPPXCMNqjwlZaJvQcjTFeobFBl2iF8FO0
afI+V7kkovYHbIyueqLKpntiG5M65ZgSI993o9/F/sgLJPYl5mEKhPyILa24
eUJ9I9SCxjpof/D4UAdu5PR63Ix3M7iFnRK4lXqOIO/bvvYO7E9hT2l/m0ql
GoM4oqdtlI33FrHPuU06F3olrD9GG16E787XN/oB8QxtELnF7iO6BuKas/9/
Ivsct4kD3zuq7+MPY9+1u06n+8pTv7O+vB8f15AiLulKqOVdwGlVa7n53ady
u/81o7C+0cCmv3CHn50UEDZmRGJf5KJtmqN/ox5zQD7DU1nrNe80WHlPbKNV
ubWoMejKt3q9HnkagdoD1pWOMSt4oxLNta1vhD0GvV1zcpWZ7dxb10Rueas4
br4Q+00L4SakmZQfJIQaevFra/9N7taF34aa72ib7PFN/tiKALFiWXp6ei1P
2mhwcDBqHZSEOXtP9R/C70mH/VOoglwHm9U6ej4yMjB7aWO8znyLXGFLHWrk
62JNBfZ04Y8dF2qX+tNY//oquwave+L3tLS0Rnxcsra0bnSoZQTXL0x7BPly
hfWNRrc+wZ17aURA4gpTOsy05GjgcyQGX0Rcg9ZPOEB0KmubTgs7GxA+ty6z
Wze+49xCPh96YbS+QvQyV75lv//e/DpBqfZXsBVqrRf0TqHnBTYvauQ8l8PR
3FvbWG4l+Nsgipte1czYG8yNEObeEPutUqVKnKv2gbUB/N7v6xjv2uIY5ur4
2I+F2QHis0dz+MnJya2JdS+nkjBn76neJdZru5NTkb+VGsZqJbcBNZUDca1h
2NMQuXvwvXCPhLxqrDkn1v76l8TExEr+/hyoWx8VFdXLXb+z11RQKBSoHVtS
89uxt3QBrRB2JRBrThxy8f0GS2lF80laKeIEfa+BpWYet+6xCcSs/8Xy2aIM
VwPyOapGHzOsf3JSYdx5WLu5oYnRbznzLV9/H5+xvsQ+FITfWUGbWOuaE9Rv
Pt9NOQT8FebehNhvTTOXA/5WMCkHIfYbGxbSErFfMeKEcXFxVVg7GYX9oxGD
JNZcpcIxdYD4/I27bZSfs0f/UVLm7D3V54TfHxBsxh6xgVqrZ2uYN7DZc3A/
9tMid++Fwef0APh9DsbD7vqez29fLqn3XAv7WRWQ2rFg89/YaztQXL5nDH3g
2ZG0c7kdNCPyOI0Nuox5QSK06UDxuVz4mXv2GGxSJs9VjW9+Huk/0rrvHlnu
QWAqBfkjWE2/j9DSVUlB6o/jwow9w8PDa/l7noaNo7JZuyyMVYF72N/O2fjZ
aDQ+hLqY7N+HxfoM/NyY23P4rI1i7+ppUjrOR2H/UoGDN8FHxsm34O9AsRm1
45gfN9p8juvYzwX7zhIHfMbYHntasX58qMh83tiwYcOK7vjdYDCgtgXqqpTk
/PbCsQ0JUt+k2XGH6Bu1c7ltT44NGJv39R2F+cDCz8HYTOODfyImLfJPi/CZ
W9B9Kk0OuUCfr7ZWzM9xT+7zwefH6MtHL3Exj4RacZuldJwDYW4Le5jaz9H8
DQZaciiDgrr4k9Gsfczi/887mHNOTU0ti5wn9v9fIDZ8Rv4b1vsKLEceloh9
RB135/D1ej3WHh+VyF9iCeu7UV8Pvr9n/gbxX6zZQ117X/cMdGVYo0L4fUux
dwnrG2riOF/joJDP6L8xJ4FYDHFQN1OE359b903R0dE9iTWeFSuJx9zXUAK/
0rtjr0JDHkWbMrvowGYLuGPPD/fbuLVd2rfC/0nrJxwU+gYabbTsCy/wmRvR
ei7yOSzjaxzvJl5dDnw/mh55sjC28VWbeWHxUS87mUd6j1hjCSqJfFacOGbV
meFzYs88e9/e4Xk9FPXNxawthn3g+f/jT+xxj2OMlchVs7Rdgc/YD4L9fZKf
MxeVz+w79dDpdF8W10ZR64qfOwiWwkl+Uioz7MmENSGF96DkLq9PYk0feC1m
3Q02Dh4i/B9Y741jlvp4d2McFj7z+Xfw+zkiMp8x/8jeb3Nxfr8P89sFpRPr
XMMBxuvCPbwtRuk/BHN3HcvtoENbzlOeeVG0dSq0bsIh4f+hr9e2rF/EGJ6o
FJZxoMBnzN+RcP0vJFj9OxGbz0t7TlE0TtpfGNtomJznqIYov/YT4/oUaVzk
lQzMmjMbwcxRnszviBUjZ5gxy6e1Zax9TCd3WXAGtYXZ3zdsju2yO98yPy0m
n7FnXXFz+KixwT4L/FgS5+zFkkf9NGIU3l5zdh+CGiDCfdsveF9mP9n8XzfY
b6uGcD72pCUi8xm5Kuy7LCiOzwqFArlWnwTeHaJKR4Q2TS019u5t04ydlvzk
xytv4qZ3muFLjjLtXG574fsGa67T+KCfhNwNi5n1Pysvv1I4X0kbJVribWLy
GfcIqocrb7XweW+/sfqy0fPs/YrasXw92O7SuEQ0RTPrwQyxCMscrK3ZjrGw
VtqTNsLn3h6xeT/s97xNmCfEeNVgMBTWfvAHn9lYbpCrOfzG1jl7xFtK6py9
vyT008OJ4376Bu5/0L952k/z67iRa1A4rkNOHTO0bcu+srZ7NPmDz8gXYp99
pCs2s+eR67lVgmvvb0UQa5uey3h9N2YtmFH9O60Rc5S+WGMNt6VofSWXY9ej
z46gSSEXbN/PEn/G2m4N9xfRKP+iT2Ru9CufX6ixRvNq9hpLbOODpouj4mP7
OphHOsD+31ESXX9/CXMjGGNhnhNtyVns2jLGcid2jZrsyCFAnBHcxbgsPT09
EayH2cZT/MFnxE5czeGz75JPSn5NukAohljbNJhVeI9DvOynkTPC/PgKamEy
/3+IeDd+L4LfMW/rTz6z//tZ9ht915nfQ0JCsBc2OHO/5bd7IyHOtYHx+hax
53W4/hfUUqb/12AZ6mgUy8gzLw6lfTI30FZldtPnquVhPSF3ktn+Z0bBbOMp
fuFz5/LbNUNaLbTENrKT8uzngNlvFHuv7pPucgdMwn0T5iUcjbFu8rGQ/2Gf
e1/zuPzE503O5vCDgoK+JNZ9E0rynL0UEr2fdmX+4DN7z4/DwsKecuR3Pr8d
94r3Y367r0J/ZI1zUYIx5j/E1reosW8bC7GJVXjFUn/wuU7cYd3SR6YZdzwz
3pAWNdvWt6jjwOeHlbS1n4FQJLkbC0Fsx57Xl1FfAffEUVFRGSWEzw7n8GNi
Yrrx84H3Q006qYXfOvrpQcy+J0X9/ocv/bQ/+Iw8lYSEhFb2frepjXO/5reL
LSOzDsymM14XbdN61c3CWMi6xyaUCD6XCz9tyal7s8HSmMT4xwTf8ms/0e9W
lu5ylijhvulZYs0PcJTPJdwTP1rcWkO+nX6E9d+sjYuyXzQ/h7/Jvo1ijT5f
g/h+m7MvKRL66a+ZWXJu7OySTT9duTg/4feBPa+Qpy0in/OY/zMdxLMwN1qS
atKVNKFNY353FeN1kTZ9TyzEjT3Daf8aazHe5T5uJFo9aCH3WVsraW2TJk3K
280jSVmTriRLuG9Czg/awL05P4zftmMszCGJ1RadmbM5fOZH5DjfTzXpSrqE
No21d87y+MYhFuJOPy0Sn4vcN7F+ADWbDkt3me47CTk/iHPtJfZt2j6P7/wr
Q8RisFO7+MoQjJ8N3zw1wZAWOd2m38V6KKlr0t1PCifWMRZqitvmVgl2VRhj
RUREZPmjjQYHB7ezn8Nnj+eR+68m3f0k2366aHzTrp/219pz+7r8ZrP5mRJa
k+5+kpDzgzgX5m3ubdNq7tY9sWs/8BkxFkV2/BH9C3WWx6UkdodvDQbDYFIy
atLdz7IdY1ly1sm9Y6xTQn4Acj7cbYe4J8YaFEfPMRY/x557x2bOHvvZPChz
9iVFtv303XXBPvbToaGhDVCn3tFzyBVhzxXuQfeA5LdLISE3F/sGFM3jC9f+
WhgL2d93lNvxiw8bLsGaF4d8HtN6trJThZ36Golr4FvsbcTnOZeEmnSlRbb3
TcgPsF8rcU9+gKs1jfza4Nuo9euA3ZjDf5Kfs2/Fzx08iHP2JUmi9NPYH4tY
5xSH2z/H+uGm7PmJNnHJ8+TBy2+XQvAt1vYXbdOUIBbykztrGml23GF2fgF9
s06RPcfpm9krUZffkBoxiV/7iTn+klKTrrRKuG9Cvpuj/ABhTeP/2LipntAO
UcuDPSfkc97EPJPdPa5lDh9z9qyNYuwmz9mXLAn9NHKRHfXTTmsP8GtdLL8N
5ufxtn5nv4MnhP3M2GvXEmvdZFmBlZCb+wXha9HfYyq7PD6bNY2F6xGx7rFf
tbx7xs8Pp29RN03dkVQmqQ1r0ydJyapJ96BIuG/CPXGRnB++zs9U1vbAc9v7
qpsGg+ERGz5b5vDZeag7LM/Zl3y520//HyH3rLMAo8fZjK3fYf3488HBwQPY
cyeJnN9eEiSsaZxMrHtm269p/MOSx/dwxS1Eqbibbw9G969RWPsO+XraitGb
NBoN9pLZINWXkVUoxIrrMfuAOM4LKbJmhjG6lzCHz8ZS2JP+iBQfXJbPqkCs
+5FjrThq8rny+x8Co1Uq1digoKC35fz2Eiv0lzWI9b7pG1L0vsl+rH2bvlZ7
lTX3OeyMxhwELiNmJc8jlTyFMOtMrGvrHe5vx+wP3A9jnM3nOZuk+rCyRBPa
YgNmHxLH+UACo7GH2gq+Jl07qT6sLI+EnBqs6fyKOOuH2Zga9fJosOZXfq43
TbJPK8sdmZn9RRy3U+R03eGtoVQfUJbfhBxml/dQzIZJ9ulkeSv0wc7vkyif
c03IY9J9RFluCnN9lj0biJXHyM3AeqeTzEYz60fk8VNpVCi5N/Z8nTf4H+sT
kD8gryG7P5VN7m3TmHsCr1E3fAqzV4h1vbKski/MHcKHiDFizUlvZnGSfiJZ
gVA3YvU7+mKsGXuNWSYzKuWHkiWK3idW36K/Rf4l8jDlfNj7U9iTqKLUH0JW
wIV4FfJd5bmh0ifUacoicr6NLFmyZMmSJUuWLFmyZMmSJUuWLFmyZMmSJUuW
LFmyZMmSJUuWrNIjrBeofp9YNWbB/rkMD5y0xJp3LLVP3TU5N959BTGrSqT3
mbsm134uqsRQFdmSaiR7WkaT/NaxJK+kW/Nosi7ZQPaaVGQ1sa4Pl+W5NHoT
mWSKJQfKNiQbKrUmefeDxaSTHfpQsl+lI7WkvoAlWOEkVLuKJIfsJc2T15HW
qXkl3lom55O00N3sc29hnz9J6gtYQqQ2qcl3SxuRcX/3IgPuN5tch0wJVln2
uJLXnHkonYlMa/4mWTjybzLgfrN395MhQRGW2h3yWLqoKAlWbyHj204lf789
4L6zlQ+NISbNfmK9r3ugpeVIn76pZLnUnPXFWsWSfGKtNSzLfcWYU8huqTnr
i/UaQ77WhZCRUl/IEqjGbMycLzlnfbFns5YyOD3wtVfCNGTcokZkvNSM9cWG
VCOzjEryntTX8j5Tm5qPkBVSM9YXG/Qb+VQfSrZKfSFLnILUb5OBTWdLzlhf
x9Dh2qlSX0qpZdaSOTtbk2FSM9YXy6lLJoWpyBCpr+V9pocav0SWSM1YX80Q
TnZIfSFLnEI1n5OpHaZIzlhf7EDfwSRct1jqSym1ZD4/sJL5XFol87nUSObz
AyuZz6VVMp9LjWQ+P7CS+VxaJfO51Ejm8wMrmc+lVTKfS41kPj+wkvlcWiXz
udRI5vMDK5nPpVUyn0uNZD4/sJL5XFol87nUSObzAyuZz6VVMp9LjWQ+P7CS
+VxaJfO51Ejm8wMrmc+lVTKfS41kPj+wkvlcWiXzudRI5vMDK5nPpVUyn0uN
ZD4/sJL5XFol87nUSObzAyuZz6VVMp9Ljbzh88mO5Mta4eTgqxXIsk5x5BtY
21iyLS2YnGwbQ7bj8YTaZJpwPv7+PIvMsX2P1U3J6N6pJK9HItm4sjEZg2Nz
65OJjSLJnps9yccyn/0ur/ic1ZlsafQ8WZnZiXwjWGxl8kNaA7IXfzd5mSzH
eb1Gk+nVepCN2X3I2o+Oky/t36fD/8i83lPJFPz91TXyWXJtcuDVDWSkzGcR
5A2fb7zxCWmQsJcs7j7O8njNI6NJ74w80qPiRkstZhx7qOIG0qnsNxarH7+P
ZEZ+X/j4x35fFb7XizVWWF6Pv7f2Hk5qxx4gF178Quaz5/KGz61jyI5EPTk/
qTaZ+nJ5srxvKlmTaiRn2NsV9GHMxbHF/H5ZOCdYRa6D58LrFzQg41UKcpsd
/82gJL+rFeTWqiZkzC89yKdBSnKjX1mSK/PZ7/KYz92+IjkKjtx5KodMaso4
3Kg/WZlal3xHKfkntT7Zh2NdvyQ5DZ4lq9j7FwRFkiucivk5hlwafIN8gvcY
dpN8zNg8H8drPEQ2CO+dXIscjMsk38t8FkHe8LlP5loSovnVwulF3ccTleIW
CVb/Rgyq3y1/g9Fv11lMXq6xnDF7E3vuBuPnNctj2DnG3yuvfkb6ZmE/0ALy
v4bzC987xviTheEynz2Wp3z+lp3LUfL3u5XJQjzunkA2EfiDt72tyVDhXMbg
W8JxWz5nR5D97D3uHG5HBuU3JaMoex7jbzzXK4msZ8y+ca07+Uzms1/lMZ9D
E8gF8Bh/PzqBTKMK8jfh/dvsdbJUOE8TRG6EJ5GzI2+TAWA4nu8+iMx6JZ+M
At+F19jy+em5ZCKO9ZlBJst89lGe8vmnlz4nOuUflvEyHteN/45w9G9y6JnB
ZMOjIwnrf0nb1O2W5yL1V4jQ3lNNZwrf4/Mms4mC/lP4nC2f36yzhDH+Njn6
zCCZz57JUz4/xcbKGgX5C2NdPP6hI/lqcwsyAnEJYsdnHIcx/v5jy+ckAzkX
qyM/CY8xhi4XTE7ib3wWvM+XVUmOzGe/yiM+919JxrDXFPQaS77G44FXyGev
byYjWr1N0IYK+TzgNBmIxxkdyFY8fm4BGY/HtR8n+RhD4zUPjSAziB2fYcHR
5HKlVmSHzGcf5SmfwVLKmAom4nGy6Swb814qfD6IjZXLhZ20/L2zzzCy+fER
lrG2LZ/BeBzvX83SH9/DZ4yrlYzPiHvIfPZInvK5Whg5nGYkp+yPd4iz7AN3
D58Fs+dzmJr8XMZITguPo3Xkki2vEfdADFvms1/lEZ8RV0Yb/uIy+dz2uMBa
gc8YI+NxjV5kPR7/ZzcZSmx4DXtpNRlNHPC5bAOyNySOXJT57KM85XNrNjYO
0/1c+Dhcf+0e9iI+AbN9Tajul3vOEWxAw3nEns+wpJCzlji0zGeP5Cmfkw3k
bI1wcsgXPkdqyZU4Pbloy2fEs4XHCXpyATEQmc9+lUd8BkuVGvKn/XF7Pr+1
lQzHY8wV2vI5qyvZXByfMfeo1pPfZT77KE/5XCPmkGXMLDyOMlwhscaL9/A5
IeiCT3zOijxK0kJPyXz2TJ7yGWPnrFByxBc+I5aBOUPb+EYVE/nelteIl8h8
9qs84jPiEwoluV0cnzG+RlxaiFM/PZ9MwPMN+pHc4vic0Y5s04aQX2U++yhP
+Zwdt5/x93zhY8QygtTXyW3+sUF1g2RE/OATn9MjjpFK5h9lPnsmT/ncIJLs
jdXdHft6w2fk1RFrrsdazAfi7/7lyEo8h9w6xLdxjsxnv8ojPrf7gMxnryl4
dz8Z4orPsKjy5IRKS/5EDl18FjmCuIht7pwzPsdXI0eiypGTMp99lKd8Rg6d
XvVHIY+RywHGYr6wV/p6y9+IK/vC50j9VdIiZafMZ8/kKZ//rzJZoKDkn31t
yBDb448nk3zElQ+1I4PtXxOuJteQkyc8vtCFfIE5QsLP9WJMLuRrIB8PxxY1
IuNlPvtVHvH5g8NkEHIvMB9oexw5zIYw8jP4LRzDnKDaQH5n/0cBcu9sYxsw
sBqvQR6ecAw50Go9+aN2b5In89lHecrn6R0mE7TFuV0mWh4jVxnxYiEXA3GJ
a69+ds9rcKx69KEi7zWsxUxLLHtQs1mFx5ADjflH5HjIfPZInvL5tx7k0xAV
+a17Itnk7mucWV5TMmpDczLS9hjG2bZzhzKf/SaP8+sQswhLJOfcOXfQb+TT
5xaTceC6O+e3eJMsQU60u+fLfHYhb/KfEd/AmhPbY/mPjLLk13nyPo6sQ9pW
C7NvvvmxzGfP5M36FOQ+65Xk9yvd3M9Rdse2tiDDkVuNdYQyn/0uj/n8n2/J
MKWa/PX4JDLVk9cVa7fJAKxhqcnnfMh89lHe8BnnKxV3yP5/DfGZx7Z25oWB
RMP9RT5uNNej18l8tsgbPt9mNrommX66ExkoJp/3tyVDpmaTKZ6+TuazV/Jq
fTdiF8hhFpPPyItGHBs51TKfRZC39TcmtZ1qWZMiJp+PP/8lGdv6a49fJ/PZ
Irk+0gMruT5SaZVcH6nUSObzAyuZz6VVMp9LjWQ+P7CS+VxaJfO51Ejm8wMr
mc+lVTKfS41kPj+wkvlcWiXzudRI5vMDK5nPpVUyn0uNZD4/sJL5XFol87nU
SObzAyuZz6VVMp9LjWQ+P7CS+VxaJfO51Ejm8wMrmc+lVTKfS41kPj+wkvlc
WiXzudRI5vMDK5nPpVUyn0uNZD4/sJL5XFol87nUSObzAyuZz6VVMp9LjWQ+
P7AqLXzeKfWFLHEqDXxGHWqZz8SkIl9NreN5zeWSZB9mknkaBXlJ6mt5n6lB
RgeyWmq++mKfnCEDDaFkndQXssRJo3ievFd/geSM9cVmdppEQnXDpb6UUovj
SPtWsSRfasb6YlmhZBv7KtWlvpb3mUxBUeTgsJvkY6k56621+jeZrw0mH0p9
IUugqpDMyO2SM9YXa1dmLVFzXaW+kCVBwSqy5t3KZLbUnPXGnk4ji0NUZJbU
1/B+lCaIvFm2IdmI/UukZq2n9uR0MlEXQvaxr6GX+jqWSAWrp5EnM5dKzllv
7IMGOSRIk8e+BZX6MpYQqUPVZKBZQ/ZE68ju+8XweUPU5B32+RVSX8D7VVoD
edQQTr4Njia77xczRpA9ulAynX38MKmvXwmWgoSo3yZm3R4Sbdh935hZv5eY
NF+xz6+R+gLKkiVLlixZsmTJkiVLlixZsmTJkiVLlixZsmTJkiVLlixZsmTJ
kiVLlixZsmTJkiVLlixZsmTJkiVLlixZsmTJkiVLlixZsmTJkiVLlixZsmTJ
kiVLlixZsmTJkiVLlixZsmTJkiVLlixZsmTJkiVLlixZsmTJkiVLlixZsmTJ
kiVLlixZsmTJkiVLlixZsmTJsiiL2X7Caf6mVPEb+/sHZsuZfcCsETOlhJ9N
lv9kYraA2R1mvzA7y2wjsyHMujMLlu6jyfJRKcw2Kwj9h1IK355gtprZZ8xa
MtNK+eFkuaVazA4rFIorer1+qkqju0g1xsvGyOQPg4ODP9BoNIuUSuVB5t+r
zK4x+4mdv43Z18yeZxYp6aeX5a3A5cXMn9e1Wm2OWq3+pVmzZuWYGoSEhLzJ
jk1ift/Gnj/HDP31r8yOMFvI7C1mmVJ+eFkuVY7Zdua3Xw0a/cq26sRbyYbQ
2WXKlGnK+zaH+XY3e/4yO+83tG32715yt03HSPnhZVlUndkRxuWLjMPvoW1G
RkY+z3h8SBeaOIxLabZTHZY0v1atWlXwnGDMx03sfYz268DHcZJ+O1nOFMYs
l+fypAYNGlSCXxmff7b1s73VqFGjamhoaD+e2+vZ7+YU319fI1Zu5zL7iFjv
tRRSfsEHWJWY7cVYOSgo6Av4LU0XlveRquqNV/WZSxJDo9525Nti+uTDxHp/
hT65spRf7gFRVWaH2fW/wrj8vq2fwsLC3mM+2tGkSZPyyvDUVeqeC2Yqo6us
jUkq08VV24VVr169mk37lcddJU8YLwtczrHvd4vjszPD+7B+/TF27zXKhts/
E6vfcT8Nbg9i1onIMTJ/CXGMbbZcFrjbSpuw4xNVtV+OGLuNrqeN3VguNbWZ
u76165O3Md+el/tkvwnxZXD5KuIWjvxhMpkG6XS6dfi7YsWKdZTRWd9oXz47
Wl2l91KdOflzcNvT9iuPuyQXuLwQ97qOuAxr3LhxBW/57MpiYmK6gBfsniyX
+f0Hnts3iDXGvYHc5bZawutzPyuJOOCyYKnB4aPG6urnf6aqfgV83mHsMD5V
G7qhbt26lX3xq5t9stCm5T7ZtTBexT3PZWdcFoz5eBK75osLx9OxqU8ps55a
pXvtwih1+/E56ohyS9PT02uJ0Xazs7Mz5HGXX4V5PXD5F2dcFoz5tD5j6E9i
89kNbgtzG1fYZ73OTJjbGMvsMWKNxcgqqgRmGzDGQftB/+qoz62ii8qfq2uy
7kt1jfPgM2yKodHMJEPYRH/4VWjTcp/sloRYVLFcFsxoNC40GAzTbI9pw5Im
qTtPnQ1Ga5/dP0GZUHtDaEzyswFqv7KPPRfm5KcjjgH+4f6luOsdFxfXnZ17
KlB8dmaYv5LnpF0KczoCl0c44rJgCdHRT76lz1o6Tddw+xBNrVMCn2G99eVz
EyJi+wfStw765Mt8u0abtu2TTVJe4ABIiEX97Oiex5UxNuex9jHU9ljDhg0r
KsNSN2r7HRgPRsOUtV5cpg5NnC7MLUnoY3ncdVcWLjP7zV0uC8bGPM9hXlhq
Prvg9oM+J20m1rmDn8Fld9pdmj580XfGzmMnaOrtHamp870tn2E1tdEbcd9U
Anz7oPTJQizKYy4LptPptptMpiJj7bS0Co2VifU3CXy2xDswd2guvy4lJaVF
CfMx2u/FUupjR8I9hFdcFiw8PPwdxr6dUvvRU3sA5qSFXJvfbHNtirMqVarU
aqZNzAOHR2myj4zV1N1vz+dNhnYTk3SmPIy/pPajszZdSnIBhVjUVW+5LBi7
FgdYW33R0XOmyKTXlLVfXm7LaO0Lx8YqU5vlBUUk/FdqfzrxcWked4HL49Ef
g8tglbfXiZ8XXi+1v8QyZ3PS7HqB3cdJyZ+TFnJtPOKyYEnB5q9mGprOBIeH
amqfmKKtv9Oez7CRhno5ycHhQ/3hA3/ZfZSfj7HgSv6eZ4yrWJS7xr7z8aio
qF7OnleHJc5RP7xohi2jLfGOhu8tUoclLahZs2aW1P5zx5KTk1ux8fYAxrUl
zMeHeF7fYP9+L7FP3RF48hV4A/ZUqFChrq/Xg/XrE9hvaKnUfvGHIVchMzOz
Du7zoqOj+7DvOVar0m1WKzSnOaq6zhHlXwrC/cWuqUpqxzIZmc3k53RnY77N
m+9cWReRLzB4kKbW2VnaRhsd8RnWRZe6NjUm/lGp/eSN1a5dOzM9Pb0e2jMb
V/Znvp2iU6l3ahTKcyqq+ENJFLc4Qn8NsA+FWFSxcwSeGuPVedY/NXf2PH4v
yojyGzFutme0+on8qcrIShtj4lO7Su03T81gMHzJrifa6JkA+9ITgcuDeS7n
ZmRkZIv1/Y1G43x2DWZI7Qdbw303xkpJSUnt4uPju8bGxvaKDo99PtqU9F5M
cOrgaEPKlCh9yqJofeoS9u+qeH3FFSn6asvK6GvmltVmr6mgbZifqW2VX1v/
0KrG+n4rWutfX9ZR997Sh/SDF/U1TMt5ybB8Wnvte2uUVH2HEnpbYt8KuTY/
ezNetrWUuMQez+vTVwr8/UJT49JCbdNVzvh80Nh1TLouYoslJhIg3+L7Cb6F
X81m83NRYeZXkkyR76UGmwenGMKmpOrDFlTQR8zP0EcuTtdH5FbSmfOr6qLy
srWxaxpq4/JbaZPyH9KnreqnT1/xnq7a0sH67EVj9fXmTTM0zlluaDXtRW16
vppytzmq+CtAPhRiUaJzWTC1Wn0VfZKrc+KSUtspy7RYb89nS7xDyJUOixvi
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
QZecn5CQ0Jn59oKIfkRd5pvMCni7TdXGb+z57MjYODo5ODi4HePr6yqVagLj
9TpmOxmXFjKWD8AcdXFzEcgxZa8/7Q3/LLVIozK36l47XyyfLfGOx/OnKiMq
bYqJT+rmTy5jPpvdc5xArMhVn8XG1ugX54joS0/EMTvK7B/e7zejaLkD9nx2
ZF8oLw7pxy2a2oK+kZtJO+5MoFnHImna2URFtWNVlZ13tte8t+JV/eopDxKf
3zFuH5+mrbtFpzJYah0kJiY2czEmqcfXAPCXyjP7k9xt07dSqXHXJWX3wfaM
trdzym5DF3GNpr5OK+W2pLF7ytKgM4nU8FNtRcQRNm7cPFhTa+F2PldigbZp
3jZNu8P2jD2v6bnLWz6f0XTfPUFT9yTYLzWLbe07Y9excQrDlXCq+XW7k1yR
ivrwNSEhIVhDuE0kP7LbH8t6479tfPkPG0P/qQmJftMdRtsbG59Gh4aG1mfs
eUqIjzDbypi93CY+UphLGxkZ+Szj82FvWRiRUPZJZZUnVrvDZ2uu9OnRyko9
crUh0aP9kSuNNUWMzb+y7z6/uHNZn4b99t4SyZeeqh+x1uYT/F5ACb3Zixs9
yx1GOzJH8ZF4RebxDGXb3UJ8ZIDxUKnj81OGKbNiteU2s9/5McbdU8Xdo5lM
plfY9d7lR99uJtaxs+DbOwpKD/fgklYUx2dHBq6v4ZpPtI2PxFHDpcrUdONZ
rtz5Uao6P3yrbr9PYOxpTfd9a1UtbnnDZ9heTceD0zQN9knNZMHyDK0nmxTq
61UUYcednTPJ0HB2UkjEAMa9mex6TxLJj32IXRvl7SZRcDdDI2Lre8NoR4b4
CB/T/kiIj7B/1zBGbWB2wtv4iGUcGpYwUahF6q5ZcqVDE1eVL19etPxes9nc
FzFH1g997s75/DxvbZF86YmwFvS6A7//oaMhJz9Tnh/iLaPt7X3u0EjER+rT
vuvK0kb7Y2n6iUha7gxi2lW4DrcRH8FcmtSM9dbq6h7Pj9AnLMB+bbZ5ky5/
r1rtFGKtweIPdWH2uwPf3gzltLOHcDVzvGG0vR3hOk6cRxv8uIQ2OvgerXyy
PY27nElDr2fRsN96KpKuvsVVvp2rbn7wrKbHLm8YvUzT/Mel2ha5UrN5kq7h
HB1V/tlKGbfX1XnIcUH+PmKa7Fo/K4Ifkef8iwM/8kb/otqQ41WqVIkTi9H2
xtiYwtg8lTHtKOP118zymW1mDJ8lxEeKW1cIc1SL1K2xNHKlY6ttCI2M8zlX
Oigo6JPiYo72xs8jSFEnB/27bUzL1m5V5lqvE4vPjgz8f45bOK0a6X4LMW3G
7JMRNO1ciqL2kVqqh7YiPvK6Pm+y1Ox1Zf+1xDOyt5iNEVj7foMx1+3a86wN
f8Ou80t+8CtyZC878WsB+5ynk7igpY5i0Z7aQtpw5xXabddf9OFttnaJdtvJ
mH3yPVL5r0dpysXqNPzXijTkRjtF3JU3ucqnZ6obHTmm6brbHUZPVTc4vdPQ
capUbH5dm7EGa7WfU1VY5+o85D2X15tX8mOuc8S6T66vGkbujWvY2x2q0v/E
BcfO9BefYYzPIxmT59vHRzQaTX/23HD23Ao+PrKAjUsHIj6CuLP9bz4trUIj
ZWK9TZ7wWaxcadY25xQXc3TB50Arg9x772tvt1VU88Pz3JLJ/mT0x9yJMZ3J
5zccxUeq0R5bE2n17xEfiVNknEBMu5XmzdX28RGp7EnDpJwYbZmNqHWF+yXW
Nzvc/9TFfRNyWf1R5+x/xJqH5dS3bOzz33Rq2uhOLNqZXVX2HDyX1P/Rns2C
naSdjn9LWv8mPL5Be27fS9vumULrHH2BljvbmEZfq0xN1+vTyF+e4eMju9Qd
9tnzGXkh4zR1Txw2dh0TaDZ3ViV9q6XcX6M0decVd+4Ifd15SaFR7/BtWox5
X9TM+pzZFN5mkrt97Dpma2Acp1xDgxN+1JhiXvUjn2cy/k70ID6CmPZSPj6y
lh0bK+SPmGLLvGRfi9TteEeP+TOU5rIbUlJSWrrbzpAbztehO+1pXgj+HyJN
XST0yxdtTOijcS91CYbvE0lTtw9SXvUbn9/h9kzvSgb+4nZ8hOu7PoVmH0Zs
JJKWPSPk/D2mGz0vkPERxDOiDWWmonYj8iax7sjT/txP/bKG2Wxm23nbTe62
6ePMfuRtbWKQub23sWjYRq7F4n207SFnfD5GO57eQ9r84ux5wY7SDrvn0PqH
hfhILTbWrk3Nvz6sSP7pE1W1E4iP7NS0OzRL22hHINmcxZl/NFLV77mGVm6N
3RtrE9YhJwDxWT/51iz40j63jguJn0jN5feKGYu2Nca3FWCuN68tV65cKvJH
kPPHeI2Y9maqC7ugaPzREWXPJevVfbYs1L58apzb8Y67udLvFtfGMjMza7Nx
0AV3Y472xj73e+x6b/KDLz0V8nALjEZjD9trG2GM69GI67fEX3x+g9u0oDsZ
dNnb+Ig1f+T1XMRHwOtwmnQR8RHk/HXRfLIU62nE5PK/DZsmpmir7YgPS30Z
cyasHV6qXLmyV+sAAnTfhNriljaNe1L7thOvDvp0mJexaDD1Jn14uzPuHiEd
zu8n7a4Ux2dHdpF2RXzk4Me0ynHER7Kp+ZeyNAhr9E4L+SP+qrXxLXvfKIX+
WqxCf2WvsaPTvEJb22/sMqacPmw5/BodHd2DXe9jfvBllOBL+3gz+w0mMD5v
5sLLrsHffuDzJsbXt8V6v4oVKyZRU+pO2n3hatrx6z209egTtOXwc7TthCPK
Hgs2Kx9fv0Td/3uXOdPKBv9drDbFLWPft4aj9pWYmNiB35d6kjftE6bRaOay
6z3KD770VLgfA5+72l/LMC5+HmIO/uDzi9zKVT3JsHNivqdtfCSeZhw305Tz
QnwEMe1+unkzvGFzH8OEnGhdmXVJSWXasD75GLPD3tY/wG+HWPch9rcSCd+m
2X1ehL1vcSyFC1q0m2s72hM2H+c6j11BmxxzxdiDpN2lQ6T9RW/47Mh+oz13
fEKzzr9DK69C/kgWDT3GmH22miL8WGdlomV9zWp96ym+sHmxodnXbMz8Ry1F
xFFPXveFrtaChLDI1+Bb7FPCuLDKD74s7GurV68eY+9LY1hcD1q+43rOFD9N
bD6z3/puxrm+Yr5nWFRcHZrafI3y9Z8HCcb1Pz6WPrpuEe0yeyttPeY4bTns
PNjNdcnZoXxk1Sp131052lfPF9b0sORKh5fbGhWbcM++ASaT6TU+5ujT3i3Y
V4Vd78f94EtPhTriBez7dLS/jqmpqeWSaLX1/uDzc9zCjb3o6BP+Gp8L9n/c
/lFCfAQ5f2B2BC1z7t41kc7XrdfVPZ4Xayw3HvseobYVG0ss8cXvfMw6LwB+
xX6glnxZZ+2Efae0KjQ0/7Kyp9ux6MW00daLtNseVzzdR9pe+550OCsWn2GY
i5xJ6x22/SzCmsjHudRNWF9TnoaczlSEHm+rjN+N9TVTdA1nH3Qjdj1El70Q
dUG7q5K3ecr1+tq4dcJ+BmzMtYxd78/84EuXfS2MC0mcx1V7ZoXGFPeKyHz+
Xq/XF2GDr6YOiX2La/TBXFtG2xv30tmR3JM7cmj3Retou4mHLMxmY21Fx2nf
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
DyZ/8GPQF/37eSUctBnsZIhZBmH9EpSPv4MYZrCpM3CdLbY8C76OqTjttC0/
g11d2PnheFxlxSBcwWFc9B+44+HLqM156F8INvZh1OyPc6jVlV9w+xOe8Im0
xKbre5TNjjri5yGq1LNjtTVWHtS3npKoCdriqL53cnJyGvZtLcrJjC55528z
/krwaZylc7EH3fs24NrE8D/Hdwm+Z7Yv3t+UA96zfT34/ZDAhPXklUMT82p0
mKptCQ6OrMTn80CPI/B/eMonQsdiZ2HczEqoKe4FefnnNtrLJdRqtbD2rfKh
LoWA7SF6gO+40PWvCcRLQ1wPHd9RoHcQbu1+qCWMGG5WIu3DEqjmo5boy0fA
pZ62d8En8j7ZuewVvHi3J3wipXGDwy9r5ixyhZ8raFrk9dmgv+dKjP0sFibB
+FMdjbTVYYja7+VRpMpCW/5ch+ttADsYfM5rcN1NcP7HtYkvk7YTR6HKP7O+
ZrCvGdv5nj0utyddcdyBzbgBL/v4b9zp4I+o7WlP+UTScPDNq6qOBx3xcztl
3KVcJsZuoa7e/BidcY69+W4wGOCM/Hsf6nIG4qy1fARsLlTQLj4L9zG+zFvM
tWPAneDPRVaevu2ILyE+j4Qk5cj7/DCa9UUTQ9xmV+xh2GM78Yk45XywB7m5
g3wEenkrW01dauHnMm3zcgmZ/jf/czTwIoPtIcq7Rx17Pmgj/9H9TDpTD20D
c+1+AI74/hnZB4dao6/ugryFN63xtv/YXZ9IFE6+APEYrvBzd930xaGGqAGg
d/obg74IR0XTrLVuD/Dzt7Y6TCQBK27Ys29R6iVbuxhsabCZgavhf/Y8EXqR
TMfVTgI3gwB38+Fn6M3SDJvOuRIX7a5PxF7sMyuQU9hJVeIoN0/lVW3ZdbFB
kX0LzHW1GvhygQ91OZfR5SgB8xTqxy6zkZnMWYTFdgLfA8utTIwe5Kc5reMQ
HGFOxaaqOXn1oi2+aPMkofxsK4X5RMB+59ridCxWCuFn+rzS8qCEbHXPI9OU
nZYu1AaZBsN1mUwG8cP1fKhLIYBzXac96myFjtfXdvS+ivJRXVifkcWfIf8z
Epc7+Ck5PBE4D/iR8vO9YfJfRcnZtvWJdEbjL4G9bc8nIjS2zlZM2pKZzByG
erJLRNStJU6W/o6H5rOdQ0JS2hDzOnvcORfX+B4410Zyqb2bCfYycDPEb1wh
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
SJAgQYIECRIkSJAgQYIECRIkSJAgQYIECRIkSJAgQYIECRIkSJAgQYIECRIk
SJAgQYIECRIkSJAgQYIECRIkSJAgQYIECRIkSJAgQYIECRIkSJAgQYIECRIk
SJAgQYIECRIkSJAgoSggkMpaIkMP6N8fqGRTGUalORWtmB9MgldhQAr5Lir/
YZnsb3r7FJVVVD6mUk3cjybBTcRR2U7lAcb4N/r3GJVFVPpRKSvmB5PAG6FU
sqj+/taplSe71lfcLhOjOhgQoJ2uVqsXyeXyQ/S+61T+onKDPvYwlblUPkCS
jp9kGJFCcRCrlQ+UTdPPKwb0+lf7RudMXXTkEn9//y9VKtUqqvtcmNfw26Dy
K33OXipTqXSjEizux5fgBIlUX3up3NRqteOVSuUfDRo0KBkREdHWz89vKNXt
RplMdpbe/wd97C369yr9u43KCGTVrUHUTy8BYKKyDeYe5eEZ6enpZUua1QeG
9FD8ljtdP/G5etoNUWG6BTVq1CgHugWpXLlyJaPR+AY8ns7dPVTH1+D59HX+
RFa7ayWy8naKmF9MglMEUV4+ilXKB4p6VS/oDy+brD+9Zrzii97/wl/dnCHz
tUkJG0qWLZnO6h2kRIkS9QMCAt6nul/MWbP/ZtbsI1TmUemFrL8rCeKgBJU9
wMvAw6C3pKSkWpSPf+Hq0lZAt3RNHmCzJv/FrMl7qExGVt4OFfXbPR0AuyeL
y8ugo7i4uGeapalyh7+qvHaK8jPIrHd1C0pEabYkxMU1cqbfqlWrVggNDe1G
1+oJVL9bKW9fpq//O32fv6hchPejMpBKHSoyEb/70wwDAl5VKe9zeZkVlp8t
sn/JZHXtKptD42PfcKZ3kISEhDoMb9uu2TeRtGb7CuDHyMfLrERFRbWjvHul
MD064m1pTfYZwL/M8vIi4FSuLuIiddPGvak5MOp11WWWn0H2jdNPrZ+izokx
GT8Rqt/q1auXZ3lboVBsY/ZU15F17nL3VK2pyEUcm+IM4OU9Fl5Or3zZlpct
cipzQj5+ZsTi74iJnFezZs0kobpPTU2tyO61GN1La7bnEYOsvPwXzLG6deuW
ttUDnX89KT+fdIWfHQlFOs81uaKYg/OEwCkvg9SuXbtMxUT1lmn9VIfHv6k6
w+VnVt7rqF0dE6FdCfPOEzoW4AvzF3PwnmD4Izmx8nLNSlf0B5ZOKcDLjOgO
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
O3gLQcia+8Lq9i7l4aaFzWmQihUrRnLm9TT6m9gpk8m+p/N6BWuLFXbuB/ZJ
UeJn0IVfQNRUrX+FjdrA5zbozCsWCOFkVmTKMjewTPmns3hEyEOi473PQ3qE
PdBBKg9Q/nk6no8u7QlnH/Ulxz+yyV9LzvVupciZ9Z5mcS6Hq9YO0q4Z0kNx
wxf8DLJrlG5a9ST1rniT8WNP/w7ioiOeLxOj3m/Qy/4uEyO7nOvgMwzrqV1u
igjsR3//m+l49/eQLoXiSyr/cPRumcfUpq9Cf88lSXT4ajJj4GyHHG1HyJ55
kwr4R8qXvCBvnn4wzz8iAj9b/B2ZE2aBvyOmZEm7do8nBGxPymWXCosnNhgM
byNrLQdvYRKVOxy9PqTrwfH09PQQD8xri3+Efs9jlLOzWf8I3WPnxRPA+Rrl
91/F5OS4uLhGfgHRU8FO1gZ23qgzZ8x3hZMt54Dx+6fL5OG3ZXLt8cLel47R
AjreczykR4jruo3yz1HLPKV7s4qu6tJWAgMDq1UpSXa/0gRvqZuMjybF4Isl
o/APtcvJTnSorTjTs7n8xsHx+im+4mgQS6x0uHaVJ2KAwF6IifCb2rCSerdW
hf9tXFl+2Nl7Q/w31D6Eeod0rOt5SJdCAH0vuHsmVu7RuZcFOoO5rIyOHEJe
aJUphKMLcPbJzLEW/8jL7XNwndSjrH8EfNqkRZ37Fv/IoaWTfMLTFn9Hwyxj
yTiP5jGBb4/q8gJdbzfyeTydw7PoWC/0km5t98Os/EPf9yVPzWkH/pH9sEbR
/zOp3ICzKqjx7itOjomJaarzLzFT41f+O03gc9k682qXOTmPm82Zi7BMf0+u
1K7l8xno94Zemb09oMcAKn/Y0SM7T9d5So9Rwcqh278lU/5YKh/ByrX58lEZ
/cnslxvjU7WS8M2yMfhSQiS+mlZadqpzXcXu/l1V67KHamd6k6NXeCBWGs59
4yLV2zrXUe5SKfC911soCvjYuQJxzwlmbQY8lzkjEqPuLMTd3neg+39hzrG6
00dFtMdp5TfIL6wf7Q5P55Oft44gK0fPQu2fuYcbMz7tEuarsrTkU4rOTXdZ
/CM5M3jXKRXs7xjYd6k2PnqpJ/wdZrO5MZwHUe6bzvc5dA7vQtZe1p4G7Ieh
lstDe7qFuh/gv/AkR9tKmTJlYihffwy1szn+kcNc/4gn/UwxMfHN83Fy9Jp5
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
45oqFSpUeBbzy91gS8wRwfhGqrlrgP1ieB/6MsY3mteyrRaSvXw+MolOm9kL
zp2fQfatGUL2t36aHN811v6Yty06/EOS81ZTxWYxfB7wnnZRZGRIV3N81mq1
uD7fWu8Md4vQY6OIvveq2Txijs8Du91xBptRce0gPbhwmqOfQ3fPSyEt658g
BZP3iop3HMtLFfXZF1cnc32txLJ5XcZUTaW49ab6x1atWrWhE+vJ2iI4D40+
1y5zYxrjzOz1zXzM0ilzeu7iM9YjUKoj+1Jl4nyibrKM+vXJoZG7rPY8pCHZ
M+W6F/aKZnP0giytd3yeqVodvr6+mNe4zQ22xPll5PNkc9eDvYa1Z28wO34W
EaT8cenPNN3VfF49mBTkfA9nb84n2zGe8X4Lsv3qHHmyO9iM+ukrZFWvdqoV
Yvhcv6p6dePGjR83x2f27Ihr6h3pneEKKe6xoY6K+JA8XX2t/ExBqTpxdO20
hZzfnDl4lzPYzPGZ+eL0wqrxTvm8axtGkvdf20q+73rcIqP/2roNcsecpOun
L7LK/RVTpsoa1z4ois9bZ0/RPF5hg6laK6h+fn4YU9rtAdsKNd23mhvTcrkc
1y7hnP+3zuKmq/iM+Z8qbUhXqkyYjXFzzAukYattqg3CxTb8hyxS+L23URSb
Y/IztF4V8s3FLNVqNdahTHeDLbl5BsbgCXgtuBrrSuV3bHs51oTGunaYG80Y
MxpfrxxNHfadL82k4831Trkyi47N6kWOYDzjYibZ2aYhnE353LE8aXu0dX2y
fdznqgXW2Lx9vFdqhWjdPEt57vw8bxM32NIWKdVjIyAysj6JDT8G/bpegORv
rsCoXr/C2G8vcLkbTqzvydWuc9JnFfv4w77OhXYtz5Dr683XWELdnHGEZI/Y
Lb++0exaG9m4PvPkb7TYapXN+3InqmtVWVexsvk6lWwMY67yLA/YthPo+bwR
bYtr89mYHsS2NzDdj3NJWE8Yc7acWWvZWXzGfAQvr4B2VBmbxtWF1rVdSkNm
Zsljro6xlcml+OzddY0qsG++VTbHrZ2m8Upchz3XzdmW3d+2g762nKsFn72R
z2P5/JMCKFn3YKh/qhTykd1a278mRdCDE+l0U71TjkwpiWcsGUAOvPQUOY41
itzNZtS6j5Gj+YO0M6zx+Zv22ryYyLCOlvjMzxGJ7Z3hLsFeHGjX2zgmcA4f
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
j4/MH7Webp8125n18orvF7OHZ0LL+mfI8SXmaywdz9sla1bvhmrqj2d0O+dM
49afDP1qnk9c9ERbxi8/hnFefbQlA7hQimu6M00XbItxS7StTqfD/Og/wIDP
vD94B+vXY98N3I/2F+o8Mx68wj4rh18Tjv0G/sd/xr9AQ9kz1hf3adSpqRwL
I4+nk5CCAhKYuR/8J58mgdMPk+DFa2nEnlkl9fLcHNsIGL1A7tN+ayk2B3Ve
GhCU8JWttmU+F9Z8FdNH3Rkyn7cdxh6nC7ZkdjjJzxldSwiDIuRqche4ivxa
2I+snfcd2Yx/bx9N5zDu3kG2Cnw7NIlOw334HmP96R24W78KnKsQoeoZEaQY
MeZjmiW8D+Mm+HnoZ2PvWJxDTPuSHF4ygKw8kGJb321H9P+a0M1JnVWLLfG5
ZqJ2hRhbejAGaU2w9zuXr4FzSKCvn4S2/x8fo7wMJc/EdzD/Ccco+530pVGh
C2mv9/JgRI/rGK+gZwtSijmYk7yeYzNjsqCYA8L9PbzHTbMMvbJ2DLIZGY21
mDhmY63oNWkLnbWehasp/VKjI2ZrSudPPCDr/PovqrMrdiunDzqvGdR9rS4h
epqt45cfw9j/pL35y+9SwTkPrqY71juGkjF9lbftdYN9lzC2wZj9Djv2G/zb
39+/EeYcYb6H4C9jXQtkNnvP3ZLfhawI5PFF4PN9EfiPv2Q+tnBuMgldt4j5
1TvAf9IZjtnB87fQ8C0LaPRVt8Sjic/XK1SBX60qqUX31WK/gIT+9tiWr6Xj
4yZbYm8s5HNfjDcJcSlBlXJyseNz5Cbv9/6Hvq3Asa3JdN6oD+E3ZDEy1JBx
mEOHxxuyuVdbKIoOhrv+/uq3BbtHB9O0vAE0zRwrsQb/8p9IPsZPxn8C5yd9
Tk4t6Es2IMdtiXnboo2rkoPz+2myzLF5xWDd9PhIr8nW7MjP8z6IuXUoWF+2
uIY7n0eJNSuL541wTT/o/aS/8NlKsBkbvw2JTnsRqiUWkbQf9xpzkItnML8Z
feZiNjOfGmMdonl6g/2CDi6cRpaMX0HSfzpIUr4/zdWOzp+4TPRabZOfu2UE
+bT9Ovio7Sly26jGUkrf44r+n5xVX1mzQ7Uydb+qzhPnsb+rtfxJM2MYe5+4
u56sILhWFfk8j/eFt4LBmEbuMt3L2/Z/7F4ywmCe7038TbD9t5EJhjENPlfv
T+5ziLoIlHWKwPdnpkn/ktDCJaJjDTG/jUVfGn1qEph+FPwnniVBWXtI6Oql
yHKX8Fn3xjZVaHIuX4sux8cvbow9bOZt686aKhhLKRLWeYaEhNTgcyRnMh0X
H0YXHZ5M0/aMpzNRhbjDov6kcOgH8D9UU30EMZ6MPBXY/GZjKArw5n4b+w1t
jvHt2FCaJ7auxplpdNKaJJKLMZEJn8JZ/D+cHROpEkPOYs0jc3x+u7k2PyEh
obk1O4aGhmJc15beGe4UocfGCWHOno8lTmP2HxETE/M4zi0FBQXVRhVqtavV
6o7sPdhH7SZVKReSSnHr6daZk0r5qcsn5nPxDKbFfjTy2cFYs8WYyHXzawJN
ftaUH+ZCi/rnyKnlJfGObzqdU0z98Zhqc9Y+Vetnj3odykvRTRkwW1MxdjW7
Fg0e4DFsLD+AQU13PicL55ems39/xFrQmAsg2Bb/xuPYa314H/uqcT8OQXGd
BMh8ikDTinF5EK9J/yJzHYoPm4qJhCxbRSMPZTgjJkLUDQ5rYpZkasOTs3W+
cen2shnXrfD3XncJ1g9HPn9jag7ghTq0TI9A9JXRZx7xIfy+fhhdiHX2L2eV
rFvBbcztQC7/+Dbcr1kB7mlV3L37JmPAp8b/Dz47VYqkq85Oo2NtZakrYiLW
cp9rJIiLbXh7e48E+3pnuEOEHhtHTY1DU+rj4/M81uzC5zs2Tgfj2Ma5RBoV
lkdH9+bixrLpAw9wbB74+X3ZkC/+K+ZzyvfnnD73hzGRTZnZZO7wzWViIpdW
j7PK6H3ZE0iL+ieKa0p3ePGKcvbwI6pXmp7w2rtgUvEc4aasVHXd6oVh8fEW
14kKynyOJ4nn6smicD0Mcd5OrG3ZuOwG+tjWWfb3x2hbw/wN9KMw/gyykCLw
+vg++A65q2fz4HvIVGf7u86OiRBllfNYi07nEz/HuBadLcp+73id9rrRlli7
pwh9J2ObRQcrB2OumTG/MNaM7MU5P6yjgTqqC1zD15CJwz4ALh7Sux3crBBO
tlMZFzPB/IC/q1SpEmvq9xHBnp2eTCQrrzmhBpIjMRHM8atkgc85/XUz4yJ8
RD0bsWuK/VgHu9GWtkiZHhvWFMc7lF0jfB8ZrYgMm0Aa174JP35aJEv68h/0
aemO2bM4RjOla9LLrNVzupaKifx8QFRMBOMdXdpuIj3fO0Hq1/hD1aLBOeSx
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
G6x5
    "], {{0, 897}, {360, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{360, 897},
  PlotRange->{{0, 360}, {0, 897}}]], "Input",ExpressionUUID->"721f43aa-f8da-\
44b7-bc0a-2aedf709f4f3"],

Cell["\<\
File:Miller Indices Felix Kling.svg. (n.d.). Retrieved from \
https://commons.wikimedia.org/wiki/File:Miller_Indices_Felix_Kling.svg\
\>", "Text",
 CellChangeTimes->{{3.771931370372334*^9, 
  3.7719313728690023`*^9}},ExpressionUUID->"748e2540-c4dd-4fa8-90dc-\
8389104789a2"],

Cell[TextData[{
 "You might notice that if we reflect (100) we can get (010) and (001) . We \
can also get negative indices, usually denoted  ",
 Cell[BoxData[
  OverscriptBox["1", "_"]],
  CellChangeTimes->{3.7719315979253254`*^9},ExpressionUUID->
  "a97f278e-61eb-4cef-accf-6b0d18ed45f8"],
 "  instead of -1. This gives us 6 total planes that are symmetry-equivalent, \
and correspond to the same peak. Hence, we say that the class of Miller \
indices (h00) has a multiplicity of 6. These multiplicities range from 6 to \
48 for a cubic lattice structure, but can get as low as 2 with less symmetric \
structures. \n\nTherefore, instead of calculating the contributed intensity \
of each plane, we count them as one plane and multiply the resultant \
intensity by a specific multiplicity. This multiplicity is then used to \
calculate peak intensity."
}], "Text",
 CellChangeTimes->{{3.771931395862132*^9, 3.7719314333628855`*^9}, {
  3.771931522039572*^9, 3.7719315393435383`*^9}, {3.7719316038119764`*^9, 
  3.771931624629339*^9}},ExpressionUUID->"1a328594-6df5-4148-bbca-\
7b17bf5ab63f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"multiplicity", "[", "list_", "]"}], ":=", "\n", "\t", 
  RowBox[{"Which", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"MemberQ", "[", 
     RowBox[{
      RowBox[{"{", "list", "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"h_", ",", "h_", ",", "h_"}], "}"}]}], "]"}], ",", "8", ",", 
    "\n", "\t\t", 
    RowBox[{"MemberQ", "[", 
     RowBox[{
      RowBox[{"{", "list", "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"h_", ",", "0", ",", "0"}], "}"}]}], "]"}], ",", "6", ",", 
    "\n", "\t\t", 
    RowBox[{"MemberQ", "[", 
     RowBox[{
      RowBox[{"{", "list", "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "k_", ",", "0"}], "}"}]}], "]"}], ",", "6", ",", 
    "\n", "\t\t", 
    RowBox[{"MemberQ", "[", 
     RowBox[{
      RowBox[{"{", "list", "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "l_"}], "}"}]}], "]"}], ",", "6", ",", 
    "\n", "\t\t", 
    RowBox[{"MemberQ", "[", 
     RowBox[{
      RowBox[{"{", "list", "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"h_", ",", "h_", ",", 
        RowBox[{"0", "_"}]}], "}"}]}], "]"}], ",", "12", ",", "\n", "\t\t", 
    RowBox[{"MemberQ", "[", 
     RowBox[{
      RowBox[{"{", "list", "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"0", "_"}], ",", "k_", ",", "k_"}], "}"}]}], "]"}], ",", "12",
     ",", "\n", "\t\t", 
    RowBox[{"MemberQ", "[", 
     RowBox[{
      RowBox[{"{", "list", "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"h_", ",", "k_", ",", "0"}], "}"}]}], "]"}], ",", "24", ",", 
    "\n", "\t\t", 
    RowBox[{"MemberQ", "[", 
     RowBox[{
      RowBox[{"{", "list", "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"h_", ",", "0", ",", "l_"}], "}"}]}], "]"}], ",", "24", ",", 
    "\n", "\t\t", 
    RowBox[{"MemberQ", "[", 
     RowBox[{
      RowBox[{"{", "list", "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "k_", ",", "l_"}], "}"}]}], "]"}], ",", "24", ",", 
    "\n", "\t\t", 
    RowBox[{"MemberQ", "[", 
     RowBox[{
      RowBox[{"{", "list", "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"h_", ",", "h_", ",", "l_"}], "}"}]}], "]"}], ",", "24", ",", 
    "\t", "\n", "\t\t", 
    RowBox[{"MemberQ", "[", 
     RowBox[{
      RowBox[{"{", "list", "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"h_", ",", "k_", ",", "l_"}], "}"}]}], "]"}], ",", "48"}], 
   "]"}]}]], "Code",
 CellChangeTimes->{{3.7715159743356857`*^9, 3.7715160433200064`*^9}, {
  3.771516077001703*^9, 3.771516092442743*^9}, {3.7715161875136604`*^9, 
  3.771516190286127*^9}, {3.771518417856404*^9, 3.7715184380343013`*^9}, {
  3.771518519687236*^9, 3.7715185318341236`*^9}, {3.771518597014485*^9, 
  3.7715186723264756`*^9}, {3.771518786047434*^9, 3.7715187938031535`*^9}, {
  3.771518969203664*^9, 3.7715189921745706`*^9}, {3.7715190384071503`*^9, 
  3.771519153919752*^9}},
 CellLabel->
  "In[725]:=",ExpressionUUID->"72710084-d642-4547-816b-96dc9d94a610"],

Cell["Here is an example:", "Text",
 CellChangeTimes->{{3.771931634453294*^9, 
  3.771931640450248*^9}},ExpressionUUID->"cfcbd32d-8ebc-43b7-a113-\
eb259a3707cd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"multiplicity", "[", 
  RowBox[{"{", 
   RowBox[{"1", ",", "1", ",", "1"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.771671454783617*^9, 3.77167146899641*^9}, {
  3.7716715065774117`*^9, 3.7716715075770793`*^9}},
 CellLabel->
  "In[742]:=",ExpressionUUID->"df2b75d7-f4e4-4969-94ba-3754e09974ad"],

Cell[BoxData["8"], "Output",
 CellChangeTimes->{{3.771671461797263*^9, 3.7716714694987426`*^9}, 
   3.771671507967068*^9, 3.771755681352937*^9, 3.77182330604982*^9, 
   3.7719312367645035`*^9},
 CellLabel->
  "Out[742]=",ExpressionUUID->"4f4b2f0d-9a74-4d5a-a9cb-7e6cf434775b"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Intensity Calculation", "Section",
 CellChangeTimes->{{3.7716221627733316`*^9, 
  3.771622167656309*^9}},ExpressionUUID->"26c1226a-25e8-40d0-bf2f-\
f242e5a8cad0"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
7NpOX64x7eSjY0xp1r/UpSj17ZNVW6Krb1tkrxSZm/FppCcyjevPfk0fHyJq
KXzWoRXodbC9sup7H3ket71JfuRfkzKu4dysv57lN1x17Xt572KKnuHWnE+T
Z5GCerQAAGyev2ympqB8NquodNBO+dRxUFlWoCeb7HSwy2pi0sEuS/zFdNC+
v3bW5SyeDl6sp4XKoKulg2aZrnlH6ogko9tRJJEoMzd6lh/i+rNnS/Q6yGcd
ptK9Dsp7qPpu6CXn/GzudT7+NhvuuVl/OTVzfjfzdd5rzdnroN6m+b0ZbxkA
gK0Ll83UVJTPZhSTDvbakapSljp2gUxooXSwe/iL6aBdAna2HiqeDtp1Fgu1
2VktHTS35mO8O7O2gX5QJJEoMzf9qaIGRYPrz75NT2qiltI+4LOOwr0ONt9Q
V6M+e3tOR+WD7l4H1dVNp4zNb4yOc04/mClfBwAAqMSVzdSUlM9mE5kO3o0n
Kj2RxyKY3GWng11GFF7GSK4TOe99pINmv/ue3/ZLp4O9JSeUQuV23kqMrFwy
Heyd4WpuKhHPShQ23hMZZTyF68/e2U9nWgafdWhFex08qqvho3+t1A8i+hEc
73VQnh/VnO/ta4HWx905WWCUFABIZ/SvUNUDfsm7e76PgB2KL5upqSmfzSQy
HbRHJjmr3C9YXyw7HezqfKQlkKXTQXPe4/nTw78f5k4He6URT4lyhnTQatMc
t77qfZ5xgJc9Ota05p58NXPPHIvZqM9Zol/5InMz9hbtqwTXn/2bntRELYXP
OrSCvQ5+6gTPM0XMeFt6bsZrR3UFtkeXG0xlTF/0DAeANGp8wfE/3bkjA/Yk
rWym3kH5bBZx6WC/ppi66wzeKy6SDg5qNUZvR1peN9qSR62pZ7uylxbo0XF0
673l3/LpYO+ciOwJqdnKEnUHJx8dz9Yc1Xsz20vrOWWmi3PMjZ7ITFx/9m96
UhO1FD7r0Ar0OmiWgkfvAvTRfSTMTU8rr2y9OvH6m81xzS17hgNAvObXjKq+
4FWc5LOj/PdmjSPIWOTATqSXzdS7KJ/NoC5DRUx36b0Qc2+amw52mVcw77Pu
pkung2ar5dHSpbpGeXpfzE67olrq9mp0enuBnCUdNGsPRpYd1Ke4yMjK049O
b2rzDK9LeZl1JfSDyIx3ibnN2bP8t+H68wsW7nWQzzqm9zpoXtEdR09/D4Wv
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
wHciHSxFpV07SAf16Ay12eoPikv7cK29ErH1G1u3wbomnHPftF35jDM9UEvW
eI+dD5JTZeN8BAAAAIDvRDpYiurDcRfpYLMttc+M/Q82D9fbL8Gtn7HuZLE1
jT7nvme7Ju2PWnQ2qN5ntnIlHczG+QgAAAAA34l0sBQ1DsJe0kGzNtVMIwZs
Nx1UrR4f847cXGg9E8+5b9muzL3R9Zn5Tn5v9wnZ6d5ZAucjAAAAAHwn0sFS
VG99O0kH5TuMJzOt04bTwW+x5XNuaVb9v1Pyuw+6t02yqmycjwAAAADwnUgH
y2iyiY2WjDPSwY/xJDlriVoC6eBE2z7nltaNgZ3Wqli/vx3NhHQwE+cjAAAA
AHwr0sEymvxtoyXjjHTwZTyZpVcw0sGptn3OLas7m6SIkYpH5tCOkkE6mInz
EQAAAAC+FelgCTpZ2GjJmHRwf7Z+zi3JaBecWXNQzeWp/kc6mIXzEQAAAAC+
F+lgCbpV40ZLxhnp4Nt4QsviDdr6Obckq+bgOXsu9agmpINZOB8BAAAA4HuR
Dk7X1DmqbLRkPLHfwcMs60Q6OMH2z7klGXtjwtnajNRNOpiB8xEAAAAAvtk8
6aA4iIt4yHlXGdNH/v8hnwdK7fI9f+IkznLKq7h3U6t53aTwHE7yfe0y37K8
evX1QCbne5RLrJd3s1vPyterZd7lf1d/WiDfb9aye8q59pTbq/lS00HdSjD4
jpwj3bwzOh2Ua3PVy/inObIRGU7+GaXODPXOvP0dJ3u7ss+5tO3K/BQX+FQl
7seD8eQ9aU7VP95eC5f6Zlv623Dw7rNxZlbn5sN9zDgfAQAAAODblU8HZWms
rUdSl+C6MubTVT610qiamlKW7e7Gax93q8GmVWClKgkHl2mVZytNBiaXeLXq
zdXLvY7M4c/qm89l0AtaU0MpzqSsw1hmajp4NZ44M4WcI228OyodFCe9l19y
rg/juL18LZ7zzqjhsR+dd4EjmLdd2edc1Hb19l/GsZ3+qcphtSueVHOtSovK
7pOc83D5b0PrvQfj26Jainnc3va5yfkIAAAAAPtQOh3U5debWWaTZbtb8/A+
+q7R8rAsw1Wlu6c4Scbrg3f/NSW9j1k3RL7alidHaqaMlxub5TzEuVm+keEM
5nCO2iHDkvHJelqV3qt0yNT99ZN/JKxlJqWD1hgPzlo9eUfamDIiHWxSjmcv
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
    "], {{0, 324}, {2575, 0}}, {0, 255},
    ColorFunction->GrayLevel],
   BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{2575, 324},
  PlotRange->{{0, 2575}, {0, 324}}]], "Input",ExpressionUUID->"162ec7bc-051b-\
4800-b02c-b0325c0fe9b6"],

Cell["\<\
This intensity function gives the intensity for each peak, and does so by \
multiplying three factors: Lorentz Polarization correction, multiplicity, and \
the square of the  structure factor.\
\>", "Text",
 CellChangeTimes->{{3.771930820281658*^9, 
  3.7719308699969163`*^9}},ExpressionUUID->"13c09ed7-bea0-435b-8d4a-\
d676e9ab0e50"],

Cell[BoxData[
 RowBox[{
  RowBox[{"intensity", "[", 
   RowBox[{"w_", ",", "elementlist_", ",", "n_"}], "]"}], " ", ":=", 
  RowBox[{"Transpose", "@", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"association", "[", 
        RowBox[{
         RowBox[{"Flatten", " ", "@", " ", "elementlist"}], ",", "n", ",", 
         "w"}], "]"}], "//", "Keys"}], ")"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{".5", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"Cos", "[", "#", "]"}], ")"}], "^", "2"}]}], ")"}], 
           "/", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"#", "/", "2"}], "]"}], "^", "2"}], " ", "*", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"#", "/", "2"}], "]"}]}], ")"}]}]}], ")"}], "&"}], " ", 
       "/@", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"association", "[", 
          RowBox[{
           RowBox[{"Flatten", " ", "@", " ", "elementlist"}], ",", "n", ",", 
           "w"}], "]"}], " ", "//", "Keys"}], ")"}]}], " ", "*", 
      "\[IndentingNewLine]", 
      RowBox[{"(", 
       RowBox[{"multiplicity", "/@", " ", 
        RowBox[{"(", 
         RowBox[{"Last", "/@", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"association", "[", 
             RowBox[{
              RowBox[{"Flatten", " ", "@", " ", "elementlist"}], ",", "n", 
              ",", "w"}], "]"}], "//", "Values"}], ")"}]}], ")"}]}], ")"}], 
      "*", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"structurefactor", "[", 
         RowBox[{"elementlist", ",", "w", ",", 
          RowBox[{"(", 
           RowBox[{"association", "[", 
            RowBox[{
             RowBox[{"Flatten", " ", "@", " ", "elementlist"}], ",", "n", ",",
              "w"}], "]"}], ")"}]}], "]"}], ")"}], " ", "^", "2"}]}]}], " ", 
    "}"}]}]}]], "Input",
 CellChangeTimes->{{3.7716293820695033`*^9, 3.7716293857008796`*^9}, {
  3.771790916881616*^9, 3.7717909531410503`*^9}, {3.771929366079246*^9, 
  3.771929389562689*^9}},
 CellLabel->
  "In[733]:=",ExpressionUUID->"ca8d0233-2008-4c47-86e3-df994b255169"],

Cell["Here is an example:", "Text",
 CellChangeTimes->{{3.771930878015224*^9, 3.7719308808908434`*^9}, 
   3.7719339844643517`*^9},ExpressionUUID->"07036a55-d56a-4da9-8940-\
a0adf4aebb9c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"intensity", "[", 
  RowBox[{"1.54", ",", 
   RowBox[{"{", 
    RowBox[{"{", "\"\<Cu\>\"", "}"}], "}"}], ",", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.7717797801318846`*^9, 3.77177979198244*^9}, {
  3.7717799014317303`*^9, 3.7717799261732993`*^9}, {3.771780774424502*^9, 
  3.77178077801008*^9}},
 CellLabel->
  "In[735]:=",ExpressionUUID->"dca5dc21-e2d5-4a9b-a14e-b3396808f347"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.7557353728245907`", ",", "509100.436659419`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.8801659843040213`", ",", "242597.53723485128`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.2931983150020574`", ",", "147611.35510355167`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.6598443506814893`", ",", "55657.51494201003`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.7717797924968348`*^9, {3.771779902894621*^9, 3.771779927931013*^9}, 
   3.7717800413505917`*^9, 3.771780778998669*^9, 3.771790910369299*^9, 
   3.7718233044174814`*^9, 3.7719308841545153`*^9},
 CellLabel->
  "Out[735]=",ExpressionUUID->"c77ac22c-070b-481d-a83d-af3ccefe8df6"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Getting the Final Plot ", "Subsubsection",
 CellChangeTimes->{{3.771930903151041*^9, 3.7719309090888286`*^9}, {
  3.77193109669298*^9, 3.771931099492423*^9}, {3.771931186004485*^9, 
  3.771931186445659*^9}},ExpressionUUID->"95503b08-ac8c-4ae3-93bb-\
0e9a75d347f3"],

Cell["\<\
\[OpenCurlyDoubleQuote]peak\[CloseCurlyDoubleQuote] takes a set of theta \
values and their respective intensities, which are given by the \
\[OpenCurlyDoubleQuote]intensity\[CloseCurlyDoubleQuote] function. An \
arbitrary peak shape was chosen, and the -10000 is an arbitrary constant. If \
Rietveld refinement were to be used, this constant would be optimized and \
peak shape would change as well.\
\>", "Text",
 CellChangeTimes->{{3.7719340361056347`*^9, 
  3.771934152493411*^9}},ExpressionUUID->"226255e4-e414-41f2-a277-\
df2136b503ee"],

Cell[BoxData[
 RowBox[{
  RowBox[{"peak", "[", 
   RowBox[{"{", 
    RowBox[{"theta_", ",", "intensity_"}], "}"}], "]"}], " ", ":=", "  ", 
  RowBox[{"intensity", " ", "*", " ", 
   RowBox[{"Exp", "[", 
    RowBox[{
     RowBox[{"-", "10000"}], " ", "Pi", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"t", " ", "-", "theta"}], ")"}], "^", "2"}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7716918826430817`*^9, 3.771691966405819*^9}, {
   3.771691998529254*^9, 3.7716920055308733`*^9}, {3.7716920565916195`*^9, 
   3.771692080091121*^9}, {3.771692111395405*^9, 3.7716921830118484`*^9}, {
   3.771692362982411*^9, 3.7716923712905455`*^9}, {3.7716924434494314`*^9, 
   3.7716924472204657`*^9}, {3.771692569047431*^9, 3.771692571712531*^9}, {
   3.771692691781839*^9, 3.7716927203347535`*^9}, {3.771693633022581*^9, 
   3.7716936332732515`*^9}, {3.77169377914517*^9, 3.771693800127968*^9}, {
   3.771693939947793*^9, 3.771693940459157*^9}, {3.771693997002519*^9, 
   3.771693997133873*^9}, {3.7716942641659937`*^9, 3.77169426545442*^9}, {
   3.7717803294623547`*^9, 3.7717803303778105`*^9}, {3.7717804099432487`*^9, 
   3.771780420430094*^9}, {3.771789309239482*^9, 3.7717893101980457`*^9}, 
   3.7717893847011685`*^9, {3.771789446402274*^9, 3.7717894601096954`*^9}, {
   3.771789592026551*^9, 3.7717896074846096`*^9}, {3.7717898458066206`*^9, 
   3.771789863370345*^9}, {3.7718642674755683`*^9, 3.7718642688491755`*^9}, {
   3.771864417300216*^9, 3.771864418256712*^9}},
 CellLabel->
  "In[695]:=",ExpressionUUID->"d0993003-ae42-4f9e-bd0e-f6c91aecc4ae"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"peak", "[", "#", "]"}], " ", "&"}], " ", "/@", " ", 
   RowBox[{"intensity", "[", 
    RowBox[{"1.54", ",", 
     RowBox[{"{", 
      RowBox[{"{", "\"\<Ag\>\"", "}"}], "}"}], ",", "2"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7716921994735947`*^9, 3.7716922956543627`*^9}, {
   3.771692386144004*^9, 3.77169239681839*^9}, {3.7716924898919144`*^9, 
   3.771692546882458*^9}, {3.77169257948917*^9, 3.7716925903039827`*^9}, {
   3.771692727793558*^9, 3.7716927534738894`*^9}, {3.771693529673746*^9, 
   3.77169353121284*^9}, 3.7716937868446455`*^9, {3.77169397476342*^9, 
   3.7716939877910233`*^9}, {3.7717802222532587`*^9, 
   3.7717802678224773`*^9}, {3.7717805196599765`*^9, 
   3.7717805197672615`*^9}, {3.7717806337247486`*^9, 
   3.7717806340175805`*^9}, {3.7717807181212273`*^9, 
   3.7717807494886026`*^9}, {3.771782380795719*^9, 3.771782393678928*^9}, {
   3.7717825079933414`*^9, 3.7717825401759663`*^9}, {3.7717829449703455`*^9, 
   3.7717829488316126`*^9}, {3.7717831542559533`*^9, 3.771783157026266*^9}, {
   3.771787886126376*^9, 3.7717879388946667`*^9}, {3.771789222752483*^9, 
   3.7717892642257447`*^9}, {3.7717893621552043`*^9, 3.7717893755359707`*^9}, 
   3.7717909759697495`*^9, {3.771791240254348*^9, 3.7717912648497653`*^9}, {
   3.771791296477713*^9, 3.7717913096266856`*^9}, {3.7717913518891892`*^9, 
   3.771791373910714*^9}, {3.771791422702469*^9, 3.7717914607727137`*^9}, {
   3.771792104196596*^9, 3.771792126980074*^9}, {3.771845614047965*^9, 
   3.771845620196318*^9}, {3.771845740442319*^9, 3.7718457405917096`*^9}, {
   3.771846204096836*^9, 3.771846204384607*^9}, 3.7718462781497207`*^9, {
   3.7718463279742594`*^9, 3.7718463519938984`*^9}, {3.771846391038744*^9, 
   3.771846391214158*^9}, {3.7718464293886833`*^9, 3.77184644960347*^9}, {
   3.771849091401713*^9, 3.77184911705894*^9}, {3.7718797700387883`*^9, 
   3.771879808035426*^9}, {3.771879840484309*^9, 3.7718798406507425`*^9}, {
   3.7718800139265404`*^9, 3.7718800343879633`*^9}, {3.771880132438718*^9, 
   3.7718801403898664`*^9}, {3.771880263912343*^9, 3.7718802728882203`*^9}, {
   3.7718803543850336`*^9, 3.7718803686800456`*^9}, 3.7719309286187625`*^9, {
   3.771930986185999*^9, 3.771931000695006*^9}, {3.771931085069067*^9, 
   3.771931085401956*^9}, 3.7719312095701933`*^9},
 CellLabel->
  "In[740]:=",ExpressionUUID->"53883983-3cee-40d7-8e68-a1d83e7d3013"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"2.886571246777273`*^6", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "10000"}], " ", "\[Pi]", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "0.6651077909835222`"}], "+", "t"}], ")"}], "2"]}]]}], 
   ",", 
   RowBox[{"1.436303246930156`*^6", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "10000"}], " ", "\[Pi]", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "0.7730267511957`"}], "+", "t"}], ")"}], "2"]}]]}], ",", 
   RowBox[{"986120.511417468`", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "10000"}], " ", "\[Pi]", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.1245298032724205`"}], "+", "t"}], ")"}], "2"]}]]}], 
   ",", 
   RowBox[{"362361.99361338397`", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "10000"}], " ", "\[Pi]", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.422856205298927`"}], "+", "t"}], ")"}], "2"]}]]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.771880370178062*^9, 3.7719309916960754`*^9, 
  3.77193108661517*^9, 3.7719312103051405`*^9},
 CellLabel->
  "Out[740]=",ExpressionUUID->"4713e1ad-1d5f-4130-a4d4-286d1518e3e3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Quiet", "[", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Total", "[", "p", "]"}], "/.", 
     RowBox[{"t", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"x", "/", "90"}], "*", 
        RowBox[{"Pi", "/", "2"}]}], ")"}]}]}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"x", ",", "30", ",", "80"}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
    RowBox[{"AxesLabel", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{"\"\<2 theta\>\"", ",", "\"\<Intensity\>\""}], "}"}]}]}], "]"}],
   "]"}]], "Input",
 CellChangeTimes->{{3.7716925953072877`*^9, 3.771692637811267*^9}, {
  3.771692668110885*^9, 3.7716926711168914`*^9}, {3.771692711769946*^9, 
  3.7716927128608475`*^9}, {3.771692768675316*^9, 3.7716927694754124`*^9}, {
  3.7717828819898834`*^9, 3.771782910377392*^9}, {3.771783225355029*^9, 
  3.7717832608042526`*^9}, {3.7718458033625975`*^9, 3.771845803886035*^9}, {
  3.771846466108364*^9, 3.771846466302883*^9}, {3.7718491393442183`*^9, 
  3.7718491978547697`*^9}, {3.771855539790887*^9, 3.771855540013432*^9}, {
  3.7718803905338564`*^9, 3.7718803997915154`*^9}, {3.7718805742916517`*^9, 
  3.7718805779002423`*^9}},
 CellLabel->
  "In[741]:=",ExpressionUUID->"e238e39b-aae3-4be2-8707-089f4a15e411"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
i7AwZGoUAb9PxJ09lQyXfvIIME5qASXD/pv0fTK4J3ZPXn1hAHSOrNPGGWSI
Zr9z4i4rHvTqDD/qZjLx0Ja6e7SRCMKhzdpq2WQQTPjgLzBgDst45zuyj8jQ
QL/tLKtkDf3ryytiuUy9tls+inc/Am8rbjnw55NhV4JzieJRJ3jgJ1+7rZAM
wx5+DgItpyHUsFzp32MyNKbrPDk5ex5OLlpGLz0lA8n7wWfBPd5Aej45+/MZ
M+8KozsUFK+AsscVxpcSZh4InX/9+XIocGnxlw++IEMbR9zXfp8omJnJkeoq
JUMEkdrY0RsDLQXGYR9fk+FnS1rK6HoCPHPt+FpbToaXgp9fh8reg3hFV/OK
SjJk9w0fsL+fAd4T689K3pJhv/05z+zhh3A4K0GooJqZNzVRlsZz+WDkqOKf
WcPMW/FrUueNn4GkVNVQch0ZzM0wRibLS9jot8Zu15OhauLkq9imMhi5N50b
1UCGtQN54cIPq6DGNoQnuImJ1++b0k+c6uChkLCHz0cyFL3KbpF43gCRnYVd
51rIkH/L486VL83gGocaubQx8UNPvXot0Ammlp/T7TuYeR5TP/D0Qzeo855j
tf5EhoUHkyYHDfuB7wOLq1k3Ger7v9+gXByB+WvJH6GHDBcvCvHMmU7AJ5Km
jlEfGdii6FzfRr9CKVvdHZ0BMsi9Jj8U45uB5Bq7VeUhpn6jfUqzJmbBP+SX
g/QIUw+TxW6NB36DPS6iVmSMDIpFqkVd7kuA+yuuzDdBhvtSgg53eNdApvxZ
NMcXZh4lkH/uV9sENl/S3PpXMujg6Ni5KRbsi/4AY/EbU/9Ha26Jh7JjDQse
5TPfyUA15j2Lc92GFRRz7pn4QYaju4fFOTO4segL98P6f5EhxeqLkKAqH3Ze
Q3eqY46px17eUeUoAczqe4N50wIZWCNOsU8+FMT25jsUv1skwxgra1jdL2FM
8PRvobIlMhw6VmL+6rQY9kf+hv+zFeZ8p/4ac/BIYhUPXmIZ62Q4ZXNocH+n
DJbuYJaXtEmGpZBwCW8/OSxEcpTn1hazHzP14wfEFDBCMk93ADsFvi37RNVf
VcYUbbKMLnFSQHth0yGNoIptE9yX4b6dAj/7rCtieNSxj7HOrkd4KfDcPxn7
kaqFPT248pHGRwGOhLMCdUd0sNvcsTpUfgpU+pi0forai3k2yichuyiAJWq9
+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
tcWAj0HC5Zu2Iuj/APcpbsQ=
       "]]},
     Annotation[#, "Charting`Private`Tag$4844601#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"2 theta\"", TraditionalForm], 
    FormBox["\"Intensity\"", TraditionalForm]},
  AxesOrigin->{Automatic, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.771692617944435*^9, {3.771692671791689*^9, 3.7716927141011467`*^9}, {
   3.771692759299374*^9, 3.771692770175304*^9}, 3.771693536758584*^9, 
   3.771693647234375*^9, {3.771693789617016*^9, 3.7716938130112276`*^9}, {
   3.771693954264867*^9, 3.7716940077871995`*^9}, 3.7716942808252945`*^9, 
   3.7716951085630503`*^9, 3.7717556810190477`*^9, 3.7717802722923207`*^9, {
   3.771780317713149*^9, 3.7717803426644993`*^9}, 3.771780457628029*^9, {
   3.771780511662777*^9, 3.7717805239073024`*^9}, 3.771780637784546*^9, 
   3.7717811680562553`*^9, 3.7717823983954706`*^9, {3.771782512037094*^9, 
   3.77178253478158*^9}, {3.7717828856115255`*^9, 3.7717829115705576`*^9}, 
   3.771783160787307*^9, 3.7717832741417294`*^9, {3.7717879017408967`*^9, 
   3.771787917036539*^9}, 3.771787948576415*^9, {3.7717892286862707`*^9, 
   3.771789268690647*^9}, 3.7717893337967496`*^9, {3.77178937026576*^9, 
   3.77178939345139*^9}, {3.7717894565953417`*^9, 3.771789472174984*^9}, 
   3.7717895992146587`*^9, {3.771789855460292*^9, 3.7717898722830315`*^9}, 
   3.771790981091408*^9, 3.771791271413207*^9, 3.771823305797162*^9, 
   3.7718234029865713`*^9, {3.771845611288581*^9, 3.7718456264489326`*^9}, 
   3.7718457440188184`*^9, 3.771845804790393*^9, 3.771846208235835*^9, 
   3.7718463886934543`*^9, {3.771846441193065*^9, 3.7718464668894367`*^9}, {
   3.771849094867896*^9, 3.771849120212329*^9}, {3.7718491706003065`*^9, 
   3.771849198332073*^9}, 3.771855541139423*^9, 3.771864424317832*^9, {
   3.7718797883244095`*^9, 3.7718798111432714`*^9}, {3.7718800247302723`*^9, 
   3.771880038382588*^9}, {3.771880375091604*^9, 3.7718804006096544`*^9}, 
   3.7719309948675385`*^9, 3.7719310897795887`*^9, 3.771931217093192*^9},
 CellLabel->
  "Out[741]=",ExpressionUUID->"270f3630-6fe8-47d7-9762-94ee4a738b78"]
}, Open  ]],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
6mRd98Np6/7jJ8Nn6r6VLKCK4P0J5+HxkcIj7iwsJe8S2NreHhgcunevB6Yv
sL75G5tbz56/uHu3BdbU1CzjTL7/+Cl78YpKDxd+Ao2NtxoaGmHQx/WNTVjc
6SabnZvv6emDNTY2dnR0vnn7Hubqste3VL5sbm1LF1hbW7uMH3C93vT3LwJ1
n5CkwMUIhcP6ExDdr6mqFt1PlJ/hMEwa8EWXf/z8tbK6as/XP5rd/+HjJw3E
9/HT5+WV1cR0/tU10f1Pn0ekg2Bo6MHI6JicpK62bm7+OwyHo84AQ8nT1dUN
293b0xLP1eNJf5+kQ8wI7yyuPd5qfUU7O7u0M12+vHn7DturK6tgTU1NRwEo
2jtEAfEOd3R2wWQIin6XBiv8gqTbC5UBOfBafX1iIGsFpLRi+OkzHTwj9WHJ
m1w3FArLuD7ovuw9PBmLUuvVFyd93ae/b1H3SUkTN9pC8buWyDn4FQzdfwBD
gu1tPwxOEDZK0H4Nxvvq9Rspvvr6+uHpy0Yk0GJTulNRbD589BiGA2uv1krD
JoReJy7JtH2UPEfz98MR78g9/S91n5xJQlvtAfYFqvv2iP+C1X36+xZ1n5Q0
l637Ozu7p+q+Ux6mr/v090k6RCL7x8s62Eiwqfq6elhPT6++e1tb27Dbt2/j
BZbxpRubm42Nt2BIL135q2vr8krX1dYhMV5pGFS+tbUNhtdVAk8hAeQbtr6x
if9Kt9ft203a7WW+pfIF2wtQ90vG3z8T6j4pT0xVxZd/yyuwmzduSiem378j
yZZXVn/+WkDhCfsyMSnT/KW/XgrPv0v/JMYvSs5Pn0dg418mpJ0/7kz8n5v/
Pv/9x+8/f2UNXwHbRe7x05Ne1PjRNKsDmQOl06Lp75M0iTtuvkwFjdvd/XW1
tSJtvb39+sKsrW/ARPUkDDVUT6oHqKPi/YfhFyEH1lRVB4JBeZkT4Sa6e2Bx
u59LurpE97EF77kc0tLSGrAxr4ifklwLPxb27+cR6j4pT5y20KMByVJaDg7e
l0Lg/YePkkx+IK4pxlbKljR1z/V70nHO0zOzci04R1oliNlRUySgirhm9PdJ
+lyq7suI/aS6397eka7ur6x6dV8rt3oXHM9/qVD3SXmiui+/9OzqvnVyOlKG
um8PA2D/PkkfV3gcobW1Tdrej4Li2kF7JPaOLAMtEaXCkYi080P6Zano7W3/
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
dBm9Zzzr3XS0cyWphfJ6JJujgVPOAnvqVzbOpEYDomRyU8Pdy8+tvmWxRqa9
oBqoIEU40wOMnGOQvs//Sjn1qwcNFGP9fFDNV7SY1bQ4Wk6rhiOnyzaiIlXf
VCXSv3rKX6SWm1KjLC0pkXzPrVFhc8qeSUVwX7WcRLcuKtqtavFcYymbmU2a
OFo5KUw+5+d8qWibI4pGxUzrQCPJFKElPbxxqNy0v5/ssGH7+/ZdXmTWS5Hm
sKSmkc555ldkrKTGilgrVwIAkrXGxk4yNUXsFP96eynda2uX9WsLLbU4UePW
qngtSlvBfvLEFGhhrZA6NS0L05KnpdbiRYWNmwKGc/9mBGZYmVhASQtcuZUl
V8w8qWRmryzop9GqQHFKto1EyagCE2cKNmBssfGoQo5KFNGrNmq+l09lcknw
0Qjuc4pQsOyWMlA/BYiqV1aKF7hrVGIxrQnKQ1OlTWd7ObCbI4rMki6mYjwa
ZaC4YIvnduNQuTjuO8/fvsuLHI1d0t+l5jyTLO4vurg+D/erzywP95f/11Im
PC1VJj+UllScqN24z/+qyef/zRSmJc96tIz7BXgJuG9bgdWK2OK+0e3FNYP7
+RTlNvDMhtA0t0UoM5/R8nA/XZaCEsindGOJ24n7tTy00N9vlLEilCOKzJKm
PZBGGSgu2OK53ThULhbPf+DAQa0Wz1TRRvVSnIqk6eU8/ZWSWcSht7QcpnK6
TRLloov0AuqCBVxq6VqjInJoC7W3vI3SNO5WrfPOhRWzbn11VFkNVB3ARK25
Vdfz9pV2CTaqh1dlvqCcywW8u/Q4vyeZRkKLslpQxTt1ykwq5YajFKzcVDVV
RW0u6uYO7AyC9zlPmOUsy5yWbaMKWialc1JeOu5nitSWJUf+yyyOlwG7TQc3
SFyoXzucrqDIKHNaDpl/0yVtlLEWpNcoWT28GPr7K0Llprif7NKTv44vR2mj
wp3f4gkq2Uyl8t4q1U/x61vqZtpfi7fQpQq5UYZz2kWmqNPFX1JOGlG7ypuf
SDrD82Z5tUrEhxe5jNH1OXmzVGwXjqZC9rJkAaJ4kZsKLa4HhSiFO3Ex3Neo
lH1LttFmtUiWmpJ69N6GP3FtxW4pjfvKA3/VTS/xKMvgp6usLQVpVPtFVCgz
Y5lybqpsLRfHy8B8soM9mC6xvq6KSA/FRCknp+BHizyzVOk1kqH3mEqRKe2l
ZmBJD28cKq8I7relaaRznk48nT0P9/WtTNxvoXQFhZxPUb0XJMqXavr5lqld
5c1PxGv4kcP9qL7fxIeXifv5f71Kl7WMUnZyOUKLs0AhWve4708ce3XaMu7b
IrelIE3bV0FdSr+b+ZUcai3/NgNlh/vc5b4e98sO9zMGW7zUCn60yDPFpefp
v/cJr/YD7q8AlZvhPk8E0zi/J/ymWpSu2UZ/iyTi5TxTqWrNhJPIJs9oMtyB
VkGwtblmN3ZaKrY5SVPBZpbdU+xGDSHnizntaDm0/PIWSUTEnJfcCpE4Gat8
8fIVmEe9kEr1+y3HuRsst0Y5Jrotgm0qqLR9thlI5yqTWq6INCnQZd7FEuDm
8xcvwS9f/ZMZruB9dGHN9PczU15q28l8PrMIBWu85fzHbodM2mFu3PT63zdy
z9L5bK88vYwtVXppmedUTTm3JbaQk0CWys1wn+v4qnF9DdbxNdWT/PotmEg6
51GD+f0oq6FNTU2/efuOB0Q+ffZcH/UCoZpmIzMzabJPeplMO7SZGc78XH4i
LdPyy5uTiJf5ONW1j5ODm7d1b9u+bftvAxdlx+ZNp8a7aBd5WhQtxaS0ptXp
RBpJT7/a3KbzGafaV/FqTVN6hwT09Pv7T4J37dyVxv30V2woYME8eNJoby17
KS+17ZRN96RRNTWlZeacpGhOyoeHgO/evYcHOsRZM5VphVlOVouUNC29Rsrp
3fTkHKVaYsuNtIVs//RUXh7uR8UaabRS/f0cV2R1cT9qBtkFP5efSMu0/PLm
JGKfKefiPnjlcd+jJRW5Ba1Op1BugI/6NZ3bKIX7Ua7lLE6rjvuN2m/L5KW8
1LZjZd6omppSW3LeCPc//veJuJ9WubTCLCerRUraSHqeGDN/8h5oJIf0T/kZ
aCHbPz3FbiO7yAl23hxDNj5RXcfX09PrtcdktGnBu9mIGlWxpaaJFKFFt/da
VFveUm0ss7Nzd+7e46HST/566m0/uOAsVVuyERdeZp5W+CJlpMnSerf51Hl8
6W2LVoCKV7F1sehPvnv/YVNnJ/j4iX6bmq714ooVp0jbic1UkV4smyVX6akK
S3avleU0DRtgv9hghV2BRKoKo9rRiyf6T4K7Nm+xRy6WUofLFPScPYW3VG5r
f79cf7oNRZS5DVGRdrcWSM0cYr90+Qq4s6ODxwbNm8MH7foLj9qSjUbGSpVY
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
UH50Fshf/29CfJtP2tjFZw==
    "], {{0, 575}, {680, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{680, 575},
  PlotRange->{{0, 680}, {0, 575}}]], "Input",ExpressionUUID->"bb45f1fa-45b0-\
42a7-a8fe-234299acfc41"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Summary", "Section",
 CellChangeTimes->{{3.7719341597514853`*^9, 
  3.7719341700129957`*^9}},ExpressionUUID->"cdc9d5f1-578e-4c2f-8fdd-\
4315cd2ce345"],

Cell["\<\
In this project, simple mathematical models of XRD were used to predict \
various XRD patterns, for both unary and binary systems. For unary systems, \
the peaks and relative intensities were predicted with high accuracy. \
However, binary systems showed mediocre results, as relative intensities were \
often wrong. Attempts at effective prediction of lattice structure from first \
principles failed. Multiplicities were manually entered instead of being \
computed, however, crystallographic point groups showed significant promise \
in computing multiplicities. The crystallographic point group approach was \
not feasible given the two week time constraint.\
\>", "Text",
 CellChangeTimes->{{3.7719341761523223`*^9, 3.7719342794841175`*^9}, {
  3.771934350304448*^9, 3.771934409893913*^9}, {3.7719344478583965`*^9, 
  3.771934554153067*^9}, {3.7719345930264435`*^9, 
  3.771934642164116*^9}},ExpressionUUID->"e160926b-ee8b-45d6-b08f-\
4bb60bd90f1e"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Future Work", "Section",
 CellChangeTimes->{{3.7719316487442985`*^9, 
  3.771931655767975*^9}},ExpressionUUID->"74eb7b05-eb17-4122-96d4-\
7f6fdd9b6bf7"],

Cell["\<\
Thanks to Mr. Wolfram, I certainly have a lot to do this summer! The eventual \
goal of this project is to create software with a simple UI, ie the user has \
to type in as little data as possible, that can predict the XRD pattern of \
complex inorganic lattice structures. This software would be used by \
scientists and industry experts alike to have reference patterns for \
experimental results. The first step in realizing this goal is improving \
accuracy for binary systems, and expanding from only cubic structures to more \
complex structures such as hexagonal and monoclinic lattice structures. More \
complicated multiatomic structures will then be implemented as well.

Perhaps the most ambitious of my future plans is doing the inverse problem: \
predicting the lattice structure from a given XRD pattern using machine \
learning. Ideally, a machine learning algorithm would be trained on a large \
dataset generated by the expanded XRD prediction software, and eventually be \
tested on the Inorganic Crystal Structure Database (ICSD).
\
\>", "Text",
 CellChangeTimes->{{3.7719316832079463`*^9, 3.7719316904644027`*^9}, {
   3.7719347413511066`*^9, 3.7719351696045094`*^9}, 
   3.771935211909284*^9},ExpressionUUID->"2dd07d66-f9a9-4164-a4e0-\
0e55ca631328"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Acknowledgements", "Section",
 CellChangeTimes->{{3.7719316988084373`*^9, 
  3.7719317024591446`*^9}},ExpressionUUID->"8373a7e9-3801-4094-b932-\
1d4c5a50da7a"],

Cell["\<\
I would like to thank my mentor, Eryn Gillam, for helping me throughout my \
project. I would also like to thank the other mentors for their help, and \
Mohammad Bahrami for his lectures. Wolfram Summer Camp truly gave me an \
outlet to express my creativity in novel ways, and the two weeks I spent here \
were invaluable. Wolfram Summer Camp gave me a novel perspective on how to \
approach all aspects of life, and key insight into how computational thinking \
can change the world. For these reasons and more, I am beyond grateful to \
have been a part of this camp, and am looking forward to apply my new skills.
\
\>", "Text",
 CellChangeTimes->{
  3.7719317055403385`*^9},ExpressionUUID->"88867a43-0447-43d0-b07b-\
1f49607555f9"]
}, Open  ]],

Cell[CellGroupData[{

Cell["References", "Section",
 CellChangeTimes->{{3.7719324539453974`*^9, 
  3.7719324987525153`*^9}},ExpressionUUID->"6b503ff4-5cd1-4c61-af87-\
573f2734766d"],

Cell["\<\
- Miller indices pictures. Miller Indices Felix Kling.svg. (n.d.). Retrieved \
from WikiMedia\
\>", "Text",
 CellChangeTimes->{{3.7719328477322335`*^9, 3.7719328484210663`*^9}, {
  3.7719328803250027`*^9, 
  3.7719328968830366`*^9}},ExpressionUUID->"4f7c1e40-3d4a-4500-867d-\
6bf20b2596d4"],

Cell["\<\
- Predicted vs Experimental Silver XRD Pattern. Experimental plot obtained \
from: Koohpeima, Fatemeh & Mokhtari, Mohammad & Samaneh, KHALAFI. (2017). The \
effect of silver nanoparticles on composite shear bond strength to dentin \
with different adhesion protocols. Journal of Applied Oral Science. 25. \
367-373. 10.1590/1678-7757-2016-0391.\
\>", "Text",
 CellChangeTimes->{{3.7719328330642247`*^9, 
  3.7719328384104433`*^9}},ExpressionUUID->"0028e849-d65f-4176-af7d-\
5a0dc90fa84d"],

Cell["", "Text",
 CellChangeTimes->{{3.771932841599925*^9, 
  3.771932843596243*^9}},ExpressionUUID->"345a4a56-e5b6-4af3-b141-\
e4995155c37d"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1536, 781},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
DockedCells->{
  Cell[
   TextData[{
     StyleBox["  WOLFRAM ", 
      RGBColor[0.97, 0.83, 0.35], FontFamily -> "Source Sans Pro", FontWeight -> 
      Bold, FontSize -> 40], 
     StyleBox["SUMMER SCHOOL", 
      GrayLevel[1], FontFamily -> "Source Sans Pro", FontSize -> 40], 
     StyleBox[" 2019", 
      RGBColor[0.97, 0.83, 0.35], FontFamily -> "Source Sans Pro", FontSize -> 
      40]}], CellFrameMargins -> 10, Background -> 
   RGBColor[0.12, 0.14, 0.15]]},
FrontEndVersion->"12.0 for Microsoft Windows (64-bit) (April 11, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 318, 6, 96, "Title",ExpressionUUID->"49ab34ee-bfd5-49f5-beef-400d3cc456dd"],
Cell[901, 30, 405, 6, 34, "Text",ExpressionUUID->"94536f76-3fd2-4bf6-b228-fa93ec9acae9"],
Cell[1309, 38, 411, 6, 34, "Text",ExpressionUUID->"b70c649b-a958-4202-9f22-238ea1f9c7d4"],
Cell[CellGroupData[{
Cell[1745, 48, 206, 4, 67, "Section",ExpressionUUID->"b08a98e2-b40f-4f5d-9ad5-e711958fef0b"],
Cell[1954, 54, 924, 15, 100, "Text",ExpressionUUID->"14cb3bdf-8b0b-4cc9-a982-e48fe11e164d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2915, 74, 282, 4, 67, "Section",ExpressionUUID->"7d4341a5-0ac5-4f4a-b9c5-e7ffa378cbaa"],
Cell[CellGroupData[{
Cell[3222, 82, 164, 3, 44, "Subsubsection",ExpressionUUID->"b717b4d9-4f09-4acb-b6be-75d804a4e0dd"],
Cell[3389, 87, 199, 3, 37, "CodeText",ExpressionUUID->"4f8a5b6e-097f-4983-9ac2-ee442e67cce4"],
Cell[3591, 92, 380, 9, 28, "Input",ExpressionUUID->"911ea834-3f6e-4c09-bb65-00028af673b8"],
Cell[3974, 103, 252, 4, 37, "CodeText",ExpressionUUID->"d6285229-36bf-45a3-8bd0-7fdc7a5b06ff"],
Cell[4229, 109, 1082, 27, 28, "Input",ExpressionUUID->"09e29dab-39c4-4fa4-968f-bd06b3aaa148"],
Cell[5314, 138, 164, 3, 37, "CodeText",ExpressionUUID->"a9aba1e8-3e82-4f7f-b932-b99a1d49623c"],
Cell[CellGroupData[{
Cell[5503, 145, 258, 5, 28, "Input",ExpressionUUID->"317b98f0-733c-4d5e-8bf3-c45e925ddd92"],
Cell[5764, 152, 60129, 1189, 583, "Output",ExpressionUUID->"0baee190-cb5d-40d7-a314-509afa09f17b"]
}, Open  ]],
Cell[65908, 1344, 644, 11, 37, "CodeText",ExpressionUUID->"3d4f1c18-2920-44ba-81f2-56ec41322d67"],
Cell[66555, 1357, 499, 13, 28, "Input",ExpressionUUID->"ed00e4b6-e50b-4155-9d84-7772ba46f551"]
}, Open  ]],
Cell[CellGroupData[{
Cell[67091, 1375, 204, 3, 44, "Subsubsection",ExpressionUUID->"194c0e18-ce9a-4d55-8883-f84e8b67a185"],
Cell[67298, 1380, 4611, 80, 57, "Input",ExpressionUUID->"e60ac750-e27d-48a6-8ca6-d0af35980929"],
Cell[71912, 1462, 247, 6, 34, "Text",ExpressionUUID->"d76f6417-00a2-4666-95aa-c65a70aba063"],
Cell[72162, 1470, 1407, 25, 28, "Input",ExpressionUUID->"bf2351a9-6e08-434c-af2c-7062cd7aafa3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[73606, 1500, 170, 3, 44, "Subsubsection",ExpressionUUID->"07d62227-fd9d-4c1a-9376-8177c3a61759"],
Cell[73779, 1505, 677, 12, 78, "Text",ExpressionUUID->"7f9e57fe-4a97-46a1-afe3-0bf2b1f9a9db"],
Cell[74459, 1519, 6520, 156, 181, "Input",ExpressionUUID->"219af2f9-2273-433c-989d-da146b802861"],
Cell[80982, 1677, 390, 6, 34, "Text",ExpressionUUID->"995df42f-e897-4646-98ca-752015a44f44"],
Cell[CellGroupData[{
Cell[81397, 1687, 397, 8, 28, "Input",ExpressionUUID->"2afe4b09-0303-4561-bdc7-ca53cc044616"],
Cell[81797, 1697, 1247, 33, 32, "Output",ExpressionUUID->"e276dff9-adf0-4ce9-983e-0b057afcf66f"]
}, Open  ]],
Cell[83059, 1733, 413, 8, 34, "Text",ExpressionUUID->"7feb00cb-7583-4000-9442-704a9ee4cb71"],
Cell[83475, 1743, 1224, 30, 28, "Input",ExpressionUUID->"4127e5d6-fefb-4e03-a122-337c76521e81"],
Cell[84702, 1775, 188, 3, 34, "Text",ExpressionUUID->"4a5686b0-fe35-4fc7-b9ea-a1e2079b8b89"],
Cell[CellGroupData[{
Cell[84915, 1782, 692, 13, 28, "Input",ExpressionUUID->"0439b2be-318d-4fd3-8377-606093c4d276"],
Cell[85610, 1797, 1551, 46, 55, "Output",ExpressionUUID->"afb0029b-bf99-4fad-b81a-62aa5944917d"]
}, Open  ]],
Cell[87176, 1846, 533, 9, 56, "Text",ExpressionUUID->"ff156f3a-3b4c-4780-abc9-eac1637e6b1f"],
Cell[87712, 1857, 2678, 63, 67, "Input",ExpressionUUID->"12e91e60-818a-4b12-b7df-63ef899fead8"],
Cell[90393, 1922, 287, 7, 34, "Text",ExpressionUUID->"a5053a14-cc4f-433c-b001-25b72b02b0ea"],
Cell[90683, 1931, 1420, 29, 28, "Input",ExpressionUUID->"e612b39f-8d25-459a-aabd-6d4c911c5c05"],
Cell[92106, 1962, 211, 4, 34, "Text",ExpressionUUID->"381925e3-ad10-4830-a161-f94bd4ea6715"],
Cell[CellGroupData[{
Cell[92342, 1970, 769, 14, 28, "Input",ExpressionUUID->"c9d2bbe7-5b31-4700-819e-99e0f82a3428"],
Cell[93114, 1986, 2420, 61, 52, "Output",ExpressionUUID->"1f9c0847-e517-4c57-ad94-59ad55419af8"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[95595, 2054, 166, 3, 67, "Section",ExpressionUUID->"7f0ecf9d-26e5-412e-9829-8a04a30f6884"],
Cell[95764, 2059, 248, 6, 37, "CodeText",ExpressionUUID->"273fb397-f835-4cb6-87e2-baa0ca7c91a3"],
Cell[CellGroupData[{
Cell[96037, 2069, 331, 7, 28, "Input",ExpressionUUID->"24ab5fbb-d832-4626-8d62-f56a95ee583d"],
Cell[96371, 2078, 513, 10, 32, "Output",ExpressionUUID->"46ba41e1-81b1-4b96-bb66-19a8b3d01eb0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[96921, 2093, 414, 9, 28, "Input",ExpressionUUID->"802d1a27-9ab5-4c9b-9c7e-fa364e0b58d8"],
Cell[97338, 2104, 105966, 2234, 561, "Output",ExpressionUUID->"efdfeb08-84c6-434d-91ad-61309f725745"]
}, Open  ]],
Cell[203319, 4341, 165, 3, 37, "CodeText",ExpressionUUID->"7422e88c-0282-4416-8fda-a81daedd83f7"],
Cell[203487, 4346, 281, 7, 28, "Input",ExpressionUUID->"adc11658-09d1-4a44-ad41-827700c389ad"],
Cell[CellGroupData[{
Cell[203793, 4357, 274, 6, 28, "Input",ExpressionUUID->"b482ffde-2999-4311-8490-c8ebe5a76192"],
Cell[204070, 4365, 503, 9, 32, "Output",ExpressionUUID->"59bcff04-262d-42b6-a6d3-6c679eda3b71"]
}, Open  ]],
Cell[204588, 4377, 347, 8, 28, "Input",ExpressionUUID->"b4118835-f365-4c7d-99aa-f76000695e5b"],
Cell[204938, 4387, 172, 3, 37, "CodeText",ExpressionUUID->"7271def5-0f82-4c05-9c44-547b85bd903c"],
Cell[205113, 4392, 454, 13, 28, "Input",ExpressionUUID->"9fd5fcb6-0d46-4100-b022-82f90a3f0c1a"],
Cell[205570, 4407, 268, 6, 28, "Input",ExpressionUUID->"7c1a1124-f595-4f8a-a837-b214d1a3f8c0"],
Cell[CellGroupData[{
Cell[205863, 4417, 187, 3, 28, "Input",ExpressionUUID->"b27e6995-a3d9-4bb8-9f32-336886eb9170"],
Cell[206053, 4422, 120552, 2522, 583, "Output",ExpressionUUID->"a9abd206-fea0-439b-a91b-becb41fcb504"]
}, Open  ]],
Cell[326620, 6947, 683, 14, 34, "Text",ExpressionUUID->"a9520996-58df-4182-b2ee-5655613b9088"],
Cell[327306, 6963, 598, 18, 28, "Input",ExpressionUUID->"8ebb48e4-a448-46a6-8d74-b196fe63fe41"],
Cell[327907, 6983, 18924, 315, 149, "Input",ExpressionUUID->"2fd07078-6674-46dc-baf9-0993661c55f8"],
Cell[346834, 7300, 286, 6, 37, "CodeText",ExpressionUUID->"90eb2b4e-2107-4b48-bed5-12e3f4cee7dd"],
Cell[347123, 7308, 3145, 75, 124, "Input",ExpressionUUID->"58d0652d-ee34-411b-953e-c41e41fb3dde"],
Cell[350271, 7385, 306, 5, 37, "CodeText",ExpressionUUID->"1c54d701-eca6-40f0-86c6-d9ea2f61343c"],
Cell[CellGroupData[{
Cell[350602, 7394, 295, 7, 28, "Input",ExpressionUUID->"926baf90-a48d-44cd-905c-a42e62846c35"],
Cell[350900, 7403, 5233, 107, 218, "Output",ExpressionUUID->"99d1965c-1066-40f1-afbe-c5a1af2b45d0"]
}, Open  ]],
Cell[356148, 7513, 239, 4, 34, "Text",ExpressionUUID->"097995a7-08c0-4ee8-b373-75ee3049c2b5"],
Cell[CellGroupData[{
Cell[356412, 7521, 799, 16, 28, "Input",ExpressionUUID->"3f90bcb2-6c8e-4cca-bda6-a4ceec4d354e"],
Cell[357214, 7539, 688, 12, 32, "Output",ExpressionUUID->"81bb9533-e619-4136-861f-65242d166454"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[357951, 7557, 177, 3, 67, "Section",ExpressionUUID->"e9d1877f-166a-4eaa-aa05-f4a5c4d77cd7"],
Cell[358131, 7562, 394, 8, 34, "Text",ExpressionUUID->"97062da3-70d4-47ed-a0fa-f0536f2975b7"],
Cell[358528, 7572, 1472, 31, 28, "Input",ExpressionUUID->"992c7a6f-ac4a-4e43-a3d9-64768412474d"],
Cell[360003, 7605, 15221, 255, 310, "Text",ExpressionUUID->"0190eb18-ad82-4ba7-a93b-a0446334fb0a"],
Cell[375227, 7862, 371, 7, 34, "Text",ExpressionUUID->"34e58840-997c-40b0-9462-e6de205ec070"],
Cell[375601, 7871, 3422, 83, 143, "Input",ExpressionUUID->"86be91f4-5af5-40f1-9692-470f13f0ac55"],
Cell[CellGroupData[{
Cell[379048, 7958, 162, 3, 53, "Subsection",ExpressionUUID->"380c5410-3a56-43bf-9083-88922195efa3"],
Cell[379213, 7963, 251, 6, 34, "Text",ExpressionUUID->"eac93eea-a561-498f-b678-17c1d6353932"],
Cell[379467, 7971, 163151, 2679, 910, "Input",ExpressionUUID->"721f43aa-f8da-44b7-bc0a-2aedf709f4f3"],
Cell[542621, 10652, 284, 6, 34, "Text",ExpressionUUID->"748e2540-c4dd-4fa8-90dc-8389104789a2"],
Cell[542908, 10660, 1092, 19, 100, "Text",ExpressionUUID->"1a328594-6df5-4148-bbca-7b17bf5ab63f"],
Cell[544003, 10681, 2926, 80, 267, "Code",ExpressionUUID->"72710084-d642-4547-816b-96dc9d94a610"],
Cell[546932, 10763, 161, 3, 34, "Text",ExpressionUUID->"cfcbd32d-8ebc-43b7-a113-eb259a3707cd"],
Cell[CellGroupData[{
Cell[547118, 10770, 323, 7, 28, "Input",ExpressionUUID->"df2b75d7-f4e4-4969-94ba-3754e09974ad"],
Cell[547444, 10779, 276, 5, 32, "Output",ExpressionUUID->"4f4b2f0d-9a74-4d5a-a9cb-7e6cf434775b"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[547781, 10791, 168, 3, 67, "Section",ExpressionUUID->"26c1226a-25e8-40d0-bf2f-f242e5a8cad0"],
Cell[547952, 10796, 35414, 584, 173, "Input",ExpressionUUID->"162ec7bc-051b-4800-b02c-b0325c0fe9b6"],
Cell[583369, 11382, 344, 7, 34, "Text",ExpressionUUID->"13c09ed7-bea0-435b-8d4a-d676e9ab0e50"],
Cell[583716, 11391, 2323, 65, 67, "Input",ExpressionUUID->"ca8d0233-2008-4c47-86e3-df994b255169"],
Cell[586042, 11458, 188, 3, 34, "Text",ExpressionUUID->"07036a55-d56a-4da9-8940-a0adf4aebb9c"],
Cell[CellGroupData[{
Cell[586255, 11465, 407, 9, 28, "Input",ExpressionUUID->"dca5dc21-e2d5-4a9b-a14e-b3396808f347"],
Cell[586665, 11476, 733, 17, 32, "Output",ExpressionUUID->"c77ac22c-070b-481d-a83d-af3ccefe8df6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[587435, 11498, 270, 4, 44, "Subsubsection",ExpressionUUID->"95503b08-ac8c-4ae3-93bb-0e9a75d347f3"],
Cell[587708, 11504, 552, 10, 56, "Text",ExpressionUUID->"226255e4-e414-41f2-a277-df2136b503ee"],
Cell[588263, 11516, 1568, 29, 28, "Input",ExpressionUUID->"d0993003-ae42-4f9e-bd0e-f6c91aecc4ae"],
Cell[CellGroupData[{
Cell[589856, 11549, 2432, 39, 28, "Input",ExpressionUUID->"53883983-3cee-40d7-8e68-a1d83e7d3013"],
Cell[592291, 11590, 1403, 41, 44, "Output",ExpressionUUID->"4713e1ad-1d5f-4130-a4d4-286d1518e3e3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[593731, 11636, 1290, 28, 28, "Input",ExpressionUUID->"e238e39b-aae3-4be2-8707-089f4a15e411"],
Cell[595024, 11666, 24719, 422, 217, "Output",ExpressionUUID->"270f3630-6fe8-47d7-9762-94ee4a738b78"]
}, Open  ]],
Cell[619758, 12091, 75599, 1244, 588, "Input",ExpressionUUID->"bb45f1fa-45b0-42a7-a8fe-234299acfc41"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[695406, 13341, 156, 3, 67, "Section",ExpressionUUID->"cdc9d5f1-578e-4c2f-8fdd-4315cd2ce345"],
Cell[695565, 13346, 964, 15, 78, "Text",ExpressionUUID->"e160926b-ee8b-45d6-b08f-4bb60bd90f1e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[696566, 13366, 158, 3, 67, "Section",ExpressionUUID->"74eb7b05-eb17-4122-96d4-7f6fdd9b6bf7"],
Cell[696727, 13371, 1281, 21, 166, "Text",ExpressionUUID->"2dd07d66-f9a9-4164-a4e0-0e55ca631328"]
}, Open  ]],
Cell[CellGroupData[{
Cell[698045, 13397, 165, 3, 67, "Section",ExpressionUUID->"8373a7e9-3801-4094-b932-1d4c5a50da7a"],
Cell[698213, 13402, 746, 13, 100, "Text",ExpressionUUID->"88867a43-0447-43d0-b07b-1f49607555f9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[698996, 13420, 159, 3, 67, "Section",ExpressionUUID->"6b503ff4-5cd1-4c61-af87-573f2734766d"],
Cell[699158, 13425, 300, 7, 34, "Text",ExpressionUUID->"4f7c1e40-3d4a-4500-867d-6bf20b2596d4"],
Cell[699461, 13434, 498, 9, 56, "Text",ExpressionUUID->"0028e849-d65f-4176-af7d-5a0dc90fa84d"],
Cell[699962, 13445, 142, 3, 34, "Text",ExpressionUUID->"345a4a56-e5b6-4af3-b141-e4995155c37d"]
}, Open  ]]
}, Open  ]]
}
]
*)

